# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.ads.google_ads.v2.proto.common.asset_types_pb2 import (
    ImageAsset as google___ads___googleads___v2___common___asset_types_pb2___ImageAsset,
    MediaBundleAsset as google___ads___googleads___v2___common___asset_types_pb2___MediaBundleAsset,
    TextAsset as google___ads___googleads___v2___common___asset_types_pb2___TextAsset,
    YoutubeVideoAsset as google___ads___googleads___v2___common___asset_types_pb2___YoutubeVideoAsset,
)

from google.ads.google_ads.v2.proto.enums.asset_type_pb2 import (
    AssetTypeEnum as google___ads___googleads___v2___enums___asset_type_pb2___AssetTypeEnum,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.protobuf.wrappers_pb2 import (
    Int64Value as google___protobuf___wrappers_pb2___Int64Value,
    StringValue as google___protobuf___wrappers_pb2___StringValue,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class Asset(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    resource_name = ... # type: typing___Text
    type = ... # type: google___ads___googleads___v2___enums___asset_type_pb2___AssetTypeEnum.AssetType

    @property
    def id(self) -> google___protobuf___wrappers_pb2___Int64Value: ...

    @property
    def name(self) -> google___protobuf___wrappers_pb2___StringValue: ...

    @property
    def youtube_video_asset(self) -> google___ads___googleads___v2___common___asset_types_pb2___YoutubeVideoAsset: ...

    @property
    def media_bundle_asset(self) -> google___ads___googleads___v2___common___asset_types_pb2___MediaBundleAsset: ...

    @property
    def image_asset(self) -> google___ads___googleads___v2___common___asset_types_pb2___ImageAsset: ...

    @property
    def text_asset(self) -> google___ads___googleads___v2___common___asset_types_pb2___TextAsset: ...

    def __init__(self,
        *,
        resource_name : typing___Optional[typing___Text] = None,
        id : typing___Optional[google___protobuf___wrappers_pb2___Int64Value] = None,
        name : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
        type : typing___Optional[google___ads___googleads___v2___enums___asset_type_pb2___AssetTypeEnum.AssetType] = None,
        youtube_video_asset : typing___Optional[google___ads___googleads___v2___common___asset_types_pb2___YoutubeVideoAsset] = None,
        media_bundle_asset : typing___Optional[google___ads___googleads___v2___common___asset_types_pb2___MediaBundleAsset] = None,
        image_asset : typing___Optional[google___ads___googleads___v2___common___asset_types_pb2___ImageAsset] = None,
        text_asset : typing___Optional[google___ads___googleads___v2___common___asset_types_pb2___TextAsset] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Asset: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"asset_data",u"id",u"image_asset",u"media_bundle_asset",u"name",u"text_asset",u"youtube_video_asset"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"asset_data",u"id",u"image_asset",u"media_bundle_asset",u"name",u"resource_name",u"text_asset",u"type",u"youtube_video_asset"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"asset_data",b"asset_data",u"id",b"id",u"image_asset",b"image_asset",u"media_bundle_asset",b"media_bundle_asset",u"name",b"name",u"text_asset",b"text_asset",u"youtube_video_asset",b"youtube_video_asset"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"asset_data",b"asset_data",u"id",b"id",u"image_asset",b"image_asset",u"media_bundle_asset",b"media_bundle_asset",u"name",b"name",u"resource_name",b"resource_name",u"text_asset",b"text_asset",u"type",b"type",u"youtube_video_asset",b"youtube_video_asset"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"asset_data",b"asset_data"]) -> typing_extensions___Literal["youtube_video_asset","media_bundle_asset","image_asset","text_asset"]: ...

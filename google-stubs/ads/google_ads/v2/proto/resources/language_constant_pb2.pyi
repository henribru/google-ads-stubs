# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.protobuf.wrappers_pb2 import (
    BoolValue as google___protobuf___wrappers_pb2___BoolValue,
    Int64Value as google___protobuf___wrappers_pb2___Int64Value,
    StringValue as google___protobuf___wrappers_pb2___StringValue,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class LanguageConstant(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    resource_name = ... # type: typing___Text

    @property
    def id(self) -> google___protobuf___wrappers_pb2___Int64Value: ...

    @property
    def code(self) -> google___protobuf___wrappers_pb2___StringValue: ...

    @property
    def name(self) -> google___protobuf___wrappers_pb2___StringValue: ...

    @property
    def targetable(self) -> google___protobuf___wrappers_pb2___BoolValue: ...

    def __init__(self,
        *,
        resource_name : typing___Optional[typing___Text] = None,
        id : typing___Optional[google___protobuf___wrappers_pb2___Int64Value] = None,
        code : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
        name : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
        targetable : typing___Optional[google___protobuf___wrappers_pb2___BoolValue] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> LanguageConstant: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"code",u"id",u"name",u"targetable"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"code",u"id",u"name",u"resource_name",u"targetable"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"code",b"code",u"id",b"id",u"name",b"name",u"targetable",b"targetable"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"code",b"code",u"id",b"id",u"name",b"name",u"resource_name",b"resource_name",u"targetable",b"targetable"]) -> None: ...

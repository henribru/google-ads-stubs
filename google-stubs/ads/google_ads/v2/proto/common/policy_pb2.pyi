# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.ads.google_ads.v2.proto.enums.policy_topic_entry_type_pb2 import (
    PolicyTopicEntryTypeEnum as google___ads___googleads___v2___enums___policy_topic_entry_type_pb2___PolicyTopicEntryTypeEnum,
)

from google.ads.google_ads.v2.proto.enums.policy_topic_evidence_destination_mismatch_url_type_pb2 import (
    PolicyTopicEvidenceDestinationMismatchUrlTypeEnum as google___ads___googleads___v2___enums___policy_topic_evidence_destination_mismatch_url_type_pb2___PolicyTopicEvidenceDestinationMismatchUrlTypeEnum,
)

from google.ads.google_ads.v2.proto.enums.policy_topic_evidence_destination_not_working_device_pb2 import (
    PolicyTopicEvidenceDestinationNotWorkingDeviceEnum as google___ads___googleads___v2___enums___policy_topic_evidence_destination_not_working_device_pb2___PolicyTopicEvidenceDestinationNotWorkingDeviceEnum,
)

from google.ads.google_ads.v2.proto.enums.policy_topic_evidence_destination_not_working_dns_error_type_pb2 import (
    PolicyTopicEvidenceDestinationNotWorkingDnsErrorTypeEnum as google___ads___googleads___v2___enums___policy_topic_evidence_destination_not_working_dns_error_type_pb2___PolicyTopicEvidenceDestinationNotWorkingDnsErrorTypeEnum,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import Message as google___protobuf___message___Message

from google.protobuf.wrappers_pb2 import (
    Int32Value as google___protobuf___wrappers_pb2___Int32Value,
    Int64Value as google___protobuf___wrappers_pb2___Int64Value,
    StringValue as google___protobuf___wrappers_pb2___StringValue,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Union as typing___Union,
)

from typing_extensions import Literal as typing_extensions___Literal

builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode

class PolicyViolationKey(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    @property
    def policy_name(self) -> google___protobuf___wrappers_pb2___StringValue: ...
    @property
    def violating_text(self) -> google___protobuf___wrappers_pb2___StringValue: ...
    def __init__(
        self,
        *,
        policy_name: typing___Optional[
            google___protobuf___wrappers_pb2___StringValue
        ] = None,
        violating_text: typing___Optional[
            google___protobuf___wrappers_pb2___StringValue
        ] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> PolicyViolationKey: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> PolicyViolationKey: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "policy_name", b"policy_name", "violating_text", b"violating_text"
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "policy_name", b"policy_name", "violating_text", b"violating_text"
        ],
    ) -> None: ...

global___PolicyViolationKey = PolicyViolationKey

class PolicyValidationParameter(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    @property
    def ignorable_policy_topics(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        google___protobuf___wrappers_pb2___StringValue
    ]: ...
    @property
    def exempt_policy_violation_keys(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        global___PolicyViolationKey
    ]: ...
    def __init__(
        self,
        *,
        ignorable_policy_topics: typing___Optional[
            typing___Iterable[google___protobuf___wrappers_pb2___StringValue]
        ] = None,
        exempt_policy_violation_keys: typing___Optional[
            typing___Iterable[global___PolicyViolationKey]
        ] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> PolicyValidationParameter: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> PolicyValidationParameter: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "exempt_policy_violation_keys",
            b"exempt_policy_violation_keys",
            "ignorable_policy_topics",
            b"ignorable_policy_topics",
        ],
    ) -> None: ...

global___PolicyValidationParameter = PolicyValidationParameter

class PolicyTopicEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    type = (
        ...
    )  # type: google___ads___googleads___v2___enums___policy_topic_entry_type_pb2___PolicyTopicEntryTypeEnum.PolicyTopicEntryType
    @property
    def topic(self) -> google___protobuf___wrappers_pb2___StringValue: ...
    @property
    def evidences(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        global___PolicyTopicEvidence
    ]: ...
    @property
    def constraints(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        global___PolicyTopicConstraint
    ]: ...
    def __init__(
        self,
        *,
        topic: typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
        type: typing___Optional[
            google___ads___googleads___v2___enums___policy_topic_entry_type_pb2___PolicyTopicEntryTypeEnum.PolicyTopicEntryType
        ] = None,
        evidences: typing___Optional[
            typing___Iterable[global___PolicyTopicEvidence]
        ] = None,
        constraints: typing___Optional[
            typing___Iterable[global___PolicyTopicConstraint]
        ] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> PolicyTopicEntry: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> PolicyTopicEntry: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(
        self, field_name: typing_extensions___Literal["topic", b"topic"]
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "constraints",
            b"constraints",
            "evidences",
            b"evidences",
            "topic",
            b"topic",
            "type",
            b"type",
        ],
    ) -> None: ...

global___PolicyTopicEntry = PolicyTopicEntry

class PolicyTopicEvidence(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class TextList(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        @property
        def texts(
            self,
        ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
            google___protobuf___wrappers_pb2___StringValue
        ]: ...
        def __init__(
            self,
            *,
            texts: typing___Optional[
                typing___Iterable[google___protobuf___wrappers_pb2___StringValue]
            ] = None,
        ) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(cls, s: builtin___bytes) -> PolicyTopicEvidence.TextList: ...
        else:
            @classmethod
            def FromString(
                cls,
                s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode],
            ) -> PolicyTopicEvidence.TextList: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["texts", b"texts"]
        ) -> None: ...
    global___TextList = TextList
    class WebsiteList(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        @property
        def websites(
            self,
        ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
            google___protobuf___wrappers_pb2___StringValue
        ]: ...
        def __init__(
            self,
            *,
            websites: typing___Optional[
                typing___Iterable[google___protobuf___wrappers_pb2___StringValue]
            ] = None,
        ) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(
                cls, s: builtin___bytes
            ) -> PolicyTopicEvidence.WebsiteList: ...
        else:
            @classmethod
            def FromString(
                cls,
                s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode],
            ) -> PolicyTopicEvidence.WebsiteList: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["websites", b"websites"]
        ) -> None: ...
    global___WebsiteList = WebsiteList
    class DestinationTextList(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        @property
        def destination_texts(
            self,
        ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
            google___protobuf___wrappers_pb2___StringValue
        ]: ...
        def __init__(
            self,
            *,
            destination_texts: typing___Optional[
                typing___Iterable[google___protobuf___wrappers_pb2___StringValue]
            ] = None,
        ) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(
                cls, s: builtin___bytes
            ) -> PolicyTopicEvidence.DestinationTextList: ...
        else:
            @classmethod
            def FromString(
                cls,
                s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode],
            ) -> PolicyTopicEvidence.DestinationTextList: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "destination_texts", b"destination_texts"
            ],
        ) -> None: ...
    global___DestinationTextList = DestinationTextList
    class DestinationMismatch(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        url_types = (
            ...
        )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[google___ads___googleads___v2___enums___policy_topic_evidence_destination_mismatch_url_type_pb2___PolicyTopicEvidenceDestinationMismatchUrlTypeEnum.PolicyTopicEvidenceDestinationMismatchUrlType]
        def __init__(
            self,
            *,
            url_types: typing___Optional[
                typing___Iterable[
                    google___ads___googleads___v2___enums___policy_topic_evidence_destination_mismatch_url_type_pb2___PolicyTopicEvidenceDestinationMismatchUrlTypeEnum.PolicyTopicEvidenceDestinationMismatchUrlType
                ]
            ] = None,
        ) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(
                cls, s: builtin___bytes
            ) -> PolicyTopicEvidence.DestinationMismatch: ...
        else:
            @classmethod
            def FromString(
                cls,
                s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode],
            ) -> PolicyTopicEvidence.DestinationMismatch: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["url_types", b"url_types"]
        ) -> None: ...
    global___DestinationMismatch = DestinationMismatch
    class DestinationNotWorking(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        device = (
            ...
        )  # type: google___ads___googleads___v2___enums___policy_topic_evidence_destination_not_working_device_pb2___PolicyTopicEvidenceDestinationNotWorkingDeviceEnum.PolicyTopicEvidenceDestinationNotWorkingDevice
        dns_error_type = (
            ...
        )  # type: google___ads___googleads___v2___enums___policy_topic_evidence_destination_not_working_dns_error_type_pb2___PolicyTopicEvidenceDestinationNotWorkingDnsErrorTypeEnum.PolicyTopicEvidenceDestinationNotWorkingDnsErrorType
        @property
        def expanded_url(self) -> google___protobuf___wrappers_pb2___StringValue: ...
        @property
        def last_checked_date_time(
            self,
        ) -> google___protobuf___wrappers_pb2___StringValue: ...
        @property
        def http_error_code(self) -> google___protobuf___wrappers_pb2___Int64Value: ...
        def __init__(
            self,
            *,
            expanded_url: typing___Optional[
                google___protobuf___wrappers_pb2___StringValue
            ] = None,
            device: typing___Optional[
                google___ads___googleads___v2___enums___policy_topic_evidence_destination_not_working_device_pb2___PolicyTopicEvidenceDestinationNotWorkingDeviceEnum.PolicyTopicEvidenceDestinationNotWorkingDevice
            ] = None,
            last_checked_date_time: typing___Optional[
                google___protobuf___wrappers_pb2___StringValue
            ] = None,
            dns_error_type: typing___Optional[
                google___ads___googleads___v2___enums___policy_topic_evidence_destination_not_working_dns_error_type_pb2___PolicyTopicEvidenceDestinationNotWorkingDnsErrorTypeEnum.PolicyTopicEvidenceDestinationNotWorkingDnsErrorType
            ] = None,
            http_error_code: typing___Optional[
                google___protobuf___wrappers_pb2___Int64Value
            ] = None,
        ) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(
                cls, s: builtin___bytes
            ) -> PolicyTopicEvidence.DestinationNotWorking: ...
        else:
            @classmethod
            def FromString(
                cls,
                s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode],
            ) -> PolicyTopicEvidence.DestinationNotWorking: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "dns_error_type",
                b"dns_error_type",
                "expanded_url",
                b"expanded_url",
                "http_error_code",
                b"http_error_code",
                "last_checked_date_time",
                b"last_checked_date_time",
                "reason",
                b"reason",
            ],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "device",
                b"device",
                "dns_error_type",
                b"dns_error_type",
                "expanded_url",
                b"expanded_url",
                "http_error_code",
                b"http_error_code",
                "last_checked_date_time",
                b"last_checked_date_time",
                "reason",
                b"reason",
            ],
        ) -> None: ...
        def WhichOneof(
            self, oneof_group: typing_extensions___Literal["reason", b"reason"]
        ) -> typing_extensions___Literal["dns_error_type", "http_error_code"]: ...
    global___DestinationNotWorking = DestinationNotWorking
    @property
    def website_list(self) -> global___PolicyTopicEvidence.WebsiteList: ...
    @property
    def text_list(self) -> global___PolicyTopicEvidence.TextList: ...
    @property
    def language_code(self) -> google___protobuf___wrappers_pb2___StringValue: ...
    @property
    def destination_text_list(
        self,
    ) -> global___PolicyTopicEvidence.DestinationTextList: ...
    @property
    def destination_mismatch(
        self,
    ) -> global___PolicyTopicEvidence.DestinationMismatch: ...
    @property
    def destination_not_working(
        self,
    ) -> global___PolicyTopicEvidence.DestinationNotWorking: ...
    def __init__(
        self,
        *,
        website_list: typing___Optional[
            global___PolicyTopicEvidence.WebsiteList
        ] = None,
        text_list: typing___Optional[global___PolicyTopicEvidence.TextList] = None,
        language_code: typing___Optional[
            google___protobuf___wrappers_pb2___StringValue
        ] = None,
        destination_text_list: typing___Optional[
            global___PolicyTopicEvidence.DestinationTextList
        ] = None,
        destination_mismatch: typing___Optional[
            global___PolicyTopicEvidence.DestinationMismatch
        ] = None,
        destination_not_working: typing___Optional[
            global___PolicyTopicEvidence.DestinationNotWorking
        ] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> PolicyTopicEvidence: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> PolicyTopicEvidence: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "destination_mismatch",
            b"destination_mismatch",
            "destination_not_working",
            b"destination_not_working",
            "destination_text_list",
            b"destination_text_list",
            "language_code",
            b"language_code",
            "text_list",
            b"text_list",
            "value",
            b"value",
            "website_list",
            b"website_list",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "destination_mismatch",
            b"destination_mismatch",
            "destination_not_working",
            b"destination_not_working",
            "destination_text_list",
            b"destination_text_list",
            "language_code",
            b"language_code",
            "text_list",
            b"text_list",
            "value",
            b"value",
            "website_list",
            b"website_list",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["value", b"value"]
    ) -> typing_extensions___Literal[
        "website_list",
        "text_list",
        "language_code",
        "destination_text_list",
        "destination_mismatch",
        "destination_not_working",
    ]: ...

global___PolicyTopicEvidence = PolicyTopicEvidence

class PolicyTopicConstraint(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class CountryConstraintList(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        @property
        def total_targeted_countries(
            self,
        ) -> google___protobuf___wrappers_pb2___Int32Value: ...
        @property
        def countries(
            self,
        ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
            global___PolicyTopicConstraint.CountryConstraint
        ]: ...
        def __init__(
            self,
            *,
            total_targeted_countries: typing___Optional[
                google___protobuf___wrappers_pb2___Int32Value
            ] = None,
            countries: typing___Optional[
                typing___Iterable[global___PolicyTopicConstraint.CountryConstraint]
            ] = None,
        ) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(
                cls, s: builtin___bytes
            ) -> PolicyTopicConstraint.CountryConstraintList: ...
        else:
            @classmethod
            def FromString(
                cls,
                s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode],
            ) -> PolicyTopicConstraint.CountryConstraintList: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "total_targeted_countries", b"total_targeted_countries"
            ],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "countries",
                b"countries",
                "total_targeted_countries",
                b"total_targeted_countries",
            ],
        ) -> None: ...
    global___CountryConstraintList = CountryConstraintList
    class ResellerConstraint(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        def __init__(self,) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(
                cls, s: builtin___bytes
            ) -> PolicyTopicConstraint.ResellerConstraint: ...
        else:
            @classmethod
            def FromString(
                cls,
                s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode],
            ) -> PolicyTopicConstraint.ResellerConstraint: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
    global___ResellerConstraint = ResellerConstraint
    class CountryConstraint(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        @property
        def country_criterion(
            self,
        ) -> google___protobuf___wrappers_pb2___StringValue: ...
        def __init__(
            self,
            *,
            country_criterion: typing___Optional[
                google___protobuf___wrappers_pb2___StringValue
            ] = None,
        ) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(
                cls, s: builtin___bytes
            ) -> PolicyTopicConstraint.CountryConstraint: ...
        else:
            @classmethod
            def FromString(
                cls,
                s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode],
            ) -> PolicyTopicConstraint.CountryConstraint: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "country_criterion", b"country_criterion"
            ],
        ) -> builtin___bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "country_criterion", b"country_criterion"
            ],
        ) -> None: ...
    global___CountryConstraint = CountryConstraint
    @property
    def country_constraint_list(
        self,
    ) -> global___PolicyTopicConstraint.CountryConstraintList: ...
    @property
    def reseller_constraint(
        self,
    ) -> global___PolicyTopicConstraint.ResellerConstraint: ...
    @property
    def certificate_missing_in_country_list(
        self,
    ) -> global___PolicyTopicConstraint.CountryConstraintList: ...
    @property
    def certificate_domain_mismatch_in_country_list(
        self,
    ) -> global___PolicyTopicConstraint.CountryConstraintList: ...
    def __init__(
        self,
        *,
        country_constraint_list: typing___Optional[
            global___PolicyTopicConstraint.CountryConstraintList
        ] = None,
        reseller_constraint: typing___Optional[
            global___PolicyTopicConstraint.ResellerConstraint
        ] = None,
        certificate_missing_in_country_list: typing___Optional[
            global___PolicyTopicConstraint.CountryConstraintList
        ] = None,
        certificate_domain_mismatch_in_country_list: typing___Optional[
            global___PolicyTopicConstraint.CountryConstraintList
        ] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> PolicyTopicConstraint: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> PolicyTopicConstraint: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "certificate_domain_mismatch_in_country_list",
            b"certificate_domain_mismatch_in_country_list",
            "certificate_missing_in_country_list",
            b"certificate_missing_in_country_list",
            "country_constraint_list",
            b"country_constraint_list",
            "reseller_constraint",
            b"reseller_constraint",
            "value",
            b"value",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "certificate_domain_mismatch_in_country_list",
            b"certificate_domain_mismatch_in_country_list",
            "certificate_missing_in_country_list",
            b"certificate_missing_in_country_list",
            "country_constraint_list",
            b"country_constraint_list",
            "reseller_constraint",
            b"reseller_constraint",
            "value",
            b"value",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["value", b"value"]
    ) -> typing_extensions___Literal[
        "country_constraint_list",
        "reseller_constraint",
        "certificate_missing_in_country_list",
        "certificate_domain_mismatch_in_country_list",
    ]: ...

global___PolicyTopicConstraint = PolicyTopicConstraint

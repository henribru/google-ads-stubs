# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    List as typing___List,
    Tuple as typing___Tuple,
    cast as typing___cast,
)


class DateErrorEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class DateError(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> DateErrorEnum.DateError: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[DateErrorEnum.DateError]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, DateErrorEnum.DateError]]: ...
        UNSPECIFIED = typing___cast(DateErrorEnum.DateError, 0)
        UNKNOWN = typing___cast(DateErrorEnum.DateError, 1)
        INVALID_FIELD_VALUES_IN_DATE = typing___cast(DateErrorEnum.DateError, 2)
        INVALID_FIELD_VALUES_IN_DATE_TIME = typing___cast(DateErrorEnum.DateError, 3)
        INVALID_STRING_DATE = typing___cast(DateErrorEnum.DateError, 4)
        INVALID_STRING_DATE_TIME_MICROS = typing___cast(DateErrorEnum.DateError, 6)
        INVALID_STRING_DATE_TIME_SECONDS = typing___cast(DateErrorEnum.DateError, 11)
        INVALID_STRING_DATE_TIME_SECONDS_WITH_OFFSET = typing___cast(DateErrorEnum.DateError, 12)
        EARLIER_THAN_MINIMUM_DATE = typing___cast(DateErrorEnum.DateError, 7)
        LATER_THAN_MAXIMUM_DATE = typing___cast(DateErrorEnum.DateError, 8)
        DATE_RANGE_MINIMUM_DATE_LATER_THAN_MAXIMUM_DATE = typing___cast(DateErrorEnum.DateError, 9)
        DATE_RANGE_MINIMUM_AND_MAXIMUM_DATES_BOTH_NULL = typing___cast(DateErrorEnum.DateError, 10)
    UNSPECIFIED = typing___cast(DateErrorEnum.DateError, 0)
    UNKNOWN = typing___cast(DateErrorEnum.DateError, 1)
    INVALID_FIELD_VALUES_IN_DATE = typing___cast(DateErrorEnum.DateError, 2)
    INVALID_FIELD_VALUES_IN_DATE_TIME = typing___cast(DateErrorEnum.DateError, 3)
    INVALID_STRING_DATE = typing___cast(DateErrorEnum.DateError, 4)
    INVALID_STRING_DATE_TIME_MICROS = typing___cast(DateErrorEnum.DateError, 6)
    INVALID_STRING_DATE_TIME_SECONDS = typing___cast(DateErrorEnum.DateError, 11)
    INVALID_STRING_DATE_TIME_SECONDS_WITH_OFFSET = typing___cast(DateErrorEnum.DateError, 12)
    EARLIER_THAN_MINIMUM_DATE = typing___cast(DateErrorEnum.DateError, 7)
    LATER_THAN_MAXIMUM_DATE = typing___cast(DateErrorEnum.DateError, 8)
    DATE_RANGE_MINIMUM_DATE_LATER_THAN_MAXIMUM_DATE = typing___cast(DateErrorEnum.DateError, 9)
    DATE_RANGE_MINIMUM_AND_MAXIMUM_DATES_BOTH_NULL = typing___cast(DateErrorEnum.DateError, 10)


    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> DateErrorEnum: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

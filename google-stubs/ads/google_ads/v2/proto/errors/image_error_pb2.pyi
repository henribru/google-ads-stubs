# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import NewType as typing___NewType, cast as typing___cast

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)
from google.protobuf.message import Message as google___protobuf___message___Message

builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class ImageErrorEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ImageErrorValue = typing___NewType("ImageErrorValue", builtin___int)
    type___ImageErrorValue = ImageErrorValue
    ImageError: _ImageError
    class _ImageError(
        google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
            ImageErrorEnum.ImageErrorValue
        ]
    ):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNSPECIFIED = typing___cast(ImageErrorEnum.ImageErrorValue, 0)
        UNKNOWN = typing___cast(ImageErrorEnum.ImageErrorValue, 1)
        INVALID_IMAGE = typing___cast(ImageErrorEnum.ImageErrorValue, 2)
        STORAGE_ERROR = typing___cast(ImageErrorEnum.ImageErrorValue, 3)
        BAD_REQUEST = typing___cast(ImageErrorEnum.ImageErrorValue, 4)
        UNEXPECTED_SIZE = typing___cast(ImageErrorEnum.ImageErrorValue, 5)
        ANIMATED_NOT_ALLOWED = typing___cast(ImageErrorEnum.ImageErrorValue, 6)
        ANIMATION_TOO_LONG = typing___cast(ImageErrorEnum.ImageErrorValue, 7)
        SERVER_ERROR = typing___cast(ImageErrorEnum.ImageErrorValue, 8)
        CMYK_JPEG_NOT_ALLOWED = typing___cast(ImageErrorEnum.ImageErrorValue, 9)
        FLASH_NOT_ALLOWED = typing___cast(ImageErrorEnum.ImageErrorValue, 10)
        FLASH_WITHOUT_CLICKTAG = typing___cast(ImageErrorEnum.ImageErrorValue, 11)
        FLASH_ERROR_AFTER_FIXING_CLICK_TAG = typing___cast(
            ImageErrorEnum.ImageErrorValue, 12
        )
        ANIMATED_VISUAL_EFFECT = typing___cast(ImageErrorEnum.ImageErrorValue, 13)
        FLASH_ERROR = typing___cast(ImageErrorEnum.ImageErrorValue, 14)
        LAYOUT_PROBLEM = typing___cast(ImageErrorEnum.ImageErrorValue, 15)
        PROBLEM_READING_IMAGE_FILE = typing___cast(ImageErrorEnum.ImageErrorValue, 16)
        ERROR_STORING_IMAGE = typing___cast(ImageErrorEnum.ImageErrorValue, 17)
        ASPECT_RATIO_NOT_ALLOWED = typing___cast(ImageErrorEnum.ImageErrorValue, 18)
        FLASH_HAS_NETWORK_OBJECTS = typing___cast(ImageErrorEnum.ImageErrorValue, 19)
        FLASH_HAS_NETWORK_METHODS = typing___cast(ImageErrorEnum.ImageErrorValue, 20)
        FLASH_HAS_URL = typing___cast(ImageErrorEnum.ImageErrorValue, 21)
        FLASH_HAS_MOUSE_TRACKING = typing___cast(ImageErrorEnum.ImageErrorValue, 22)
        FLASH_HAS_RANDOM_NUM = typing___cast(ImageErrorEnum.ImageErrorValue, 23)
        FLASH_SELF_TARGETS = typing___cast(ImageErrorEnum.ImageErrorValue, 24)
        FLASH_BAD_GETURL_TARGET = typing___cast(ImageErrorEnum.ImageErrorValue, 25)
        FLASH_VERSION_NOT_SUPPORTED = typing___cast(ImageErrorEnum.ImageErrorValue, 26)
        FLASH_WITHOUT_HARD_CODED_CLICK_URL = typing___cast(
            ImageErrorEnum.ImageErrorValue, 27
        )
        INVALID_FLASH_FILE = typing___cast(ImageErrorEnum.ImageErrorValue, 28)
        FAILED_TO_FIX_CLICK_TAG_IN_FLASH = typing___cast(
            ImageErrorEnum.ImageErrorValue, 29
        )
        FLASH_ACCESSES_NETWORK_RESOURCES = typing___cast(
            ImageErrorEnum.ImageErrorValue, 30
        )
        FLASH_EXTERNAL_JS_CALL = typing___cast(ImageErrorEnum.ImageErrorValue, 31)
        FLASH_EXTERNAL_FS_CALL = typing___cast(ImageErrorEnum.ImageErrorValue, 32)
        FILE_TOO_LARGE = typing___cast(ImageErrorEnum.ImageErrorValue, 33)
        IMAGE_DATA_TOO_LARGE = typing___cast(ImageErrorEnum.ImageErrorValue, 34)
        IMAGE_PROCESSING_ERROR = typing___cast(ImageErrorEnum.ImageErrorValue, 35)
        IMAGE_TOO_SMALL = typing___cast(ImageErrorEnum.ImageErrorValue, 36)
        INVALID_INPUT = typing___cast(ImageErrorEnum.ImageErrorValue, 37)
        PROBLEM_READING_FILE = typing___cast(ImageErrorEnum.ImageErrorValue, 38)
    UNSPECIFIED = typing___cast(ImageErrorEnum.ImageErrorValue, 0)
    UNKNOWN = typing___cast(ImageErrorEnum.ImageErrorValue, 1)
    INVALID_IMAGE = typing___cast(ImageErrorEnum.ImageErrorValue, 2)
    STORAGE_ERROR = typing___cast(ImageErrorEnum.ImageErrorValue, 3)
    BAD_REQUEST = typing___cast(ImageErrorEnum.ImageErrorValue, 4)
    UNEXPECTED_SIZE = typing___cast(ImageErrorEnum.ImageErrorValue, 5)
    ANIMATED_NOT_ALLOWED = typing___cast(ImageErrorEnum.ImageErrorValue, 6)
    ANIMATION_TOO_LONG = typing___cast(ImageErrorEnum.ImageErrorValue, 7)
    SERVER_ERROR = typing___cast(ImageErrorEnum.ImageErrorValue, 8)
    CMYK_JPEG_NOT_ALLOWED = typing___cast(ImageErrorEnum.ImageErrorValue, 9)
    FLASH_NOT_ALLOWED = typing___cast(ImageErrorEnum.ImageErrorValue, 10)
    FLASH_WITHOUT_CLICKTAG = typing___cast(ImageErrorEnum.ImageErrorValue, 11)
    FLASH_ERROR_AFTER_FIXING_CLICK_TAG = typing___cast(
        ImageErrorEnum.ImageErrorValue, 12
    )
    ANIMATED_VISUAL_EFFECT = typing___cast(ImageErrorEnum.ImageErrorValue, 13)
    FLASH_ERROR = typing___cast(ImageErrorEnum.ImageErrorValue, 14)
    LAYOUT_PROBLEM = typing___cast(ImageErrorEnum.ImageErrorValue, 15)
    PROBLEM_READING_IMAGE_FILE = typing___cast(ImageErrorEnum.ImageErrorValue, 16)
    ERROR_STORING_IMAGE = typing___cast(ImageErrorEnum.ImageErrorValue, 17)
    ASPECT_RATIO_NOT_ALLOWED = typing___cast(ImageErrorEnum.ImageErrorValue, 18)
    FLASH_HAS_NETWORK_OBJECTS = typing___cast(ImageErrorEnum.ImageErrorValue, 19)
    FLASH_HAS_NETWORK_METHODS = typing___cast(ImageErrorEnum.ImageErrorValue, 20)
    FLASH_HAS_URL = typing___cast(ImageErrorEnum.ImageErrorValue, 21)
    FLASH_HAS_MOUSE_TRACKING = typing___cast(ImageErrorEnum.ImageErrorValue, 22)
    FLASH_HAS_RANDOM_NUM = typing___cast(ImageErrorEnum.ImageErrorValue, 23)
    FLASH_SELF_TARGETS = typing___cast(ImageErrorEnum.ImageErrorValue, 24)
    FLASH_BAD_GETURL_TARGET = typing___cast(ImageErrorEnum.ImageErrorValue, 25)
    FLASH_VERSION_NOT_SUPPORTED = typing___cast(ImageErrorEnum.ImageErrorValue, 26)
    FLASH_WITHOUT_HARD_CODED_CLICK_URL = typing___cast(
        ImageErrorEnum.ImageErrorValue, 27
    )
    INVALID_FLASH_FILE = typing___cast(ImageErrorEnum.ImageErrorValue, 28)
    FAILED_TO_FIX_CLICK_TAG_IN_FLASH = typing___cast(ImageErrorEnum.ImageErrorValue, 29)
    FLASH_ACCESSES_NETWORK_RESOURCES = typing___cast(ImageErrorEnum.ImageErrorValue, 30)
    FLASH_EXTERNAL_JS_CALL = typing___cast(ImageErrorEnum.ImageErrorValue, 31)
    FLASH_EXTERNAL_FS_CALL = typing___cast(ImageErrorEnum.ImageErrorValue, 32)
    FILE_TOO_LARGE = typing___cast(ImageErrorEnum.ImageErrorValue, 33)
    IMAGE_DATA_TOO_LARGE = typing___cast(ImageErrorEnum.ImageErrorValue, 34)
    IMAGE_PROCESSING_ERROR = typing___cast(ImageErrorEnum.ImageErrorValue, 35)
    IMAGE_TOO_SMALL = typing___cast(ImageErrorEnum.ImageErrorValue, 36)
    INVALID_INPUT = typing___cast(ImageErrorEnum.ImageErrorValue, 37)
    PROBLEM_READING_FILE = typing___cast(ImageErrorEnum.ImageErrorValue, 38)
    type___ImageError = ImageError
    def __init__(self,) -> None: ...

type___ImageErrorEnum = ImageErrorEnum

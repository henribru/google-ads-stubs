# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.message import Message as google___protobuf___message___Message

from typing import (
    List as typing___List,
    Tuple as typing___Tuple,
    Union as typing___Union,
    cast as typing___cast,
)

builtin___bytes = bytes
builtin___int = int
builtin___str = str
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode

class FunctionParsingErrorEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class FunctionParsingError(builtin___int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: builtin___int) -> builtin___str: ...
        @classmethod
        def Value(
            cls, name: builtin___str
        ) -> "FunctionParsingErrorEnum.FunctionParsingError": ...
        @classmethod
        def keys(cls) -> typing___List[builtin___str]: ...
        @classmethod
        def values(
            cls
        ) -> typing___List["FunctionParsingErrorEnum.FunctionParsingError"]: ...
        @classmethod
        def items(
            cls
        ) -> typing___List[
            typing___Tuple[
                builtin___str, "FunctionParsingErrorEnum.FunctionParsingError"
            ]
        ]: ...
        UNSPECIFIED = typing___cast("FunctionParsingErrorEnum.FunctionParsingError", 0)
        UNKNOWN = typing___cast("FunctionParsingErrorEnum.FunctionParsingError", 1)
        NO_MORE_INPUT = typing___cast(
            "FunctionParsingErrorEnum.FunctionParsingError", 2
        )
        EXPECTED_CHARACTER = typing___cast(
            "FunctionParsingErrorEnum.FunctionParsingError", 3
        )
        UNEXPECTED_SEPARATOR = typing___cast(
            "FunctionParsingErrorEnum.FunctionParsingError", 4
        )
        UNMATCHED_LEFT_BRACKET = typing___cast(
            "FunctionParsingErrorEnum.FunctionParsingError", 5
        )
        UNMATCHED_RIGHT_BRACKET = typing___cast(
            "FunctionParsingErrorEnum.FunctionParsingError", 6
        )
        TOO_MANY_NESTED_FUNCTIONS = typing___cast(
            "FunctionParsingErrorEnum.FunctionParsingError", 7
        )
        MISSING_RIGHT_HAND_OPERAND = typing___cast(
            "FunctionParsingErrorEnum.FunctionParsingError", 8
        )
        INVALID_OPERATOR_NAME = typing___cast(
            "FunctionParsingErrorEnum.FunctionParsingError", 9
        )
        FEED_ATTRIBUTE_OPERAND_ARGUMENT_NOT_INTEGER = typing___cast(
            "FunctionParsingErrorEnum.FunctionParsingError", 10
        )
        NO_OPERANDS = typing___cast("FunctionParsingErrorEnum.FunctionParsingError", 11)
        TOO_MANY_OPERANDS = typing___cast(
            "FunctionParsingErrorEnum.FunctionParsingError", 12
        )
    UNSPECIFIED = typing___cast("FunctionParsingErrorEnum.FunctionParsingError", 0)
    UNKNOWN = typing___cast("FunctionParsingErrorEnum.FunctionParsingError", 1)
    NO_MORE_INPUT = typing___cast("FunctionParsingErrorEnum.FunctionParsingError", 2)
    EXPECTED_CHARACTER = typing___cast(
        "FunctionParsingErrorEnum.FunctionParsingError", 3
    )
    UNEXPECTED_SEPARATOR = typing___cast(
        "FunctionParsingErrorEnum.FunctionParsingError", 4
    )
    UNMATCHED_LEFT_BRACKET = typing___cast(
        "FunctionParsingErrorEnum.FunctionParsingError", 5
    )
    UNMATCHED_RIGHT_BRACKET = typing___cast(
        "FunctionParsingErrorEnum.FunctionParsingError", 6
    )
    TOO_MANY_NESTED_FUNCTIONS = typing___cast(
        "FunctionParsingErrorEnum.FunctionParsingError", 7
    )
    MISSING_RIGHT_HAND_OPERAND = typing___cast(
        "FunctionParsingErrorEnum.FunctionParsingError", 8
    )
    INVALID_OPERATOR_NAME = typing___cast(
        "FunctionParsingErrorEnum.FunctionParsingError", 9
    )
    FEED_ATTRIBUTE_OPERAND_ARGUMENT_NOT_INTEGER = typing___cast(
        "FunctionParsingErrorEnum.FunctionParsingError", 10
    )
    NO_OPERANDS = typing___cast("FunctionParsingErrorEnum.FunctionParsingError", 11)
    TOO_MANY_OPERANDS = typing___cast(
        "FunctionParsingErrorEnum.FunctionParsingError", 12
    )
    global___FunctionParsingError = FunctionParsingError
    def __init__(self,) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> FunctionParsingErrorEnum: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> FunctionParsingErrorEnum: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

global___FunctionParsingErrorEnum = FunctionParsingErrorEnum

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class SettingErrorEnum(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _SettingError(
        google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SettingError.V],
        builtins.type,
    ):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED = SettingErrorEnum.SettingError.V(0)
        UNKNOWN = SettingErrorEnum.SettingError.V(1)
        SETTING_TYPE_IS_NOT_AVAILABLE = SettingErrorEnum.SettingError.V(3)
        SETTING_TYPE_IS_NOT_COMPATIBLE_WITH_CAMPAIGN = SettingErrorEnum.SettingError.V(
            4
        )
        TARGETING_SETTING_CONTAINS_INVALID_CRITERION_TYPE_GROUP = (
            SettingErrorEnum.SettingError.V(5)
        )
        TARGETING_SETTING_DEMOGRAPHIC_CRITERION_TYPE_GROUPS_MUST_BE_SET_TO_TARGET_ALL = SettingErrorEnum.SettingError.V(
            6
        )
        TARGETING_SETTING_CANNOT_CHANGE_TARGET_ALL_TO_FALSE_FOR_DEMOGRAPHIC_CRITERION_TYPE_GROUP = SettingErrorEnum.SettingError.V(
            7
        )
        DYNAMIC_SEARCH_ADS_SETTING_AT_LEAST_ONE_FEED_ID_MUST_BE_PRESENT = (
            SettingErrorEnum.SettingError.V(8)
        )
        DYNAMIC_SEARCH_ADS_SETTING_CONTAINS_INVALID_DOMAIN_NAME = (
            SettingErrorEnum.SettingError.V(9)
        )
        DYNAMIC_SEARCH_ADS_SETTING_CONTAINS_SUBDOMAIN_NAME = (
            SettingErrorEnum.SettingError.V(10)
        )
        DYNAMIC_SEARCH_ADS_SETTING_CONTAINS_INVALID_LANGUAGE_CODE = (
            SettingErrorEnum.SettingError.V(11)
        )
        TARGET_ALL_IS_NOT_ALLOWED_FOR_PLACEMENT_IN_SEARCH_CAMPAIGN = (
            SettingErrorEnum.SettingError.V(12)
        )
        SETTING_VALUE_NOT_COMPATIBLE_WITH_CAMPAIGN = SettingErrorEnum.SettingError.V(20)
    class SettingError(metaclass=_SettingError):
        V = typing.NewType("V", builtins.int)
    UNSPECIFIED = SettingErrorEnum.SettingError.V(0)
    UNKNOWN = SettingErrorEnum.SettingError.V(1)
    SETTING_TYPE_IS_NOT_AVAILABLE = SettingErrorEnum.SettingError.V(3)
    SETTING_TYPE_IS_NOT_COMPATIBLE_WITH_CAMPAIGN = SettingErrorEnum.SettingError.V(4)
    TARGETING_SETTING_CONTAINS_INVALID_CRITERION_TYPE_GROUP = (
        SettingErrorEnum.SettingError.V(5)
    )
    TARGETING_SETTING_DEMOGRAPHIC_CRITERION_TYPE_GROUPS_MUST_BE_SET_TO_TARGET_ALL = (
        SettingErrorEnum.SettingError.V(6)
    )
    TARGETING_SETTING_CANNOT_CHANGE_TARGET_ALL_TO_FALSE_FOR_DEMOGRAPHIC_CRITERION_TYPE_GROUP = SettingErrorEnum.SettingError.V(
        7
    )
    DYNAMIC_SEARCH_ADS_SETTING_AT_LEAST_ONE_FEED_ID_MUST_BE_PRESENT = (
        SettingErrorEnum.SettingError.V(8)
    )
    DYNAMIC_SEARCH_ADS_SETTING_CONTAINS_INVALID_DOMAIN_NAME = (
        SettingErrorEnum.SettingError.V(9)
    )
    DYNAMIC_SEARCH_ADS_SETTING_CONTAINS_SUBDOMAIN_NAME = (
        SettingErrorEnum.SettingError.V(10)
    )
    DYNAMIC_SEARCH_ADS_SETTING_CONTAINS_INVALID_LANGUAGE_CODE = (
        SettingErrorEnum.SettingError.V(11)
    )
    TARGET_ALL_IS_NOT_ALLOWED_FOR_PLACEMENT_IN_SEARCH_CAMPAIGN = (
        SettingErrorEnum.SettingError.V(12)
    )
    SETTING_VALUE_NOT_COMPATIBLE_WITH_CAMPAIGN = SettingErrorEnum.SettingError.V(20)
    def __init__(
        self,
    ) -> None: ...

global___SettingErrorEnum = SettingErrorEnum

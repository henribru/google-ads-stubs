# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import NewType as typing___NewType, cast as typing___cast

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)
from google.protobuf.message import Message as google___protobuf___message___Message

builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class FieldErrorEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    FieldErrorValue = typing___NewType("FieldErrorValue", builtin___int)
    type___FieldErrorValue = FieldErrorValue
    FieldError: _FieldError
    class _FieldError(
        google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
            FieldErrorEnum.FieldErrorValue
        ]
    ):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNSPECIFIED = typing___cast(FieldErrorEnum.FieldErrorValue, 0)
        UNKNOWN = typing___cast(FieldErrorEnum.FieldErrorValue, 1)
        REQUIRED = typing___cast(FieldErrorEnum.FieldErrorValue, 2)
        IMMUTABLE_FIELD = typing___cast(FieldErrorEnum.FieldErrorValue, 3)
        INVALID_VALUE = typing___cast(FieldErrorEnum.FieldErrorValue, 4)
        VALUE_MUST_BE_UNSET = typing___cast(FieldErrorEnum.FieldErrorValue, 5)
        REQUIRED_NONEMPTY_LIST = typing___cast(FieldErrorEnum.FieldErrorValue, 6)
        FIELD_CANNOT_BE_CLEARED = typing___cast(FieldErrorEnum.FieldErrorValue, 7)
        BLOCKED_VALUE = typing___cast(FieldErrorEnum.FieldErrorValue, 9)
    UNSPECIFIED = typing___cast(FieldErrorEnum.FieldErrorValue, 0)
    UNKNOWN = typing___cast(FieldErrorEnum.FieldErrorValue, 1)
    REQUIRED = typing___cast(FieldErrorEnum.FieldErrorValue, 2)
    IMMUTABLE_FIELD = typing___cast(FieldErrorEnum.FieldErrorValue, 3)
    INVALID_VALUE = typing___cast(FieldErrorEnum.FieldErrorValue, 4)
    VALUE_MUST_BE_UNSET = typing___cast(FieldErrorEnum.FieldErrorValue, 5)
    REQUIRED_NONEMPTY_LIST = typing___cast(FieldErrorEnum.FieldErrorValue, 6)
    FIELD_CANNOT_BE_CLEARED = typing___cast(FieldErrorEnum.FieldErrorValue, 7)
    BLOCKED_VALUE = typing___cast(FieldErrorEnum.FieldErrorValue, 9)
    type___FieldError = FieldError
    def __init__(self,) -> None: ...

type___FieldErrorEnum = FieldErrorEnum

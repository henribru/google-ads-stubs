"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ResourceCountLimitExceededErrorEnum(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ResourceCountLimitExceededError(
        google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
            ResourceCountLimitExceededError.V
        ],
        builtins.type,
    ):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED = (
            ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(0)
        )
        UNKNOWN = ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(
            1
        )
        ACCOUNT_LIMIT = (
            ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(2)
        )
        CAMPAIGN_LIMIT = (
            ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(3)
        )
        ADGROUP_LIMIT = (
            ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(4)
        )
        AD_GROUP_AD_LIMIT = (
            ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(5)
        )
        AD_GROUP_CRITERION_LIMIT = (
            ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(6)
        )
        SHARED_SET_LIMIT = (
            ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(7)
        )
        MATCHING_FUNCTION_LIMIT = (
            ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(8)
        )
        RESPONSE_ROW_LIMIT_EXCEEDED = (
            ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(9)
        )
        RESOURCE_LIMIT = (
            ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(10)
        )
    class ResourceCountLimitExceededError(metaclass=_ResourceCountLimitExceededError):
        V = typing.NewType("V", builtins.int)
    UNSPECIFIED = ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(
        0
    )
    UNKNOWN = ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(1)
    ACCOUNT_LIMIT = (
        ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(2)
    )
    CAMPAIGN_LIMIT = (
        ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(3)
    )
    ADGROUP_LIMIT = (
        ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(4)
    )
    AD_GROUP_AD_LIMIT = (
        ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(5)
    )
    AD_GROUP_CRITERION_LIMIT = (
        ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(6)
    )
    SHARED_SET_LIMIT = (
        ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(7)
    )
    MATCHING_FUNCTION_LIMIT = (
        ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(8)
    )
    RESPONSE_ROW_LIMIT_EXCEEDED = (
        ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(9)
    )
    RESOURCE_LIMIT = (
        ResourceCountLimitExceededErrorEnum.ResourceCountLimitExceededError.V(10)
    )
    def __init__(
        self,
    ) -> None: ...

global___ResourceCountLimitExceededErrorEnum = ResourceCountLimitExceededErrorEnum

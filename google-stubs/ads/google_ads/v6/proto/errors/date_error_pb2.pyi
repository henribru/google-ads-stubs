# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import NewType as typing___NewType, cast as typing___cast

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)
from google.protobuf.message import Message as google___protobuf___message___Message

builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class DateErrorEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    DateErrorValue = typing___NewType("DateErrorValue", builtin___int)
    type___DateErrorValue = DateErrorValue
    DateError: _DateError
    class _DateError(
        google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
            DateErrorEnum.DateErrorValue
        ]
    ):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNSPECIFIED = typing___cast(DateErrorEnum.DateErrorValue, 0)
        UNKNOWN = typing___cast(DateErrorEnum.DateErrorValue, 1)
        INVALID_FIELD_VALUES_IN_DATE = typing___cast(DateErrorEnum.DateErrorValue, 2)
        INVALID_FIELD_VALUES_IN_DATE_TIME = typing___cast(
            DateErrorEnum.DateErrorValue, 3
        )
        INVALID_STRING_DATE = typing___cast(DateErrorEnum.DateErrorValue, 4)
        INVALID_STRING_DATE_TIME_MICROS = typing___cast(DateErrorEnum.DateErrorValue, 6)
        INVALID_STRING_DATE_TIME_SECONDS = typing___cast(
            DateErrorEnum.DateErrorValue, 11
        )
        INVALID_STRING_DATE_TIME_SECONDS_WITH_OFFSET = typing___cast(
            DateErrorEnum.DateErrorValue, 12
        )
        EARLIER_THAN_MINIMUM_DATE = typing___cast(DateErrorEnum.DateErrorValue, 7)
        LATER_THAN_MAXIMUM_DATE = typing___cast(DateErrorEnum.DateErrorValue, 8)
        DATE_RANGE_MINIMUM_DATE_LATER_THAN_MAXIMUM_DATE = typing___cast(
            DateErrorEnum.DateErrorValue, 9
        )
        DATE_RANGE_MINIMUM_AND_MAXIMUM_DATES_BOTH_NULL = typing___cast(
            DateErrorEnum.DateErrorValue, 10
        )
    UNSPECIFIED = typing___cast(DateErrorEnum.DateErrorValue, 0)
    UNKNOWN = typing___cast(DateErrorEnum.DateErrorValue, 1)
    INVALID_FIELD_VALUES_IN_DATE = typing___cast(DateErrorEnum.DateErrorValue, 2)
    INVALID_FIELD_VALUES_IN_DATE_TIME = typing___cast(DateErrorEnum.DateErrorValue, 3)
    INVALID_STRING_DATE = typing___cast(DateErrorEnum.DateErrorValue, 4)
    INVALID_STRING_DATE_TIME_MICROS = typing___cast(DateErrorEnum.DateErrorValue, 6)
    INVALID_STRING_DATE_TIME_SECONDS = typing___cast(DateErrorEnum.DateErrorValue, 11)
    INVALID_STRING_DATE_TIME_SECONDS_WITH_OFFSET = typing___cast(
        DateErrorEnum.DateErrorValue, 12
    )
    EARLIER_THAN_MINIMUM_DATE = typing___cast(DateErrorEnum.DateErrorValue, 7)
    LATER_THAN_MAXIMUM_DATE = typing___cast(DateErrorEnum.DateErrorValue, 8)
    DATE_RANGE_MINIMUM_DATE_LATER_THAN_MAXIMUM_DATE = typing___cast(
        DateErrorEnum.DateErrorValue, 9
    )
    DATE_RANGE_MINIMUM_AND_MAXIMUM_DATES_BOTH_NULL = typing___cast(
        DateErrorEnum.DateErrorValue, 10
    )
    type___DateError = DateError
    def __init__(self,) -> None: ...

type___DateErrorEnum = DateErrorEnum

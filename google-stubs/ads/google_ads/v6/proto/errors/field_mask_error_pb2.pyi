# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import NewType as typing___NewType, cast as typing___cast

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)
from google.protobuf.message import Message as google___protobuf___message___Message

builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class FieldMaskErrorEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    FieldMaskErrorValue = typing___NewType("FieldMaskErrorValue", builtin___int)
    type___FieldMaskErrorValue = FieldMaskErrorValue
    FieldMaskError: _FieldMaskError
    class _FieldMaskError(
        google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
            FieldMaskErrorEnum.FieldMaskErrorValue
        ]
    ):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNSPECIFIED = typing___cast(FieldMaskErrorEnum.FieldMaskErrorValue, 0)
        UNKNOWN = typing___cast(FieldMaskErrorEnum.FieldMaskErrorValue, 1)
        FIELD_MASK_MISSING = typing___cast(FieldMaskErrorEnum.FieldMaskErrorValue, 5)
        FIELD_MASK_NOT_ALLOWED = typing___cast(
            FieldMaskErrorEnum.FieldMaskErrorValue, 4
        )
        FIELD_NOT_FOUND = typing___cast(FieldMaskErrorEnum.FieldMaskErrorValue, 2)
        FIELD_HAS_SUBFIELDS = typing___cast(FieldMaskErrorEnum.FieldMaskErrorValue, 3)
    UNSPECIFIED = typing___cast(FieldMaskErrorEnum.FieldMaskErrorValue, 0)
    UNKNOWN = typing___cast(FieldMaskErrorEnum.FieldMaskErrorValue, 1)
    FIELD_MASK_MISSING = typing___cast(FieldMaskErrorEnum.FieldMaskErrorValue, 5)
    FIELD_MASK_NOT_ALLOWED = typing___cast(FieldMaskErrorEnum.FieldMaskErrorValue, 4)
    FIELD_NOT_FOUND = typing___cast(FieldMaskErrorEnum.FieldMaskErrorValue, 2)
    FIELD_HAS_SUBFIELDS = typing___cast(FieldMaskErrorEnum.FieldMaskErrorValue, 3)
    type___FieldMaskError = FieldMaskError
    def __init__(self,) -> None: ...

type___FieldMaskErrorEnum = FieldMaskErrorEnum

# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import NewType as typing___NewType, cast as typing___cast

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)
from google.protobuf.message import Message as google___protobuf___message___Message

builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class KeywordPlanAdGroupKeywordErrorEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    KeywordPlanAdGroupKeywordErrorValue = typing___NewType(
        "KeywordPlanAdGroupKeywordErrorValue", builtin___int
    )
    type___KeywordPlanAdGroupKeywordErrorValue = KeywordPlanAdGroupKeywordErrorValue
    KeywordPlanAdGroupKeywordError: _KeywordPlanAdGroupKeywordError
    class _KeywordPlanAdGroupKeywordError(
        google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
            KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue
        ]
    ):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNSPECIFIED = typing___cast(
            KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 0
        )
        UNKNOWN = typing___cast(
            KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 1
        )
        INVALID_KEYWORD_MATCH_TYPE = typing___cast(
            KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 2
        )
        DUPLICATE_KEYWORD = typing___cast(
            KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 3
        )
        KEYWORD_TEXT_TOO_LONG = typing___cast(
            KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 4
        )
        KEYWORD_HAS_INVALID_CHARS = typing___cast(
            KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 5
        )
        KEYWORD_HAS_TOO_MANY_WORDS = typing___cast(
            KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 6
        )
        INVALID_KEYWORD_TEXT = typing___cast(
            KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 7
        )
        NEGATIVE_KEYWORD_HAS_CPC_BID = typing___cast(
            KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 8
        )
    UNSPECIFIED = typing___cast(
        KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 0
    )
    UNKNOWN = typing___cast(
        KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 1
    )
    INVALID_KEYWORD_MATCH_TYPE = typing___cast(
        KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 2
    )
    DUPLICATE_KEYWORD = typing___cast(
        KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 3
    )
    KEYWORD_TEXT_TOO_LONG = typing___cast(
        KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 4
    )
    KEYWORD_HAS_INVALID_CHARS = typing___cast(
        KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 5
    )
    KEYWORD_HAS_TOO_MANY_WORDS = typing___cast(
        KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 6
    )
    INVALID_KEYWORD_TEXT = typing___cast(
        KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 7
    )
    NEGATIVE_KEYWORD_HAS_CPC_BID = typing___cast(
        KeywordPlanAdGroupKeywordErrorEnum.KeywordPlanAdGroupKeywordErrorValue, 8
    )
    type___KeywordPlanAdGroupKeywordError = KeywordPlanAdGroupKeywordError
    def __init__(self,) -> None: ...

type___KeywordPlanAdGroupKeywordErrorEnum = KeywordPlanAdGroupKeywordErrorEnum

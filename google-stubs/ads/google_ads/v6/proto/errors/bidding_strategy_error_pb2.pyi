# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import NewType as typing___NewType, cast as typing___cast

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)
from google.protobuf.message import Message as google___protobuf___message___Message

builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class BiddingStrategyErrorEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    BiddingStrategyErrorValue = typing___NewType(
        "BiddingStrategyErrorValue", builtin___int
    )
    type___BiddingStrategyErrorValue = BiddingStrategyErrorValue
    BiddingStrategyError: _BiddingStrategyError
    class _BiddingStrategyError(
        google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
            BiddingStrategyErrorEnum.BiddingStrategyErrorValue
        ]
    ):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNSPECIFIED = typing___cast(
            BiddingStrategyErrorEnum.BiddingStrategyErrorValue, 0
        )
        UNKNOWN = typing___cast(BiddingStrategyErrorEnum.BiddingStrategyErrorValue, 1)
        DUPLICATE_NAME = typing___cast(
            BiddingStrategyErrorEnum.BiddingStrategyErrorValue, 2
        )
        CANNOT_CHANGE_BIDDING_STRATEGY_TYPE = typing___cast(
            BiddingStrategyErrorEnum.BiddingStrategyErrorValue, 3
        )
        CANNOT_REMOVE_ASSOCIATED_STRATEGY = typing___cast(
            BiddingStrategyErrorEnum.BiddingStrategyErrorValue, 4
        )
        BIDDING_STRATEGY_NOT_SUPPORTED = typing___cast(
            BiddingStrategyErrorEnum.BiddingStrategyErrorValue, 5
        )
        INCOMPATIBLE_BIDDING_STRATEGY_AND_BIDDING_STRATEGY_GOAL_TYPE = typing___cast(
            BiddingStrategyErrorEnum.BiddingStrategyErrorValue, 6
        )
    UNSPECIFIED = typing___cast(BiddingStrategyErrorEnum.BiddingStrategyErrorValue, 0)
    UNKNOWN = typing___cast(BiddingStrategyErrorEnum.BiddingStrategyErrorValue, 1)
    DUPLICATE_NAME = typing___cast(
        BiddingStrategyErrorEnum.BiddingStrategyErrorValue, 2
    )
    CANNOT_CHANGE_BIDDING_STRATEGY_TYPE = typing___cast(
        BiddingStrategyErrorEnum.BiddingStrategyErrorValue, 3
    )
    CANNOT_REMOVE_ASSOCIATED_STRATEGY = typing___cast(
        BiddingStrategyErrorEnum.BiddingStrategyErrorValue, 4
    )
    BIDDING_STRATEGY_NOT_SUPPORTED = typing___cast(
        BiddingStrategyErrorEnum.BiddingStrategyErrorValue, 5
    )
    INCOMPATIBLE_BIDDING_STRATEGY_AND_BIDDING_STRATEGY_GOAL_TYPE = typing___cast(
        BiddingStrategyErrorEnum.BiddingStrategyErrorValue, 6
    )
    type___BiddingStrategyError = BiddingStrategyError
    def __init__(self,) -> None: ...

type___BiddingStrategyErrorEnum = BiddingStrategyErrorEnum

# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
    overload as typing___overload,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.message import Message as google___protobuf___message___Message
from typing_extensions import Literal as typing_extensions___Literal

builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class DomainCategory(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    resource_name: typing___Text = ...
    campaign: typing___Text = ...
    category: typing___Text = ...
    language_code: typing___Text = ...
    domain: typing___Text = ...
    coverage_fraction: builtin___float = ...
    category_rank: builtin___int = ...
    has_children: builtin___bool = ...
    recommended_cpc_bid_micros: builtin___int = ...
    def __init__(
        self,
        *,
        resource_name: typing___Optional[typing___Text] = None,
        campaign: typing___Optional[typing___Text] = None,
        category: typing___Optional[typing___Text] = None,
        language_code: typing___Optional[typing___Text] = None,
        domain: typing___Optional[typing___Text] = None,
        coverage_fraction: typing___Optional[builtin___float] = None,
        category_rank: typing___Optional[builtin___int] = None,
        has_children: typing___Optional[builtin___bool] = None,
        recommended_cpc_bid_micros: typing___Optional[builtin___int] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "_campaign",
            b"_campaign",
            "_category",
            b"_category",
            "_category_rank",
            b"_category_rank",
            "_coverage_fraction",
            b"_coverage_fraction",
            "_domain",
            b"_domain",
            "_has_children",
            b"_has_children",
            "_language_code",
            b"_language_code",
            "_recommended_cpc_bid_micros",
            b"_recommended_cpc_bid_micros",
            "campaign",
            b"campaign",
            "category",
            b"category",
            "category_rank",
            b"category_rank",
            "coverage_fraction",
            b"coverage_fraction",
            "domain",
            b"domain",
            "has_children",
            b"has_children",
            "language_code",
            b"language_code",
            "recommended_cpc_bid_micros",
            b"recommended_cpc_bid_micros",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "_campaign",
            b"_campaign",
            "_category",
            b"_category",
            "_category_rank",
            b"_category_rank",
            "_coverage_fraction",
            b"_coverage_fraction",
            "_domain",
            b"_domain",
            "_has_children",
            b"_has_children",
            "_language_code",
            b"_language_code",
            "_recommended_cpc_bid_micros",
            b"_recommended_cpc_bid_micros",
            "campaign",
            b"campaign",
            "category",
            b"category",
            "category_rank",
            b"category_rank",
            "coverage_fraction",
            b"coverage_fraction",
            "domain",
            b"domain",
            "has_children",
            b"has_children",
            "language_code",
            b"language_code",
            "recommended_cpc_bid_micros",
            b"recommended_cpc_bid_micros",
            "resource_name",
            b"resource_name",
        ],
    ) -> None: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_campaign", b"_campaign"]
    ) -> typing_extensions___Literal["campaign"]: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_category", b"_category"]
    ) -> typing_extensions___Literal["category"]: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal["_category_rank", b"_category_rank"],
    ) -> typing_extensions___Literal["category_rank"]: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal[
            "_coverage_fraction", b"_coverage_fraction"
        ],
    ) -> typing_extensions___Literal["coverage_fraction"]: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_domain", b"_domain"]
    ) -> typing_extensions___Literal["domain"]: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal["_has_children", b"_has_children"],
    ) -> typing_extensions___Literal["has_children"]: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal["_language_code", b"_language_code"],
    ) -> typing_extensions___Literal["language_code"]: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal[
            "_recommended_cpc_bid_micros", b"_recommended_cpc_bid_micros"
        ],
    ) -> typing_extensions___Literal["recommended_cpc_bid_micros"]: ...

type___DomainCategory = DomainCategory

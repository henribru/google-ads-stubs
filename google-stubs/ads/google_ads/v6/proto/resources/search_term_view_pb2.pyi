"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.google_ads.v6.proto.enums.search_term_targeting_status_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class SearchTermView(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    SEARCH_TERM_FIELD_NUMBER: builtins.int
    AD_GROUP_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    search_term: typing.Text = ...
    ad_group: typing.Text = ...
    status: google.ads.google_ads.v6.proto.enums.search_term_targeting_status_pb2.SearchTermTargetingStatusEnum.SearchTermTargetingStatus.V = (
        ...
    )
    def __init__(
        self,
        *,
        resource_name: typing.Text = ...,
        search_term: typing.Text = ...,
        ad_group: typing.Text = ...,
        status: google.ads.google_ads.v6.proto.enums.search_term_targeting_status_pb2.SearchTermTargetingStatusEnum.SearchTermTargetingStatus.V = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_ad_group",
            b"_ad_group",
            "_search_term",
            b"_search_term",
            "ad_group",
            b"ad_group",
            "search_term",
            b"search_term",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_ad_group",
            b"_ad_group",
            "_search_term",
            b"_search_term",
            "ad_group",
            b"ad_group",
            "resource_name",
            b"resource_name",
            "search_term",
            b"search_term",
            "status",
            b"status",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_ad_group", b"_ad_group"]
    ) -> typing_extensions.Literal["ad_group"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_search_term", b"_search_term"]
    ) -> typing_extensions.Literal["search_term"]: ...

global___SearchTermView = SearchTermView

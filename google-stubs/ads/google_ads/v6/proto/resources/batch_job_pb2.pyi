"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.google_ads.v6.proto.enums.batch_job_status_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class BatchJob(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class BatchJobMetadata(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CREATION_DATE_TIME_FIELD_NUMBER: builtins.int
        START_DATE_TIME_FIELD_NUMBER: builtins.int
        COMPLETION_DATE_TIME_FIELD_NUMBER: builtins.int
        ESTIMATED_COMPLETION_RATIO_FIELD_NUMBER: builtins.int
        OPERATION_COUNT_FIELD_NUMBER: builtins.int
        EXECUTED_OPERATION_COUNT_FIELD_NUMBER: builtins.int
        creation_date_time: typing.Text = ...
        start_date_time: typing.Text = ...
        completion_date_time: typing.Text = ...
        estimated_completion_ratio: builtins.float = ...
        operation_count: builtins.int = ...
        executed_operation_count: builtins.int = ...
        def __init__(
            self,
            *,
            creation_date_time: typing.Text = ...,
            start_date_time: typing.Text = ...,
            completion_date_time: typing.Text = ...,
            estimated_completion_ratio: builtins.float = ...,
            operation_count: builtins.int = ...,
            executed_operation_count: builtins.int = ...,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions.Literal[
                "_completion_date_time",
                b"_completion_date_time",
                "_creation_date_time",
                b"_creation_date_time",
                "_estimated_completion_ratio",
                b"_estimated_completion_ratio",
                "_executed_operation_count",
                b"_executed_operation_count",
                "_operation_count",
                b"_operation_count",
                "_start_date_time",
                b"_start_date_time",
                "completion_date_time",
                b"completion_date_time",
                "creation_date_time",
                b"creation_date_time",
                "estimated_completion_ratio",
                b"estimated_completion_ratio",
                "executed_operation_count",
                b"executed_operation_count",
                "operation_count",
                b"operation_count",
                "start_date_time",
                b"start_date_time",
            ],
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "_completion_date_time",
                b"_completion_date_time",
                "_creation_date_time",
                b"_creation_date_time",
                "_estimated_completion_ratio",
                b"_estimated_completion_ratio",
                "_executed_operation_count",
                b"_executed_operation_count",
                "_operation_count",
                b"_operation_count",
                "_start_date_time",
                b"_start_date_time",
                "completion_date_time",
                b"completion_date_time",
                "creation_date_time",
                b"creation_date_time",
                "estimated_completion_ratio",
                b"estimated_completion_ratio",
                "executed_operation_count",
                b"executed_operation_count",
                "operation_count",
                b"operation_count",
                "start_date_time",
                b"start_date_time",
            ],
        ) -> None: ...
        @typing.overload
        def WhichOneof(
            self,
            oneof_group: typing_extensions.Literal[
                "_completion_date_time", b"_completion_date_time"
            ],
        ) -> typing_extensions.Literal["completion_date_time"]: ...
        @typing.overload
        def WhichOneof(
            self,
            oneof_group: typing_extensions.Literal[
                "_creation_date_time", b"_creation_date_time"
            ],
        ) -> typing_extensions.Literal["creation_date_time"]: ...
        @typing.overload
        def WhichOneof(
            self,
            oneof_group: typing_extensions.Literal[
                "_estimated_completion_ratio", b"_estimated_completion_ratio"
            ],
        ) -> typing_extensions.Literal["estimated_completion_ratio"]: ...
        @typing.overload
        def WhichOneof(
            self,
            oneof_group: typing_extensions.Literal[
                "_executed_operation_count", b"_executed_operation_count"
            ],
        ) -> typing_extensions.Literal["executed_operation_count"]: ...
        @typing.overload
        def WhichOneof(
            self,
            oneof_group: typing_extensions.Literal[
                "_operation_count", b"_operation_count"
            ],
        ) -> typing_extensions.Literal["operation_count"]: ...
        @typing.overload
        def WhichOneof(
            self,
            oneof_group: typing_extensions.Literal[
                "_start_date_time", b"_start_date_time"
            ],
        ) -> typing_extensions.Literal["start_date_time"]: ...
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    NEXT_ADD_SEQUENCE_TOKEN_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    LONG_RUNNING_OPERATION_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    id: builtins.int = ...
    next_add_sequence_token: typing.Text = ...
    status: google.ads.google_ads.v6.proto.enums.batch_job_status_pb2.BatchJobStatusEnum.BatchJobStatus.V = (
        ...
    )
    long_running_operation: typing.Text = ...
    @property
    def metadata(self) -> global___BatchJob.BatchJobMetadata: ...
    def __init__(
        self,
        *,
        resource_name: typing.Text = ...,
        id: builtins.int = ...,
        next_add_sequence_token: typing.Text = ...,
        metadata: typing.Optional[global___BatchJob.BatchJobMetadata] = ...,
        status: google.ads.google_ads.v6.proto.enums.batch_job_status_pb2.BatchJobStatusEnum.BatchJobStatus.V = ...,
        long_running_operation: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_id",
            b"_id",
            "_long_running_operation",
            b"_long_running_operation",
            "_next_add_sequence_token",
            b"_next_add_sequence_token",
            "id",
            b"id",
            "long_running_operation",
            b"long_running_operation",
            "metadata",
            b"metadata",
            "next_add_sequence_token",
            b"next_add_sequence_token",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_id",
            b"_id",
            "_long_running_operation",
            b"_long_running_operation",
            "_next_add_sequence_token",
            b"_next_add_sequence_token",
            "id",
            b"id",
            "long_running_operation",
            b"long_running_operation",
            "metadata",
            b"metadata",
            "next_add_sequence_token",
            b"next_add_sequence_token",
            "resource_name",
            b"resource_name",
            "status",
            b"status",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_id", b"_id"]
    ) -> typing_extensions.Literal["id"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_long_running_operation", b"_long_running_operation"
        ],
    ) -> typing_extensions.Literal["long_running_operation"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_next_add_sequence_token", b"_next_add_sequence_token"
        ],
    ) -> typing_extensions.Literal["next_add_sequence_token"]: ...

global___BatchJob = BatchJob

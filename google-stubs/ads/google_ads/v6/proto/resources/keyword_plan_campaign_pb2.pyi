# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
    overload as typing___overload,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)
from google.protobuf.message import Message as google___protobuf___message___Message
from typing_extensions import Literal as typing_extensions___Literal

from google.ads.google_ads.v6.proto.enums.keyword_plan_network_pb2 import (
    KeywordPlanNetworkEnum as google___ads___googleads___v6___enums___keyword_plan_network_pb2___KeywordPlanNetworkEnum,
)

builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class KeywordPlanCampaign(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    resource_name: typing___Text = ...
    keyword_plan: typing___Text = ...
    id: builtin___int = ...
    name: typing___Text = ...
    language_constants: google___protobuf___internal___containers___RepeatedScalarFieldContainer[
        typing___Text
    ] = ...
    keyword_plan_network: google___ads___googleads___v6___enums___keyword_plan_network_pb2___KeywordPlanNetworkEnum.KeywordPlanNetworkValue = ...
    cpc_bid_micros: builtin___int = ...
    @property
    def geo_targets(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        type___KeywordPlanGeoTarget
    ]: ...
    def __init__(
        self,
        *,
        resource_name: typing___Optional[typing___Text] = None,
        keyword_plan: typing___Optional[typing___Text] = None,
        id: typing___Optional[builtin___int] = None,
        name: typing___Optional[typing___Text] = None,
        language_constants: typing___Optional[typing___Iterable[typing___Text]] = None,
        keyword_plan_network: typing___Optional[
            google___ads___googleads___v6___enums___keyword_plan_network_pb2___KeywordPlanNetworkEnum.KeywordPlanNetworkValue
        ] = None,
        cpc_bid_micros: typing___Optional[builtin___int] = None,
        geo_targets: typing___Optional[
            typing___Iterable[type___KeywordPlanGeoTarget]
        ] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "_cpc_bid_micros",
            b"_cpc_bid_micros",
            "_id",
            b"_id",
            "_keyword_plan",
            b"_keyword_plan",
            "_name",
            b"_name",
            "cpc_bid_micros",
            b"cpc_bid_micros",
            "id",
            b"id",
            "keyword_plan",
            b"keyword_plan",
            "name",
            b"name",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "_cpc_bid_micros",
            b"_cpc_bid_micros",
            "_id",
            b"_id",
            "_keyword_plan",
            b"_keyword_plan",
            "_name",
            b"_name",
            "cpc_bid_micros",
            b"cpc_bid_micros",
            "geo_targets",
            b"geo_targets",
            "id",
            b"id",
            "keyword_plan",
            b"keyword_plan",
            "keyword_plan_network",
            b"keyword_plan_network",
            "language_constants",
            b"language_constants",
            "name",
            b"name",
            "resource_name",
            b"resource_name",
        ],
    ) -> None: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal["_cpc_bid_micros", b"_cpc_bid_micros"],
    ) -> typing_extensions___Literal["cpc_bid_micros"]: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_id", b"_id"]
    ) -> typing_extensions___Literal["id"]: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal["_keyword_plan", b"_keyword_plan"],
    ) -> typing_extensions___Literal["keyword_plan"]: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_name", b"_name"]
    ) -> typing_extensions___Literal["name"]: ...

type___KeywordPlanCampaign = KeywordPlanCampaign

class KeywordPlanGeoTarget(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    geo_target_constant: typing___Text = ...
    def __init__(
        self, *, geo_target_constant: typing___Optional[typing___Text] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "_geo_target_constant",
            b"_geo_target_constant",
            "geo_target_constant",
            b"geo_target_constant",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "_geo_target_constant",
            b"_geo_target_constant",
            "geo_target_constant",
            b"geo_target_constant",
        ],
    ) -> None: ...
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal[
            "_geo_target_constant", b"_geo_target_constant"
        ],
    ) -> typing_extensions___Literal["geo_target_constant"]: ...

type___KeywordPlanGeoTarget = KeywordPlanGeoTarget

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.google_ads.v6.proto.enums.keyword_match_type_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class KeywordPlanCampaignKeyword(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    KEYWORD_PLAN_CAMPAIGN_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    MATCH_TYPE_FIELD_NUMBER: builtins.int
    NEGATIVE_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    keyword_plan_campaign: typing.Text = ...
    id: builtins.int = ...
    text: typing.Text = ...
    match_type: google.ads.google_ads.v6.proto.enums.keyword_match_type_pb2.KeywordMatchTypeEnum.KeywordMatchType.V = (
        ...
    )
    negative: builtins.bool = ...
    def __init__(
        self,
        *,
        resource_name: typing.Text = ...,
        keyword_plan_campaign: typing.Text = ...,
        id: builtins.int = ...,
        text: typing.Text = ...,
        match_type: google.ads.google_ads.v6.proto.enums.keyword_match_type_pb2.KeywordMatchTypeEnum.KeywordMatchType.V = ...,
        negative: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_id",
            b"_id",
            "_keyword_plan_campaign",
            b"_keyword_plan_campaign",
            "_negative",
            b"_negative",
            "_text",
            b"_text",
            "id",
            b"id",
            "keyword_plan_campaign",
            b"keyword_plan_campaign",
            "negative",
            b"negative",
            "text",
            b"text",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_id",
            b"_id",
            "_keyword_plan_campaign",
            b"_keyword_plan_campaign",
            "_negative",
            b"_negative",
            "_text",
            b"_text",
            "id",
            b"id",
            "keyword_plan_campaign",
            b"keyword_plan_campaign",
            "match_type",
            b"match_type",
            "negative",
            b"negative",
            "resource_name",
            b"resource_name",
            "text",
            b"text",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_id", b"_id"]
    ) -> typing_extensions.Literal["id"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_keyword_plan_campaign", b"_keyword_plan_campaign"
        ],
    ) -> typing_extensions.Literal["keyword_plan_campaign"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_negative", b"_negative"]
    ) -> typing_extensions.Literal["negative"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_text", b"_text"]
    ) -> typing_extensions.Literal["text"]: ...

global___KeywordPlanCampaignKeyword = KeywordPlanCampaignKeyword

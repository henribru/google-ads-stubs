# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
    overload as typing___overload,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.message import Message as google___protobuf___message___Message
from typing_extensions import Literal as typing_extensions___Literal

builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Video(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    resource_name: typing___Text = ...
    id: typing___Text = ...
    channel_id: typing___Text = ...
    duration_millis: builtin___int = ...
    title: typing___Text = ...
    def __init__(
        self,
        *,
        resource_name: typing___Optional[typing___Text] = None,
        id: typing___Optional[typing___Text] = None,
        channel_id: typing___Optional[typing___Text] = None,
        duration_millis: typing___Optional[builtin___int] = None,
        title: typing___Optional[typing___Text] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "_channel_id",
            b"_channel_id",
            "_duration_millis",
            b"_duration_millis",
            "_id",
            b"_id",
            "_title",
            b"_title",
            "channel_id",
            b"channel_id",
            "duration_millis",
            b"duration_millis",
            "id",
            b"id",
            "title",
            b"title",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "_channel_id",
            b"_channel_id",
            "_duration_millis",
            b"_duration_millis",
            "_id",
            b"_id",
            "_title",
            b"_title",
            "channel_id",
            b"channel_id",
            "duration_millis",
            b"duration_millis",
            "id",
            b"id",
            "resource_name",
            b"resource_name",
            "title",
            b"title",
        ],
    ) -> None: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_channel_id", b"_channel_id"]
    ) -> typing_extensions___Literal["channel_id"]: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal[
            "_duration_millis", b"_duration_millis"
        ],
    ) -> typing_extensions___Literal["duration_millis"]: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_id", b"_id"]
    ) -> typing_extensions___Literal["id"]: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_title", b"_title"]
    ) -> typing_extensions___Literal["title"]: ...

type___Video = Video

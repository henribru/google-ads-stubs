# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
    overload as typing___overload,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.message import Message as google___protobuf___message___Message
from typing_extensions import Literal as typing_extensions___Literal

builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class UserLocationView(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    resource_name: typing___Text = ...
    country_criterion_id: builtin___int = ...
    targeting_location: builtin___bool = ...
    def __init__(
        self,
        *,
        resource_name: typing___Optional[typing___Text] = None,
        country_criterion_id: typing___Optional[builtin___int] = None,
        targeting_location: typing___Optional[builtin___bool] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "_country_criterion_id",
            b"_country_criterion_id",
            "_targeting_location",
            b"_targeting_location",
            "country_criterion_id",
            b"country_criterion_id",
            "targeting_location",
            b"targeting_location",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "_country_criterion_id",
            b"_country_criterion_id",
            "_targeting_location",
            b"_targeting_location",
            "country_criterion_id",
            b"country_criterion_id",
            "resource_name",
            b"resource_name",
            "targeting_location",
            b"targeting_location",
        ],
    ) -> None: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal[
            "_country_criterion_id", b"_country_criterion_id"
        ],
    ) -> typing_extensions___Literal["country_criterion_id"]: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal[
            "_targeting_location", b"_targeting_location"
        ],
    ) -> typing_extensions___Literal["targeting_location"]: ...

type___UserLocationView = UserLocationView

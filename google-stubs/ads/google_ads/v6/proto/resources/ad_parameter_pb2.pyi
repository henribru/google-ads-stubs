# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
    overload as typing___overload,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.message import Message as google___protobuf___message___Message
from typing_extensions import Literal as typing_extensions___Literal

builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class AdParameter(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    resource_name: typing___Text = ...
    ad_group_criterion: typing___Text = ...
    parameter_index: builtin___int = ...
    insertion_text: typing___Text = ...
    def __init__(
        self,
        *,
        resource_name: typing___Optional[typing___Text] = None,
        ad_group_criterion: typing___Optional[typing___Text] = None,
        parameter_index: typing___Optional[builtin___int] = None,
        insertion_text: typing___Optional[typing___Text] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "_ad_group_criterion",
            b"_ad_group_criterion",
            "_insertion_text",
            b"_insertion_text",
            "_parameter_index",
            b"_parameter_index",
            "ad_group_criterion",
            b"ad_group_criterion",
            "insertion_text",
            b"insertion_text",
            "parameter_index",
            b"parameter_index",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "_ad_group_criterion",
            b"_ad_group_criterion",
            "_insertion_text",
            b"_insertion_text",
            "_parameter_index",
            b"_parameter_index",
            "ad_group_criterion",
            b"ad_group_criterion",
            "insertion_text",
            b"insertion_text",
            "parameter_index",
            b"parameter_index",
            "resource_name",
            b"resource_name",
        ],
    ) -> None: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal[
            "_ad_group_criterion", b"_ad_group_criterion"
        ],
    ) -> typing_extensions___Literal["ad_group_criterion"]: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal["_insertion_text", b"_insertion_text"],
    ) -> typing_extensions___Literal["insertion_text"]: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal[
            "_parameter_index", b"_parameter_index"
        ],
    ) -> typing_extensions___Literal["parameter_index"]: ...

type___AdParameter = AdParameter

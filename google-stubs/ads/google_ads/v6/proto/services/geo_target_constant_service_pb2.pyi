"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.google_ads.v6.proto.resources.geo_target_constant_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class GetGeoTargetConstantRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    def __init__(
        self,
        *,
        resource_name: typing.Text = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["resource_name", b"resource_name"]
    ) -> None: ...

global___GetGeoTargetConstantRequest = GetGeoTargetConstantRequest

class SuggestGeoTargetConstantsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LocationNames(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        NAMES_FIELD_NUMBER: builtins.int
        names: google.protobuf.internal.containers.RepeatedScalarFieldContainer[
            typing.Text
        ] = ...
        def __init__(
            self,
            *,
            names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
        def ClearField(
            self, field_name: typing_extensions.Literal["names", b"names"]
        ) -> None: ...
    class GeoTargets(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        GEO_TARGET_CONSTANTS_FIELD_NUMBER: builtins.int
        geo_target_constants: google.protobuf.internal.containers.RepeatedScalarFieldContainer[
            typing.Text
        ] = ...
        def __init__(
            self,
            *,
            geo_target_constants: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "geo_target_constants", b"geo_target_constants"
            ],
        ) -> None: ...
    LOCALE_FIELD_NUMBER: builtins.int
    COUNTRY_CODE_FIELD_NUMBER: builtins.int
    LOCATION_NAMES_FIELD_NUMBER: builtins.int
    GEO_TARGETS_FIELD_NUMBER: builtins.int
    locale: typing.Text = ...
    country_code: typing.Text = ...
    @property
    def location_names(
        self,
    ) -> global___SuggestGeoTargetConstantsRequest.LocationNames: ...
    @property
    def geo_targets(self) -> global___SuggestGeoTargetConstantsRequest.GeoTargets: ...
    def __init__(
        self,
        *,
        locale: typing.Text = ...,
        country_code: typing.Text = ...,
        location_names: typing.Optional[
            global___SuggestGeoTargetConstantsRequest.LocationNames
        ] = ...,
        geo_targets: typing.Optional[
            global___SuggestGeoTargetConstantsRequest.GeoTargets
        ] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_country_code",
            b"_country_code",
            "_locale",
            b"_locale",
            "country_code",
            b"country_code",
            "geo_targets",
            b"geo_targets",
            "locale",
            b"locale",
            "location_names",
            b"location_names",
            "query",
            b"query",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_country_code",
            b"_country_code",
            "_locale",
            b"_locale",
            "country_code",
            b"country_code",
            "geo_targets",
            b"geo_targets",
            "locale",
            b"locale",
            "location_names",
            b"location_names",
            "query",
            b"query",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_country_code", b"_country_code"]
    ) -> typing_extensions.Literal["country_code"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_locale", b"_locale"]
    ) -> typing_extensions.Literal["locale"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["query", b"query"]
    ) -> typing_extensions.Literal["location_names", "geo_targets"]: ...

global___SuggestGeoTargetConstantsRequest = SuggestGeoTargetConstantsRequest

class SuggestGeoTargetConstantsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GEO_TARGET_CONSTANT_SUGGESTIONS_FIELD_NUMBER: builtins.int
    @property
    def geo_target_constant_suggestions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___GeoTargetConstantSuggestion
    ]: ...
    def __init__(
        self,
        *,
        geo_target_constant_suggestions: typing.Optional[
            typing.Iterable[global___GeoTargetConstantSuggestion]
        ] = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "geo_target_constant_suggestions", b"geo_target_constant_suggestions"
        ],
    ) -> None: ...

global___SuggestGeoTargetConstantsResponse = SuggestGeoTargetConstantsResponse

class GeoTargetConstantSuggestion(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOCALE_FIELD_NUMBER: builtins.int
    REACH_FIELD_NUMBER: builtins.int
    SEARCH_TERM_FIELD_NUMBER: builtins.int
    GEO_TARGET_CONSTANT_FIELD_NUMBER: builtins.int
    GEO_TARGET_CONSTANT_PARENTS_FIELD_NUMBER: builtins.int
    locale: typing.Text = ...
    reach: builtins.int = ...
    search_term: typing.Text = ...
    @property
    def geo_target_constant(
        self,
    ) -> google.ads.google_ads.v6.proto.resources.geo_target_constant_pb2.GeoTargetConstant: ...
    @property
    def geo_target_constant_parents(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        google.ads.google_ads.v6.proto.resources.geo_target_constant_pb2.GeoTargetConstant
    ]: ...
    def __init__(
        self,
        *,
        locale: typing.Text = ...,
        reach: builtins.int = ...,
        search_term: typing.Text = ...,
        geo_target_constant: typing.Optional[
            google.ads.google_ads.v6.proto.resources.geo_target_constant_pb2.GeoTargetConstant
        ] = ...,
        geo_target_constant_parents: typing.Optional[
            typing.Iterable[
                google.ads.google_ads.v6.proto.resources.geo_target_constant_pb2.GeoTargetConstant
            ]
        ] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_locale",
            b"_locale",
            "_reach",
            b"_reach",
            "_search_term",
            b"_search_term",
            "geo_target_constant",
            b"geo_target_constant",
            "locale",
            b"locale",
            "reach",
            b"reach",
            "search_term",
            b"search_term",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_locale",
            b"_locale",
            "_reach",
            b"_reach",
            "_search_term",
            b"_search_term",
            "geo_target_constant",
            b"geo_target_constant",
            "geo_target_constant_parents",
            b"geo_target_constant_parents",
            "locale",
            b"locale",
            "reach",
            b"reach",
            "search_term",
            b"search_term",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_locale", b"_locale"]
    ) -> typing_extensions.Literal["locale"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_reach", b"_reach"]
    ) -> typing_extensions.Literal["reach"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_search_term", b"_search_term"]
    ) -> typing_extensions.Literal["search_term"]: ...

global___GeoTargetConstantSuggestion = GeoTargetConstantSuggestion

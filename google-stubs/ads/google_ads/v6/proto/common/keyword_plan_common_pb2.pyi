"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.google_ads.v6.proto.enums.keyword_plan_competition_level_pb2
import google.ads.google_ads.v6.proto.enums.month_of_year_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class KeywordPlanHistoricalMetrics(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AVG_MONTHLY_SEARCHES_FIELD_NUMBER: builtins.int
    MONTHLY_SEARCH_VOLUMES_FIELD_NUMBER: builtins.int
    COMPETITION_FIELD_NUMBER: builtins.int
    COMPETITION_INDEX_FIELD_NUMBER: builtins.int
    LOW_TOP_OF_PAGE_BID_MICROS_FIELD_NUMBER: builtins.int
    HIGH_TOP_OF_PAGE_BID_MICROS_FIELD_NUMBER: builtins.int
    avg_monthly_searches: builtins.int = ...
    competition: google.ads.google_ads.v6.proto.enums.keyword_plan_competition_level_pb2.KeywordPlanCompetitionLevelEnum.KeywordPlanCompetitionLevel.V = (
        ...
    )
    competition_index: builtins.int = ...
    low_top_of_page_bid_micros: builtins.int = ...
    high_top_of_page_bid_micros: builtins.int = ...
    @property
    def monthly_search_volumes(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___MonthlySearchVolume
    ]: ...
    def __init__(
        self,
        *,
        avg_monthly_searches: builtins.int = ...,
        monthly_search_volumes: typing.Optional[
            typing.Iterable[global___MonthlySearchVolume]
        ] = ...,
        competition: google.ads.google_ads.v6.proto.enums.keyword_plan_competition_level_pb2.KeywordPlanCompetitionLevelEnum.KeywordPlanCompetitionLevel.V = ...,
        competition_index: builtins.int = ...,
        low_top_of_page_bid_micros: builtins.int = ...,
        high_top_of_page_bid_micros: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_avg_monthly_searches",
            b"_avg_monthly_searches",
            "_competition_index",
            b"_competition_index",
            "_high_top_of_page_bid_micros",
            b"_high_top_of_page_bid_micros",
            "_low_top_of_page_bid_micros",
            b"_low_top_of_page_bid_micros",
            "avg_monthly_searches",
            b"avg_monthly_searches",
            "competition_index",
            b"competition_index",
            "high_top_of_page_bid_micros",
            b"high_top_of_page_bid_micros",
            "low_top_of_page_bid_micros",
            b"low_top_of_page_bid_micros",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_avg_monthly_searches",
            b"_avg_monthly_searches",
            "_competition_index",
            b"_competition_index",
            "_high_top_of_page_bid_micros",
            b"_high_top_of_page_bid_micros",
            "_low_top_of_page_bid_micros",
            b"_low_top_of_page_bid_micros",
            "avg_monthly_searches",
            b"avg_monthly_searches",
            "competition",
            b"competition",
            "competition_index",
            b"competition_index",
            "high_top_of_page_bid_micros",
            b"high_top_of_page_bid_micros",
            "low_top_of_page_bid_micros",
            b"low_top_of_page_bid_micros",
            "monthly_search_volumes",
            b"monthly_search_volumes",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_avg_monthly_searches", b"_avg_monthly_searches"
        ],
    ) -> typing_extensions.Literal["avg_monthly_searches"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_competition_index", b"_competition_index"
        ],
    ) -> typing_extensions.Literal["competition_index"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_high_top_of_page_bid_micros", b"_high_top_of_page_bid_micros"
        ],
    ) -> typing_extensions.Literal["high_top_of_page_bid_micros"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_low_top_of_page_bid_micros", b"_low_top_of_page_bid_micros"
        ],
    ) -> typing_extensions.Literal["low_top_of_page_bid_micros"]: ...

global___KeywordPlanHistoricalMetrics = KeywordPlanHistoricalMetrics

class MonthlySearchVolume(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    YEAR_FIELD_NUMBER: builtins.int
    MONTH_FIELD_NUMBER: builtins.int
    MONTHLY_SEARCHES_FIELD_NUMBER: builtins.int
    year: builtins.int = ...
    month: google.ads.google_ads.v6.proto.enums.month_of_year_pb2.MonthOfYearEnum.MonthOfYear.V = (
        ...
    )
    monthly_searches: builtins.int = ...
    def __init__(
        self,
        *,
        year: builtins.int = ...,
        month: google.ads.google_ads.v6.proto.enums.month_of_year_pb2.MonthOfYearEnum.MonthOfYear.V = ...,
        monthly_searches: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_monthly_searches",
            b"_monthly_searches",
            "_year",
            b"_year",
            "monthly_searches",
            b"monthly_searches",
            "year",
            b"year",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_monthly_searches",
            b"_monthly_searches",
            "_year",
            b"_year",
            "month",
            b"month",
            "monthly_searches",
            b"monthly_searches",
            "year",
            b"year",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_monthly_searches", b"_monthly_searches"
        ],
    ) -> typing_extensions.Literal["monthly_searches"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_year", b"_year"]
    ) -> typing_extensions.Literal["year"]: ...

global___MonthlySearchVolume = MonthlySearchVolume

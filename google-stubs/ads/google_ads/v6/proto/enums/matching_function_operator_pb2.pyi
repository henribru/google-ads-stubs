# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import NewType as typing___NewType, cast as typing___cast

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)
from google.protobuf.message import Message as google___protobuf___message___Message

builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class MatchingFunctionOperatorEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    MatchingFunctionOperatorValue = typing___NewType(
        "MatchingFunctionOperatorValue", builtin___int
    )
    type___MatchingFunctionOperatorValue = MatchingFunctionOperatorValue
    MatchingFunctionOperator: _MatchingFunctionOperator
    class _MatchingFunctionOperator(
        google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
            MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue
        ]
    ):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNSPECIFIED = typing___cast(
            MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue, 0
        )
        UNKNOWN = typing___cast(
            MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue, 1
        )
        IN = typing___cast(
            MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue, 2
        )
        IDENTITY = typing___cast(
            MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue, 3
        )
        EQUALS = typing___cast(
            MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue, 4
        )
        AND = typing___cast(
            MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue, 5
        )
        CONTAINS_ANY = typing___cast(
            MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue, 6
        )
    UNSPECIFIED = typing___cast(
        MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue, 0
    )
    UNKNOWN = typing___cast(
        MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue, 1
    )
    IN = typing___cast(MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue, 2)
    IDENTITY = typing___cast(
        MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue, 3
    )
    EQUALS = typing___cast(
        MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue, 4
    )
    AND = typing___cast(MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue, 5)
    CONTAINS_ANY = typing___cast(
        MatchingFunctionOperatorEnum.MatchingFunctionOperatorValue, 6
    )
    type___MatchingFunctionOperator = MatchingFunctionOperator
    def __init__(self,) -> None: ...

type___MatchingFunctionOperatorEnum = MatchingFunctionOperatorEnum

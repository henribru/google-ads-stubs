"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class DomainCategory(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    CAMPAIGN_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    DOMAIN_FIELD_NUMBER: builtins.int
    COVERAGE_FRACTION_FIELD_NUMBER: builtins.int
    CATEGORY_RANK_FIELD_NUMBER: builtins.int
    HAS_CHILDREN_FIELD_NUMBER: builtins.int
    RECOMMENDED_CPC_BID_MICROS_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    campaign: typing.Text = ...
    category: typing.Text = ...
    language_code: typing.Text = ...
    domain: typing.Text = ...
    coverage_fraction: builtins.float = ...
    category_rank: builtins.int = ...
    has_children: builtins.bool = ...
    recommended_cpc_bid_micros: builtins.int = ...
    def __init__(
        self,
        *,
        resource_name: typing.Text = ...,
        campaign: typing.Text = ...,
        category: typing.Text = ...,
        language_code: typing.Text = ...,
        domain: typing.Text = ...,
        coverage_fraction: builtins.float = ...,
        category_rank: builtins.int = ...,
        has_children: builtins.bool = ...,
        recommended_cpc_bid_micros: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_campaign",
            b"_campaign",
            "_category",
            b"_category",
            "_category_rank",
            b"_category_rank",
            "_coverage_fraction",
            b"_coverage_fraction",
            "_domain",
            b"_domain",
            "_has_children",
            b"_has_children",
            "_language_code",
            b"_language_code",
            "_recommended_cpc_bid_micros",
            b"_recommended_cpc_bid_micros",
            "campaign",
            b"campaign",
            "category",
            b"category",
            "category_rank",
            b"category_rank",
            "coverage_fraction",
            b"coverage_fraction",
            "domain",
            b"domain",
            "has_children",
            b"has_children",
            "language_code",
            b"language_code",
            "recommended_cpc_bid_micros",
            b"recommended_cpc_bid_micros",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_campaign",
            b"_campaign",
            "_category",
            b"_category",
            "_category_rank",
            b"_category_rank",
            "_coverage_fraction",
            b"_coverage_fraction",
            "_domain",
            b"_domain",
            "_has_children",
            b"_has_children",
            "_language_code",
            b"_language_code",
            "_recommended_cpc_bid_micros",
            b"_recommended_cpc_bid_micros",
            "campaign",
            b"campaign",
            "category",
            b"category",
            "category_rank",
            b"category_rank",
            "coverage_fraction",
            b"coverage_fraction",
            "domain",
            b"domain",
            "has_children",
            b"has_children",
            "language_code",
            b"language_code",
            "recommended_cpc_bid_micros",
            b"recommended_cpc_bid_micros",
            "resource_name",
            b"resource_name",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_campaign", b"_campaign"]
    ) -> typing_extensions.Literal["campaign"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_category", b"_category"]
    ) -> typing_extensions.Literal["category"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal["_category_rank", b"_category_rank"],
    ) -> typing_extensions.Literal["category_rank"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_coverage_fraction", b"_coverage_fraction"
        ],
    ) -> typing_extensions.Literal["coverage_fraction"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_domain", b"_domain"]
    ) -> typing_extensions.Literal["domain"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_has_children", b"_has_children"]
    ) -> typing_extensions.Literal["has_children"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal["_language_code", b"_language_code"],
    ) -> typing_extensions.Literal["language_code"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_recommended_cpc_bid_micros", b"_recommended_cpc_bid_micros"
        ],
    ) -> typing_extensions.Literal["recommended_cpc_bid_micros"]: ...

global___DomainCategory = DomainCategory

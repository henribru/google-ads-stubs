# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
    overload as typing___overload,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.message import Message as google___protobuf___message___Message
from typing_extensions import Literal as typing_extensions___Literal

from google.ads.google_ads.v5.proto.common.click_location_pb2 import (
    ClickLocation as google___ads___googleads___v5___common___click_location_pb2___ClickLocation,
)

builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class ClickView(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    resource_name: typing___Text = ...
    gclid: typing___Text = ...
    page_number: builtin___int = ...
    ad_group_ad: typing___Text = ...
    campaign_location_target: typing___Text = ...
    user_list: typing___Text = ...
    @property
    def area_of_interest(
        self,
    ) -> google___ads___googleads___v5___common___click_location_pb2___ClickLocation: ...
    @property
    def location_of_presence(
        self,
    ) -> google___ads___googleads___v5___common___click_location_pb2___ClickLocation: ...
    def __init__(
        self,
        *,
        resource_name: typing___Optional[typing___Text] = None,
        gclid: typing___Optional[typing___Text] = None,
        area_of_interest: typing___Optional[
            google___ads___googleads___v5___common___click_location_pb2___ClickLocation
        ] = None,
        location_of_presence: typing___Optional[
            google___ads___googleads___v5___common___click_location_pb2___ClickLocation
        ] = None,
        page_number: typing___Optional[builtin___int] = None,
        ad_group_ad: typing___Optional[typing___Text] = None,
        campaign_location_target: typing___Optional[typing___Text] = None,
        user_list: typing___Optional[typing___Text] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "_ad_group_ad",
            b"_ad_group_ad",
            "_campaign_location_target",
            b"_campaign_location_target",
            "_gclid",
            b"_gclid",
            "_page_number",
            b"_page_number",
            "_user_list",
            b"_user_list",
            "ad_group_ad",
            b"ad_group_ad",
            "area_of_interest",
            b"area_of_interest",
            "campaign_location_target",
            b"campaign_location_target",
            "gclid",
            b"gclid",
            "location_of_presence",
            b"location_of_presence",
            "page_number",
            b"page_number",
            "user_list",
            b"user_list",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "_ad_group_ad",
            b"_ad_group_ad",
            "_campaign_location_target",
            b"_campaign_location_target",
            "_gclid",
            b"_gclid",
            "_page_number",
            b"_page_number",
            "_user_list",
            b"_user_list",
            "ad_group_ad",
            b"ad_group_ad",
            "area_of_interest",
            b"area_of_interest",
            "campaign_location_target",
            b"campaign_location_target",
            "gclid",
            b"gclid",
            "location_of_presence",
            b"location_of_presence",
            "page_number",
            b"page_number",
            "resource_name",
            b"resource_name",
            "user_list",
            b"user_list",
        ],
    ) -> None: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_ad_group_ad", b"_ad_group_ad"]
    ) -> typing_extensions___Literal["ad_group_ad"]: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal[
            "_campaign_location_target", b"_campaign_location_target"
        ],
    ) -> typing_extensions___Literal["campaign_location_target"]: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_gclid", b"_gclid"]
    ) -> typing_extensions___Literal["gclid"]: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_page_number", b"_page_number"]
    ) -> typing_extensions___Literal["page_number"]: ...
    @typing___overload
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["_user_list", b"_user_list"]
    ) -> typing_extensions___Literal["user_list"]: ...

type___ClickView = ClickView

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.google_ads.v5.proto.common.click_location_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ClickView(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    GCLID_FIELD_NUMBER: builtins.int
    AREA_OF_INTEREST_FIELD_NUMBER: builtins.int
    LOCATION_OF_PRESENCE_FIELD_NUMBER: builtins.int
    PAGE_NUMBER_FIELD_NUMBER: builtins.int
    AD_GROUP_AD_FIELD_NUMBER: builtins.int
    CAMPAIGN_LOCATION_TARGET_FIELD_NUMBER: builtins.int
    USER_LIST_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    gclid: typing.Text = ...
    page_number: builtins.int = ...
    ad_group_ad: typing.Text = ...
    campaign_location_target: typing.Text = ...
    user_list: typing.Text = ...
    @property
    def area_of_interest(
        self,
    ) -> google.ads.google_ads.v5.proto.common.click_location_pb2.ClickLocation: ...
    @property
    def location_of_presence(
        self,
    ) -> google.ads.google_ads.v5.proto.common.click_location_pb2.ClickLocation: ...
    def __init__(
        self,
        *,
        resource_name: typing.Text = ...,
        gclid: typing.Text = ...,
        area_of_interest: typing.Optional[
            google.ads.google_ads.v5.proto.common.click_location_pb2.ClickLocation
        ] = ...,
        location_of_presence: typing.Optional[
            google.ads.google_ads.v5.proto.common.click_location_pb2.ClickLocation
        ] = ...,
        page_number: builtins.int = ...,
        ad_group_ad: typing.Text = ...,
        campaign_location_target: typing.Text = ...,
        user_list: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_ad_group_ad",
            b"_ad_group_ad",
            "_campaign_location_target",
            b"_campaign_location_target",
            "_gclid",
            b"_gclid",
            "_page_number",
            b"_page_number",
            "_user_list",
            b"_user_list",
            "ad_group_ad",
            b"ad_group_ad",
            "area_of_interest",
            b"area_of_interest",
            "campaign_location_target",
            b"campaign_location_target",
            "gclid",
            b"gclid",
            "location_of_presence",
            b"location_of_presence",
            "page_number",
            b"page_number",
            "user_list",
            b"user_list",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_ad_group_ad",
            b"_ad_group_ad",
            "_campaign_location_target",
            b"_campaign_location_target",
            "_gclid",
            b"_gclid",
            "_page_number",
            b"_page_number",
            "_user_list",
            b"_user_list",
            "ad_group_ad",
            b"ad_group_ad",
            "area_of_interest",
            b"area_of_interest",
            "campaign_location_target",
            b"campaign_location_target",
            "gclid",
            b"gclid",
            "location_of_presence",
            b"location_of_presence",
            "page_number",
            b"page_number",
            "resource_name",
            b"resource_name",
            "user_list",
            b"user_list",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_ad_group_ad", b"_ad_group_ad"]
    ) -> typing_extensions.Literal["ad_group_ad"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_campaign_location_target", b"_campaign_location_target"
        ],
    ) -> typing_extensions.Literal["campaign_location_target"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_gclid", b"_gclid"]
    ) -> typing_extensions.Literal["gclid"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_page_number", b"_page_number"]
    ) -> typing_extensions.Literal["page_number"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_user_list", b"_user_list"]
    ) -> typing_extensions.Literal["user_list"]: ...

global___ClickView = ClickView

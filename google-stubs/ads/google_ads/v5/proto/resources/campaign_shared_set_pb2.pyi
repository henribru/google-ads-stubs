"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.google_ads.v5.proto.enums.campaign_shared_set_status_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CampaignSharedSet(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    CAMPAIGN_FIELD_NUMBER: builtins.int
    SHARED_SET_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    campaign: typing.Text = ...
    shared_set: typing.Text = ...
    status: google.ads.google_ads.v5.proto.enums.campaign_shared_set_status_pb2.CampaignSharedSetStatusEnum.CampaignSharedSetStatus.V = (
        ...
    )
    def __init__(
        self,
        *,
        resource_name: typing.Text = ...,
        campaign: typing.Text = ...,
        shared_set: typing.Text = ...,
        status: google.ads.google_ads.v5.proto.enums.campaign_shared_set_status_pb2.CampaignSharedSetStatusEnum.CampaignSharedSetStatus.V = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_campaign",
            b"_campaign",
            "_shared_set",
            b"_shared_set",
            "campaign",
            b"campaign",
            "shared_set",
            b"shared_set",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_campaign",
            b"_campaign",
            "_shared_set",
            b"_shared_set",
            "campaign",
            b"campaign",
            "resource_name",
            b"resource_name",
            "shared_set",
            b"shared_set",
            "status",
            b"status",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_campaign", b"_campaign"]
    ) -> typing_extensions.Literal["campaign"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_shared_set", b"_shared_set"]
    ) -> typing_extensions.Literal["shared_set"]: ...

global___CampaignSharedSet = CampaignSharedSet

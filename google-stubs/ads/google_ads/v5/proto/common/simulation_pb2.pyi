"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class BidModifierSimulationPointList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    POINTS_FIELD_NUMBER: builtins.int
    @property
    def points(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___BidModifierSimulationPoint
    ]: ...
    def __init__(
        self,
        *,
        points: typing.Optional[
            typing.Iterable[global___BidModifierSimulationPoint]
        ] = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["points", b"points"]
    ) -> None: ...

global___BidModifierSimulationPointList = BidModifierSimulationPointList

class CpcBidSimulationPointList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    POINTS_FIELD_NUMBER: builtins.int
    @property
    def points(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___CpcBidSimulationPoint
    ]: ...
    def __init__(
        self,
        *,
        points: typing.Optional[typing.Iterable[global___CpcBidSimulationPoint]] = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["points", b"points"]
    ) -> None: ...

global___CpcBidSimulationPointList = CpcBidSimulationPointList

class CpvBidSimulationPointList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    POINTS_FIELD_NUMBER: builtins.int
    @property
    def points(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___CpvBidSimulationPoint
    ]: ...
    def __init__(
        self,
        *,
        points: typing.Optional[typing.Iterable[global___CpvBidSimulationPoint]] = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["points", b"points"]
    ) -> None: ...

global___CpvBidSimulationPointList = CpvBidSimulationPointList

class TargetCpaSimulationPointList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    POINTS_FIELD_NUMBER: builtins.int
    @property
    def points(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___TargetCpaSimulationPoint
    ]: ...
    def __init__(
        self,
        *,
        points: typing.Optional[
            typing.Iterable[global___TargetCpaSimulationPoint]
        ] = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["points", b"points"]
    ) -> None: ...

global___TargetCpaSimulationPointList = TargetCpaSimulationPointList

class TargetRoasSimulationPointList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    POINTS_FIELD_NUMBER: builtins.int
    @property
    def points(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___TargetRoasSimulationPoint
    ]: ...
    def __init__(
        self,
        *,
        points: typing.Optional[
            typing.Iterable[global___TargetRoasSimulationPoint]
        ] = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["points", b"points"]
    ) -> None: ...

global___TargetRoasSimulationPointList = TargetRoasSimulationPointList

class PercentCpcBidSimulationPointList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    POINTS_FIELD_NUMBER: builtins.int
    @property
    def points(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PercentCpcBidSimulationPoint
    ]: ...
    def __init__(
        self,
        *,
        points: typing.Optional[
            typing.Iterable[global___PercentCpcBidSimulationPoint]
        ] = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["points", b"points"]
    ) -> None: ...

global___PercentCpcBidSimulationPointList = PercentCpcBidSimulationPointList

class BidModifierSimulationPoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BID_MODIFIER_FIELD_NUMBER: builtins.int
    BIDDABLE_CONVERSIONS_FIELD_NUMBER: builtins.int
    BIDDABLE_CONVERSIONS_VALUE_FIELD_NUMBER: builtins.int
    CLICKS_FIELD_NUMBER: builtins.int
    COST_MICROS_FIELD_NUMBER: builtins.int
    IMPRESSIONS_FIELD_NUMBER: builtins.int
    TOP_SLOT_IMPRESSIONS_FIELD_NUMBER: builtins.int
    PARENT_BIDDABLE_CONVERSIONS_FIELD_NUMBER: builtins.int
    PARENT_BIDDABLE_CONVERSIONS_VALUE_FIELD_NUMBER: builtins.int
    PARENT_CLICKS_FIELD_NUMBER: builtins.int
    PARENT_COST_MICROS_FIELD_NUMBER: builtins.int
    PARENT_IMPRESSIONS_FIELD_NUMBER: builtins.int
    PARENT_TOP_SLOT_IMPRESSIONS_FIELD_NUMBER: builtins.int
    PARENT_REQUIRED_BUDGET_MICROS_FIELD_NUMBER: builtins.int
    bid_modifier: builtins.float = ...
    biddable_conversions: builtins.float = ...
    biddable_conversions_value: builtins.float = ...
    clicks: builtins.int = ...
    cost_micros: builtins.int = ...
    impressions: builtins.int = ...
    top_slot_impressions: builtins.int = ...
    parent_biddable_conversions: builtins.float = ...
    parent_biddable_conversions_value: builtins.float = ...
    parent_clicks: builtins.int = ...
    parent_cost_micros: builtins.int = ...
    parent_impressions: builtins.int = ...
    parent_top_slot_impressions: builtins.int = ...
    parent_required_budget_micros: builtins.int = ...
    def __init__(
        self,
        *,
        bid_modifier: builtins.float = ...,
        biddable_conversions: builtins.float = ...,
        biddable_conversions_value: builtins.float = ...,
        clicks: builtins.int = ...,
        cost_micros: builtins.int = ...,
        impressions: builtins.int = ...,
        top_slot_impressions: builtins.int = ...,
        parent_biddable_conversions: builtins.float = ...,
        parent_biddable_conversions_value: builtins.float = ...,
        parent_clicks: builtins.int = ...,
        parent_cost_micros: builtins.int = ...,
        parent_impressions: builtins.int = ...,
        parent_top_slot_impressions: builtins.int = ...,
        parent_required_budget_micros: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_bid_modifier",
            b"_bid_modifier",
            "_biddable_conversions",
            b"_biddable_conversions",
            "_biddable_conversions_value",
            b"_biddable_conversions_value",
            "_clicks",
            b"_clicks",
            "_cost_micros",
            b"_cost_micros",
            "_impressions",
            b"_impressions",
            "_parent_biddable_conversions",
            b"_parent_biddable_conversions",
            "_parent_biddable_conversions_value",
            b"_parent_biddable_conversions_value",
            "_parent_clicks",
            b"_parent_clicks",
            "_parent_cost_micros",
            b"_parent_cost_micros",
            "_parent_impressions",
            b"_parent_impressions",
            "_parent_required_budget_micros",
            b"_parent_required_budget_micros",
            "_parent_top_slot_impressions",
            b"_parent_top_slot_impressions",
            "_top_slot_impressions",
            b"_top_slot_impressions",
            "bid_modifier",
            b"bid_modifier",
            "biddable_conversions",
            b"biddable_conversions",
            "biddable_conversions_value",
            b"biddable_conversions_value",
            "clicks",
            b"clicks",
            "cost_micros",
            b"cost_micros",
            "impressions",
            b"impressions",
            "parent_biddable_conversions",
            b"parent_biddable_conversions",
            "parent_biddable_conversions_value",
            b"parent_biddable_conversions_value",
            "parent_clicks",
            b"parent_clicks",
            "parent_cost_micros",
            b"parent_cost_micros",
            "parent_impressions",
            b"parent_impressions",
            "parent_required_budget_micros",
            b"parent_required_budget_micros",
            "parent_top_slot_impressions",
            b"parent_top_slot_impressions",
            "top_slot_impressions",
            b"top_slot_impressions",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_bid_modifier",
            b"_bid_modifier",
            "_biddable_conversions",
            b"_biddable_conversions",
            "_biddable_conversions_value",
            b"_biddable_conversions_value",
            "_clicks",
            b"_clicks",
            "_cost_micros",
            b"_cost_micros",
            "_impressions",
            b"_impressions",
            "_parent_biddable_conversions",
            b"_parent_biddable_conversions",
            "_parent_biddable_conversions_value",
            b"_parent_biddable_conversions_value",
            "_parent_clicks",
            b"_parent_clicks",
            "_parent_cost_micros",
            b"_parent_cost_micros",
            "_parent_impressions",
            b"_parent_impressions",
            "_parent_required_budget_micros",
            b"_parent_required_budget_micros",
            "_parent_top_slot_impressions",
            b"_parent_top_slot_impressions",
            "_top_slot_impressions",
            b"_top_slot_impressions",
            "bid_modifier",
            b"bid_modifier",
            "biddable_conversions",
            b"biddable_conversions",
            "biddable_conversions_value",
            b"biddable_conversions_value",
            "clicks",
            b"clicks",
            "cost_micros",
            b"cost_micros",
            "impressions",
            b"impressions",
            "parent_biddable_conversions",
            b"parent_biddable_conversions",
            "parent_biddable_conversions_value",
            b"parent_biddable_conversions_value",
            "parent_clicks",
            b"parent_clicks",
            "parent_cost_micros",
            b"parent_cost_micros",
            "parent_impressions",
            b"parent_impressions",
            "parent_required_budget_micros",
            b"parent_required_budget_micros",
            "parent_top_slot_impressions",
            b"parent_top_slot_impressions",
            "top_slot_impressions",
            b"top_slot_impressions",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_bid_modifier", b"_bid_modifier"]
    ) -> typing_extensions.Literal["bid_modifier"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_biddable_conversions", b"_biddable_conversions"
        ],
    ) -> typing_extensions.Literal["biddable_conversions"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_biddable_conversions_value", b"_biddable_conversions_value"
        ],
    ) -> typing_extensions.Literal["biddable_conversions_value"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_clicks", b"_clicks"]
    ) -> typing_extensions.Literal["clicks"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_cost_micros", b"_cost_micros"]
    ) -> typing_extensions.Literal["cost_micros"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_impressions", b"_impressions"]
    ) -> typing_extensions.Literal["impressions"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_parent_biddable_conversions", b"_parent_biddable_conversions"
        ],
    ) -> typing_extensions.Literal["parent_biddable_conversions"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_parent_biddable_conversions_value", b"_parent_biddable_conversions_value"
        ],
    ) -> typing_extensions.Literal["parent_biddable_conversions_value"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal["_parent_clicks", b"_parent_clicks"],
    ) -> typing_extensions.Literal["parent_clicks"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_parent_cost_micros", b"_parent_cost_micros"
        ],
    ) -> typing_extensions.Literal["parent_cost_micros"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_parent_impressions", b"_parent_impressions"
        ],
    ) -> typing_extensions.Literal["parent_impressions"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_parent_required_budget_micros", b"_parent_required_budget_micros"
        ],
    ) -> typing_extensions.Literal["parent_required_budget_micros"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_parent_top_slot_impressions", b"_parent_top_slot_impressions"
        ],
    ) -> typing_extensions.Literal["parent_top_slot_impressions"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_top_slot_impressions", b"_top_slot_impressions"
        ],
    ) -> typing_extensions.Literal["top_slot_impressions"]: ...

global___BidModifierSimulationPoint = BidModifierSimulationPoint

class CpcBidSimulationPoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CPC_BID_MICROS_FIELD_NUMBER: builtins.int
    BIDDABLE_CONVERSIONS_FIELD_NUMBER: builtins.int
    BIDDABLE_CONVERSIONS_VALUE_FIELD_NUMBER: builtins.int
    CLICKS_FIELD_NUMBER: builtins.int
    COST_MICROS_FIELD_NUMBER: builtins.int
    IMPRESSIONS_FIELD_NUMBER: builtins.int
    TOP_SLOT_IMPRESSIONS_FIELD_NUMBER: builtins.int
    cpc_bid_micros: builtins.int = ...
    biddable_conversions: builtins.float = ...
    biddable_conversions_value: builtins.float = ...
    clicks: builtins.int = ...
    cost_micros: builtins.int = ...
    impressions: builtins.int = ...
    top_slot_impressions: builtins.int = ...
    def __init__(
        self,
        *,
        cpc_bid_micros: builtins.int = ...,
        biddable_conversions: builtins.float = ...,
        biddable_conversions_value: builtins.float = ...,
        clicks: builtins.int = ...,
        cost_micros: builtins.int = ...,
        impressions: builtins.int = ...,
        top_slot_impressions: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_biddable_conversions",
            b"_biddable_conversions",
            "_biddable_conversions_value",
            b"_biddable_conversions_value",
            "_clicks",
            b"_clicks",
            "_cost_micros",
            b"_cost_micros",
            "_cpc_bid_micros",
            b"_cpc_bid_micros",
            "_impressions",
            b"_impressions",
            "_top_slot_impressions",
            b"_top_slot_impressions",
            "biddable_conversions",
            b"biddable_conversions",
            "biddable_conversions_value",
            b"biddable_conversions_value",
            "clicks",
            b"clicks",
            "cost_micros",
            b"cost_micros",
            "cpc_bid_micros",
            b"cpc_bid_micros",
            "impressions",
            b"impressions",
            "top_slot_impressions",
            b"top_slot_impressions",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_biddable_conversions",
            b"_biddable_conversions",
            "_biddable_conversions_value",
            b"_biddable_conversions_value",
            "_clicks",
            b"_clicks",
            "_cost_micros",
            b"_cost_micros",
            "_cpc_bid_micros",
            b"_cpc_bid_micros",
            "_impressions",
            b"_impressions",
            "_top_slot_impressions",
            b"_top_slot_impressions",
            "biddable_conversions",
            b"biddable_conversions",
            "biddable_conversions_value",
            b"biddable_conversions_value",
            "clicks",
            b"clicks",
            "cost_micros",
            b"cost_micros",
            "cpc_bid_micros",
            b"cpc_bid_micros",
            "impressions",
            b"impressions",
            "top_slot_impressions",
            b"top_slot_impressions",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_biddable_conversions", b"_biddable_conversions"
        ],
    ) -> typing_extensions.Literal["biddable_conversions"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_biddable_conversions_value", b"_biddable_conversions_value"
        ],
    ) -> typing_extensions.Literal["biddable_conversions_value"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_clicks", b"_clicks"]
    ) -> typing_extensions.Literal["clicks"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_cost_micros", b"_cost_micros"]
    ) -> typing_extensions.Literal["cost_micros"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal["_cpc_bid_micros", b"_cpc_bid_micros"],
    ) -> typing_extensions.Literal["cpc_bid_micros"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_impressions", b"_impressions"]
    ) -> typing_extensions.Literal["impressions"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_top_slot_impressions", b"_top_slot_impressions"
        ],
    ) -> typing_extensions.Literal["top_slot_impressions"]: ...

global___CpcBidSimulationPoint = CpcBidSimulationPoint

class CpvBidSimulationPoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CPV_BID_MICROS_FIELD_NUMBER: builtins.int
    COST_MICROS_FIELD_NUMBER: builtins.int
    IMPRESSIONS_FIELD_NUMBER: builtins.int
    VIEWS_FIELD_NUMBER: builtins.int
    cpv_bid_micros: builtins.int = ...
    cost_micros: builtins.int = ...
    impressions: builtins.int = ...
    views: builtins.int = ...
    def __init__(
        self,
        *,
        cpv_bid_micros: builtins.int = ...,
        cost_micros: builtins.int = ...,
        impressions: builtins.int = ...,
        views: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_cost_micros",
            b"_cost_micros",
            "_cpv_bid_micros",
            b"_cpv_bid_micros",
            "_impressions",
            b"_impressions",
            "_views",
            b"_views",
            "cost_micros",
            b"cost_micros",
            "cpv_bid_micros",
            b"cpv_bid_micros",
            "impressions",
            b"impressions",
            "views",
            b"views",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_cost_micros",
            b"_cost_micros",
            "_cpv_bid_micros",
            b"_cpv_bid_micros",
            "_impressions",
            b"_impressions",
            "_views",
            b"_views",
            "cost_micros",
            b"cost_micros",
            "cpv_bid_micros",
            b"cpv_bid_micros",
            "impressions",
            b"impressions",
            "views",
            b"views",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_cost_micros", b"_cost_micros"]
    ) -> typing_extensions.Literal["cost_micros"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal["_cpv_bid_micros", b"_cpv_bid_micros"],
    ) -> typing_extensions.Literal["cpv_bid_micros"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_impressions", b"_impressions"]
    ) -> typing_extensions.Literal["impressions"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_views", b"_views"]
    ) -> typing_extensions.Literal["views"]: ...

global___CpvBidSimulationPoint = CpvBidSimulationPoint

class TargetCpaSimulationPoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_CPA_MICROS_FIELD_NUMBER: builtins.int
    BIDDABLE_CONVERSIONS_FIELD_NUMBER: builtins.int
    BIDDABLE_CONVERSIONS_VALUE_FIELD_NUMBER: builtins.int
    CLICKS_FIELD_NUMBER: builtins.int
    COST_MICROS_FIELD_NUMBER: builtins.int
    IMPRESSIONS_FIELD_NUMBER: builtins.int
    TOP_SLOT_IMPRESSIONS_FIELD_NUMBER: builtins.int
    target_cpa_micros: builtins.int = ...
    biddable_conversions: builtins.float = ...
    biddable_conversions_value: builtins.float = ...
    clicks: builtins.int = ...
    cost_micros: builtins.int = ...
    impressions: builtins.int = ...
    top_slot_impressions: builtins.int = ...
    def __init__(
        self,
        *,
        target_cpa_micros: builtins.int = ...,
        biddable_conversions: builtins.float = ...,
        biddable_conversions_value: builtins.float = ...,
        clicks: builtins.int = ...,
        cost_micros: builtins.int = ...,
        impressions: builtins.int = ...,
        top_slot_impressions: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_biddable_conversions",
            b"_biddable_conversions",
            "_biddable_conversions_value",
            b"_biddable_conversions_value",
            "_clicks",
            b"_clicks",
            "_cost_micros",
            b"_cost_micros",
            "_impressions",
            b"_impressions",
            "_target_cpa_micros",
            b"_target_cpa_micros",
            "_top_slot_impressions",
            b"_top_slot_impressions",
            "biddable_conversions",
            b"biddable_conversions",
            "biddable_conversions_value",
            b"biddable_conversions_value",
            "clicks",
            b"clicks",
            "cost_micros",
            b"cost_micros",
            "impressions",
            b"impressions",
            "target_cpa_micros",
            b"target_cpa_micros",
            "top_slot_impressions",
            b"top_slot_impressions",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_biddable_conversions",
            b"_biddable_conversions",
            "_biddable_conversions_value",
            b"_biddable_conversions_value",
            "_clicks",
            b"_clicks",
            "_cost_micros",
            b"_cost_micros",
            "_impressions",
            b"_impressions",
            "_target_cpa_micros",
            b"_target_cpa_micros",
            "_top_slot_impressions",
            b"_top_slot_impressions",
            "biddable_conversions",
            b"biddable_conversions",
            "biddable_conversions_value",
            b"biddable_conversions_value",
            "clicks",
            b"clicks",
            "cost_micros",
            b"cost_micros",
            "impressions",
            b"impressions",
            "target_cpa_micros",
            b"target_cpa_micros",
            "top_slot_impressions",
            b"top_slot_impressions",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_biddable_conversions", b"_biddable_conversions"
        ],
    ) -> typing_extensions.Literal["biddable_conversions"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_biddable_conversions_value", b"_biddable_conversions_value"
        ],
    ) -> typing_extensions.Literal["biddable_conversions_value"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_clicks", b"_clicks"]
    ) -> typing_extensions.Literal["clicks"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_cost_micros", b"_cost_micros"]
    ) -> typing_extensions.Literal["cost_micros"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_impressions", b"_impressions"]
    ) -> typing_extensions.Literal["impressions"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_target_cpa_micros", b"_target_cpa_micros"
        ],
    ) -> typing_extensions.Literal["target_cpa_micros"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_top_slot_impressions", b"_top_slot_impressions"
        ],
    ) -> typing_extensions.Literal["top_slot_impressions"]: ...

global___TargetCpaSimulationPoint = TargetCpaSimulationPoint

class TargetRoasSimulationPoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_ROAS_FIELD_NUMBER: builtins.int
    BIDDABLE_CONVERSIONS_FIELD_NUMBER: builtins.int
    BIDDABLE_CONVERSIONS_VALUE_FIELD_NUMBER: builtins.int
    CLICKS_FIELD_NUMBER: builtins.int
    COST_MICROS_FIELD_NUMBER: builtins.int
    IMPRESSIONS_FIELD_NUMBER: builtins.int
    TOP_SLOT_IMPRESSIONS_FIELD_NUMBER: builtins.int
    target_roas: builtins.float = ...
    biddable_conversions: builtins.float = ...
    biddable_conversions_value: builtins.float = ...
    clicks: builtins.int = ...
    cost_micros: builtins.int = ...
    impressions: builtins.int = ...
    top_slot_impressions: builtins.int = ...
    def __init__(
        self,
        *,
        target_roas: builtins.float = ...,
        biddable_conversions: builtins.float = ...,
        biddable_conversions_value: builtins.float = ...,
        clicks: builtins.int = ...,
        cost_micros: builtins.int = ...,
        impressions: builtins.int = ...,
        top_slot_impressions: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_biddable_conversions",
            b"_biddable_conversions",
            "_biddable_conversions_value",
            b"_biddable_conversions_value",
            "_clicks",
            b"_clicks",
            "_cost_micros",
            b"_cost_micros",
            "_impressions",
            b"_impressions",
            "_target_roas",
            b"_target_roas",
            "_top_slot_impressions",
            b"_top_slot_impressions",
            "biddable_conversions",
            b"biddable_conversions",
            "biddable_conversions_value",
            b"biddable_conversions_value",
            "clicks",
            b"clicks",
            "cost_micros",
            b"cost_micros",
            "impressions",
            b"impressions",
            "target_roas",
            b"target_roas",
            "top_slot_impressions",
            b"top_slot_impressions",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_biddable_conversions",
            b"_biddable_conversions",
            "_biddable_conversions_value",
            b"_biddable_conversions_value",
            "_clicks",
            b"_clicks",
            "_cost_micros",
            b"_cost_micros",
            "_impressions",
            b"_impressions",
            "_target_roas",
            b"_target_roas",
            "_top_slot_impressions",
            b"_top_slot_impressions",
            "biddable_conversions",
            b"biddable_conversions",
            "biddable_conversions_value",
            b"biddable_conversions_value",
            "clicks",
            b"clicks",
            "cost_micros",
            b"cost_micros",
            "impressions",
            b"impressions",
            "target_roas",
            b"target_roas",
            "top_slot_impressions",
            b"top_slot_impressions",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_biddable_conversions", b"_biddable_conversions"
        ],
    ) -> typing_extensions.Literal["biddable_conversions"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_biddable_conversions_value", b"_biddable_conversions_value"
        ],
    ) -> typing_extensions.Literal["biddable_conversions_value"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_clicks", b"_clicks"]
    ) -> typing_extensions.Literal["clicks"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_cost_micros", b"_cost_micros"]
    ) -> typing_extensions.Literal["cost_micros"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_impressions", b"_impressions"]
    ) -> typing_extensions.Literal["impressions"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_target_roas", b"_target_roas"]
    ) -> typing_extensions.Literal["target_roas"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_top_slot_impressions", b"_top_slot_impressions"
        ],
    ) -> typing_extensions.Literal["top_slot_impressions"]: ...

global___TargetRoasSimulationPoint = TargetRoasSimulationPoint

class PercentCpcBidSimulationPoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PERCENT_CPC_BID_MICROS_FIELD_NUMBER: builtins.int
    BIDDABLE_CONVERSIONS_FIELD_NUMBER: builtins.int
    BIDDABLE_CONVERSIONS_VALUE_FIELD_NUMBER: builtins.int
    CLICKS_FIELD_NUMBER: builtins.int
    COST_MICROS_FIELD_NUMBER: builtins.int
    IMPRESSIONS_FIELD_NUMBER: builtins.int
    TOP_SLOT_IMPRESSIONS_FIELD_NUMBER: builtins.int
    percent_cpc_bid_micros: builtins.int = ...
    biddable_conversions: builtins.float = ...
    biddable_conversions_value: builtins.float = ...
    clicks: builtins.int = ...
    cost_micros: builtins.int = ...
    impressions: builtins.int = ...
    top_slot_impressions: builtins.int = ...
    def __init__(
        self,
        *,
        percent_cpc_bid_micros: builtins.int = ...,
        biddable_conversions: builtins.float = ...,
        biddable_conversions_value: builtins.float = ...,
        clicks: builtins.int = ...,
        cost_micros: builtins.int = ...,
        impressions: builtins.int = ...,
        top_slot_impressions: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_biddable_conversions",
            b"_biddable_conversions",
            "_biddable_conversions_value",
            b"_biddable_conversions_value",
            "_clicks",
            b"_clicks",
            "_cost_micros",
            b"_cost_micros",
            "_impressions",
            b"_impressions",
            "_percent_cpc_bid_micros",
            b"_percent_cpc_bid_micros",
            "_top_slot_impressions",
            b"_top_slot_impressions",
            "biddable_conversions",
            b"biddable_conversions",
            "biddable_conversions_value",
            b"biddable_conversions_value",
            "clicks",
            b"clicks",
            "cost_micros",
            b"cost_micros",
            "impressions",
            b"impressions",
            "percent_cpc_bid_micros",
            b"percent_cpc_bid_micros",
            "top_slot_impressions",
            b"top_slot_impressions",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_biddable_conversions",
            b"_biddable_conversions",
            "_biddable_conversions_value",
            b"_biddable_conversions_value",
            "_clicks",
            b"_clicks",
            "_cost_micros",
            b"_cost_micros",
            "_impressions",
            b"_impressions",
            "_percent_cpc_bid_micros",
            b"_percent_cpc_bid_micros",
            "_top_slot_impressions",
            b"_top_slot_impressions",
            "biddable_conversions",
            b"biddable_conversions",
            "biddable_conversions_value",
            b"biddable_conversions_value",
            "clicks",
            b"clicks",
            "cost_micros",
            b"cost_micros",
            "impressions",
            b"impressions",
            "percent_cpc_bid_micros",
            b"percent_cpc_bid_micros",
            "top_slot_impressions",
            b"top_slot_impressions",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_biddable_conversions", b"_biddable_conversions"
        ],
    ) -> typing_extensions.Literal["biddable_conversions"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_biddable_conversions_value", b"_biddable_conversions_value"
        ],
    ) -> typing_extensions.Literal["biddable_conversions_value"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_clicks", b"_clicks"]
    ) -> typing_extensions.Literal["clicks"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_cost_micros", b"_cost_micros"]
    ) -> typing_extensions.Literal["cost_micros"]: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_impressions", b"_impressions"]
    ) -> typing_extensions.Literal["impressions"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_percent_cpc_bid_micros", b"_percent_cpc_bid_micros"
        ],
    ) -> typing_extensions.Literal["percent_cpc_bid_micros"]: ...
    @typing.overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal[
            "_top_slot_impressions", b"_top_slot_impressions"
        ],
    ) -> typing_extensions.Literal["top_slot_impressions"]: ...

global___PercentCpcBidSimulationPoint = PercentCpcBidSimulationPoint

# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
    overload as typing___overload,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.message import Message as google___protobuf___message___Message
from typing_extensions import Literal as typing_extensions___Literal

from google.ads.google_ads.v5.proto.enums.tracking_code_page_format_pb2 import (
    TrackingCodePageFormatEnum as google___ads___googleads___v5___enums___tracking_code_page_format_pb2___TrackingCodePageFormatEnum,
)
from google.ads.google_ads.v5.proto.enums.tracking_code_type_pb2 import (
    TrackingCodeTypeEnum as google___ads___googleads___v5___enums___tracking_code_type_pb2___TrackingCodeTypeEnum,
)

builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class TagSnippet(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    type: google___ads___googleads___v5___enums___tracking_code_type_pb2___TrackingCodeTypeEnum.TrackingCodeTypeValue = ...
    page_format: google___ads___googleads___v5___enums___tracking_code_page_format_pb2___TrackingCodePageFormatEnum.TrackingCodePageFormatValue = ...
    global_site_tag: typing___Text = ...
    event_snippet: typing___Text = ...
    def __init__(
        self,
        *,
        type: typing___Optional[
            google___ads___googleads___v5___enums___tracking_code_type_pb2___TrackingCodeTypeEnum.TrackingCodeTypeValue
        ] = None,
        page_format: typing___Optional[
            google___ads___googleads___v5___enums___tracking_code_page_format_pb2___TrackingCodePageFormatEnum.TrackingCodePageFormatValue
        ] = None,
        global_site_tag: typing___Optional[typing___Text] = None,
        event_snippet: typing___Optional[typing___Text] = None,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "_event_snippet",
            b"_event_snippet",
            "_global_site_tag",
            b"_global_site_tag",
            "event_snippet",
            b"event_snippet",
            "global_site_tag",
            b"global_site_tag",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "_event_snippet",
            b"_event_snippet",
            "_global_site_tag",
            b"_global_site_tag",
            "event_snippet",
            b"event_snippet",
            "global_site_tag",
            b"global_site_tag",
            "page_format",
            b"page_format",
            "type",
            b"type",
        ],
    ) -> None: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal["_event_snippet", b"_event_snippet"],
    ) -> typing_extensions___Literal["event_snippet"]: ...
    @typing___overload
    def WhichOneof(
        self,
        oneof_group: typing_extensions___Literal[
            "_global_site_tag", b"_global_site_tag"
        ],
    ) -> typing_extensions___Literal["global_site_tag"]: ...

type___TagSnippet = TagSnippet

# @generated by mypy-protobuf.  Do not edit manually!
import sys
from typing import NewType as typing___NewType, cast as typing___cast

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)
from google.protobuf.message import Message as google___protobuf___message___Message

builtin___int = int

DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class LabelErrorEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    LabelErrorValue = typing___NewType("LabelErrorValue", builtin___int)
    type___LabelErrorValue = LabelErrorValue
    LabelError: _LabelError
    class _LabelError(
        google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[
            LabelErrorEnum.LabelErrorValue
        ]
    ):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNSPECIFIED = typing___cast(LabelErrorEnum.LabelErrorValue, 0)
        UNKNOWN = typing___cast(LabelErrorEnum.LabelErrorValue, 1)
        CANNOT_APPLY_INACTIVE_LABEL = typing___cast(LabelErrorEnum.LabelErrorValue, 2)
        CANNOT_APPLY_LABEL_TO_DISABLED_AD_GROUP_CRITERION = typing___cast(
            LabelErrorEnum.LabelErrorValue, 3
        )
        CANNOT_APPLY_LABEL_TO_NEGATIVE_AD_GROUP_CRITERION = typing___cast(
            LabelErrorEnum.LabelErrorValue, 4
        )
        EXCEEDED_LABEL_LIMIT_PER_TYPE = typing___cast(LabelErrorEnum.LabelErrorValue, 5)
        INVALID_RESOURCE_FOR_MANAGER_LABEL = typing___cast(
            LabelErrorEnum.LabelErrorValue, 6
        )
        DUPLICATE_NAME = typing___cast(LabelErrorEnum.LabelErrorValue, 7)
        INVALID_LABEL_NAME = typing___cast(LabelErrorEnum.LabelErrorValue, 8)
        CANNOT_ATTACH_LABEL_TO_DRAFT = typing___cast(LabelErrorEnum.LabelErrorValue, 9)
        CANNOT_ATTACH_NON_MANAGER_LABEL_TO_CUSTOMER = typing___cast(
            LabelErrorEnum.LabelErrorValue, 10
        )
    UNSPECIFIED = typing___cast(LabelErrorEnum.LabelErrorValue, 0)
    UNKNOWN = typing___cast(LabelErrorEnum.LabelErrorValue, 1)
    CANNOT_APPLY_INACTIVE_LABEL = typing___cast(LabelErrorEnum.LabelErrorValue, 2)
    CANNOT_APPLY_LABEL_TO_DISABLED_AD_GROUP_CRITERION = typing___cast(
        LabelErrorEnum.LabelErrorValue, 3
    )
    CANNOT_APPLY_LABEL_TO_NEGATIVE_AD_GROUP_CRITERION = typing___cast(
        LabelErrorEnum.LabelErrorValue, 4
    )
    EXCEEDED_LABEL_LIMIT_PER_TYPE = typing___cast(LabelErrorEnum.LabelErrorValue, 5)
    INVALID_RESOURCE_FOR_MANAGER_LABEL = typing___cast(
        LabelErrorEnum.LabelErrorValue, 6
    )
    DUPLICATE_NAME = typing___cast(LabelErrorEnum.LabelErrorValue, 7)
    INVALID_LABEL_NAME = typing___cast(LabelErrorEnum.LabelErrorValue, 8)
    CANNOT_ATTACH_LABEL_TO_DRAFT = typing___cast(LabelErrorEnum.LabelErrorValue, 9)
    CANNOT_ATTACH_NON_MANAGER_LABEL_TO_CUSTOMER = typing___cast(
        LabelErrorEnum.LabelErrorValue, 10
    )
    type___LabelError = LabelError
    def __init__(self,) -> None: ...

type___LabelErrorEnum = LabelErrorEnum

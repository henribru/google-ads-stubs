# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.ads.google_ads.v1.proto.common.bidding_pb2 import (
    Commission as google___ads___googleads___v1___common___bidding_pb2___Commission,
    ManualCpc as google___ads___googleads___v1___common___bidding_pb2___ManualCpc,
    ManualCpm as google___ads___googleads___v1___common___bidding_pb2___ManualCpm,
    ManualCpv as google___ads___googleads___v1___common___bidding_pb2___ManualCpv,
    MaximizeConversionValue as google___ads___googleads___v1___common___bidding_pb2___MaximizeConversionValue,
    MaximizeConversions as google___ads___googleads___v1___common___bidding_pb2___MaximizeConversions,
    PercentCpc as google___ads___googleads___v1___common___bidding_pb2___PercentCpc,
    TargetCpa as google___ads___googleads___v1___common___bidding_pb2___TargetCpa,
    TargetCpm as google___ads___googleads___v1___common___bidding_pb2___TargetCpm,
    TargetImpressionShare as google___ads___googleads___v1___common___bidding_pb2___TargetImpressionShare,
    TargetRoas as google___ads___googleads___v1___common___bidding_pb2___TargetRoas,
    TargetSpend as google___ads___googleads___v1___common___bidding_pb2___TargetSpend,
)

from google.ads.google_ads.v1.proto.common.custom_parameter_pb2 import (
    CustomParameter as google___ads___googleads___v1___common___custom_parameter_pb2___CustomParameter,
)

from google.ads.google_ads.v1.proto.common.frequency_cap_pb2 import (
    FrequencyCapEntry as google___ads___googleads___v1___common___frequency_cap_pb2___FrequencyCapEntry,
)

from google.ads.google_ads.v1.proto.common.real_time_bidding_setting_pb2 import (
    RealTimeBiddingSetting as google___ads___googleads___v1___common___real_time_bidding_setting_pb2___RealTimeBiddingSetting,
)

from google.ads.google_ads.v1.proto.common.targeting_setting_pb2 import (
    TargetingSetting as google___ads___googleads___v1___common___targeting_setting_pb2___TargetingSetting,
)

from google.ads.google_ads.v1.proto.enums.ad_serving_optimization_status_pb2 import (
    AdServingOptimizationStatusEnum as google___ads___googleads___v1___enums___ad_serving_optimization_status_pb2___AdServingOptimizationStatusEnum,
)

from google.ads.google_ads.v1.proto.enums.advertising_channel_sub_type_pb2 import (
    AdvertisingChannelSubTypeEnum as google___ads___googleads___v1___enums___advertising_channel_sub_type_pb2___AdvertisingChannelSubTypeEnum,
)

from google.ads.google_ads.v1.proto.enums.advertising_channel_type_pb2 import (
    AdvertisingChannelTypeEnum as google___ads___googleads___v1___enums___advertising_channel_type_pb2___AdvertisingChannelTypeEnum,
)

from google.ads.google_ads.v1.proto.enums.app_campaign_app_store_pb2 import (
    AppCampaignAppStoreEnum as google___ads___googleads___v1___enums___app_campaign_app_store_pb2___AppCampaignAppStoreEnum,
)

from google.ads.google_ads.v1.proto.enums.app_campaign_bidding_strategy_goal_type_pb2 import (
    AppCampaignBiddingStrategyGoalTypeEnum as google___ads___googleads___v1___enums___app_campaign_bidding_strategy_goal_type_pb2___AppCampaignBiddingStrategyGoalTypeEnum,
)

from google.ads.google_ads.v1.proto.enums.bidding_strategy_type_pb2 import (
    BiddingStrategyTypeEnum as google___ads___googleads___v1___enums___bidding_strategy_type_pb2___BiddingStrategyTypeEnum,
)

from google.ads.google_ads.v1.proto.enums.brand_safety_suitability_pb2 import (
    BrandSafetySuitabilityEnum as google___ads___googleads___v1___enums___brand_safety_suitability_pb2___BrandSafetySuitabilityEnum,
)

from google.ads.google_ads.v1.proto.enums.campaign_experiment_type_pb2 import (
    CampaignExperimentTypeEnum as google___ads___googleads___v1___enums___campaign_experiment_type_pb2___CampaignExperimentTypeEnum,
)

from google.ads.google_ads.v1.proto.enums.campaign_serving_status_pb2 import (
    CampaignServingStatusEnum as google___ads___googleads___v1___enums___campaign_serving_status_pb2___CampaignServingStatusEnum,
)

from google.ads.google_ads.v1.proto.enums.campaign_status_pb2 import (
    CampaignStatusEnum as google___ads___googleads___v1___enums___campaign_status_pb2___CampaignStatusEnum,
)

from google.ads.google_ads.v1.proto.enums.negative_geo_target_type_pb2 import (
    NegativeGeoTargetTypeEnum as google___ads___googleads___v1___enums___negative_geo_target_type_pb2___NegativeGeoTargetTypeEnum,
)

from google.ads.google_ads.v1.proto.enums.payment_mode_pb2 import (
    PaymentModeEnum as google___ads___googleads___v1___enums___payment_mode_pb2___PaymentModeEnum,
)

from google.ads.google_ads.v1.proto.enums.positive_geo_target_type_pb2 import (
    PositiveGeoTargetTypeEnum as google___ads___googleads___v1___enums___positive_geo_target_type_pb2___PositiveGeoTargetTypeEnum,
)

from google.ads.google_ads.v1.proto.enums.vanity_pharma_display_url_mode_pb2 import (
    VanityPharmaDisplayUrlModeEnum as google___ads___googleads___v1___enums___vanity_pharma_display_url_mode_pb2___VanityPharmaDisplayUrlModeEnum,
)

from google.ads.google_ads.v1.proto.enums.vanity_pharma_text_pb2 import (
    VanityPharmaTextEnum as google___ads___googleads___v1___enums___vanity_pharma_text_pb2___VanityPharmaTextEnum,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.protobuf.wrappers_pb2 import (
    BoolValue as google___protobuf___wrappers_pb2___BoolValue,
    Int32Value as google___protobuf___wrappers_pb2___Int32Value,
    Int64Value as google___protobuf___wrappers_pb2___Int64Value,
    StringValue as google___protobuf___wrappers_pb2___StringValue,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class Campaign(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class NetworkSettings(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def target_google_search(self) -> google___protobuf___wrappers_pb2___BoolValue: ...

        @property
        def target_search_network(self) -> google___protobuf___wrappers_pb2___BoolValue: ...

        @property
        def target_content_network(self) -> google___protobuf___wrappers_pb2___BoolValue: ...

        @property
        def target_partner_search_network(self) -> google___protobuf___wrappers_pb2___BoolValue: ...

        def __init__(self,
            *,
            target_google_search : typing___Optional[google___protobuf___wrappers_pb2___BoolValue] = None,
            target_search_network : typing___Optional[google___protobuf___wrappers_pb2___BoolValue] = None,
            target_content_network : typing___Optional[google___protobuf___wrappers_pb2___BoolValue] = None,
            target_partner_search_network : typing___Optional[google___protobuf___wrappers_pb2___BoolValue] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Campaign.NetworkSettings: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"target_content_network",u"target_google_search",u"target_partner_search_network",u"target_search_network"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"target_content_network",u"target_google_search",u"target_partner_search_network",u"target_search_network"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"target_content_network",b"target_content_network",u"target_google_search",b"target_google_search",u"target_partner_search_network",b"target_partner_search_network",u"target_search_network",b"target_search_network"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"target_content_network",b"target_content_network",u"target_google_search",b"target_google_search",u"target_partner_search_network",b"target_partner_search_network",u"target_search_network",b"target_search_network"]) -> None: ...

    class HotelSettingInfo(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def hotel_center_id(self) -> google___protobuf___wrappers_pb2___Int64Value: ...

        def __init__(self,
            *,
            hotel_center_id : typing___Optional[google___protobuf___wrappers_pb2___Int64Value] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Campaign.HotelSettingInfo: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"hotel_center_id"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"hotel_center_id"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"hotel_center_id",b"hotel_center_id"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"hotel_center_id",b"hotel_center_id"]) -> None: ...

    class VanityPharma(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        vanity_pharma_display_url_mode = ... # type: google___ads___googleads___v1___enums___vanity_pharma_display_url_mode_pb2___VanityPharmaDisplayUrlModeEnum.VanityPharmaDisplayUrlMode
        vanity_pharma_text = ... # type: google___ads___googleads___v1___enums___vanity_pharma_text_pb2___VanityPharmaTextEnum.VanityPharmaText

        def __init__(self,
            *,
            vanity_pharma_display_url_mode : typing___Optional[google___ads___googleads___v1___enums___vanity_pharma_display_url_mode_pb2___VanityPharmaDisplayUrlModeEnum.VanityPharmaDisplayUrlMode] = None,
            vanity_pharma_text : typing___Optional[google___ads___googleads___v1___enums___vanity_pharma_text_pb2___VanityPharmaTextEnum.VanityPharmaText] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Campaign.VanityPharma: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"vanity_pharma_display_url_mode",u"vanity_pharma_text"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[u"vanity_pharma_display_url_mode",b"vanity_pharma_display_url_mode",u"vanity_pharma_text",b"vanity_pharma_text"]) -> None: ...

    class DynamicSearchAdsSetting(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def domain_name(self) -> google___protobuf___wrappers_pb2___StringValue: ...

        @property
        def language_code(self) -> google___protobuf___wrappers_pb2___StringValue: ...

        @property
        def use_supplied_urls_only(self) -> google___protobuf___wrappers_pb2___BoolValue: ...

        @property
        def feeds(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[google___protobuf___wrappers_pb2___StringValue]: ...

        def __init__(self,
            *,
            domain_name : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
            language_code : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
            use_supplied_urls_only : typing___Optional[google___protobuf___wrappers_pb2___BoolValue] = None,
            feeds : typing___Optional[typing___Iterable[google___protobuf___wrappers_pb2___StringValue]] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Campaign.DynamicSearchAdsSetting: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"domain_name",u"language_code",u"use_supplied_urls_only"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"domain_name",u"feeds",u"language_code",u"use_supplied_urls_only"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"domain_name",b"domain_name",u"language_code",b"language_code",u"use_supplied_urls_only",b"use_supplied_urls_only"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"domain_name",b"domain_name",u"feeds",b"feeds",u"language_code",b"language_code",u"use_supplied_urls_only",b"use_supplied_urls_only"]) -> None: ...

    class ShoppingSetting(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def merchant_id(self) -> google___protobuf___wrappers_pb2___Int64Value: ...

        @property
        def sales_country(self) -> google___protobuf___wrappers_pb2___StringValue: ...

        @property
        def campaign_priority(self) -> google___protobuf___wrappers_pb2___Int32Value: ...

        @property
        def enable_local(self) -> google___protobuf___wrappers_pb2___BoolValue: ...

        def __init__(self,
            *,
            merchant_id : typing___Optional[google___protobuf___wrappers_pb2___Int64Value] = None,
            sales_country : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
            campaign_priority : typing___Optional[google___protobuf___wrappers_pb2___Int32Value] = None,
            enable_local : typing___Optional[google___protobuf___wrappers_pb2___BoolValue] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Campaign.ShoppingSetting: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"campaign_priority",u"enable_local",u"merchant_id",u"sales_country"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"campaign_priority",u"enable_local",u"merchant_id",u"sales_country"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"campaign_priority",b"campaign_priority",u"enable_local",b"enable_local",u"merchant_id",b"merchant_id",u"sales_country",b"sales_country"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"campaign_priority",b"campaign_priority",u"enable_local",b"enable_local",u"merchant_id",b"merchant_id",u"sales_country",b"sales_country"]) -> None: ...

    class TrackingSetting(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def tracking_url(self) -> google___protobuf___wrappers_pb2___StringValue: ...

        def __init__(self,
            *,
            tracking_url : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Campaign.TrackingSetting: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"tracking_url"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"tracking_url"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"tracking_url",b"tracking_url"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"tracking_url",b"tracking_url"]) -> None: ...

    class SelectiveOptimization(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def conversion_actions(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[google___protobuf___wrappers_pb2___StringValue]: ...

        def __init__(self,
            *,
            conversion_actions : typing___Optional[typing___Iterable[google___protobuf___wrappers_pb2___StringValue]] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Campaign.SelectiveOptimization: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"conversion_actions"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[u"conversion_actions",b"conversion_actions"]) -> None: ...

    class AppCampaignSetting(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        bidding_strategy_goal_type = ... # type: google___ads___googleads___v1___enums___app_campaign_bidding_strategy_goal_type_pb2___AppCampaignBiddingStrategyGoalTypeEnum.AppCampaignBiddingStrategyGoalType
        app_store = ... # type: google___ads___googleads___v1___enums___app_campaign_app_store_pb2___AppCampaignAppStoreEnum.AppCampaignAppStore

        @property
        def app_id(self) -> google___protobuf___wrappers_pb2___StringValue: ...

        def __init__(self,
            *,
            bidding_strategy_goal_type : typing___Optional[google___ads___googleads___v1___enums___app_campaign_bidding_strategy_goal_type_pb2___AppCampaignBiddingStrategyGoalTypeEnum.AppCampaignBiddingStrategyGoalType] = None,
            app_id : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
            app_store : typing___Optional[google___ads___googleads___v1___enums___app_campaign_app_store_pb2___AppCampaignAppStoreEnum.AppCampaignAppStore] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Campaign.AppCampaignSetting: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"app_id"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"app_id",u"app_store",u"bidding_strategy_goal_type"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"app_id",b"app_id"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"app_id",b"app_id",u"app_store",b"app_store",u"bidding_strategy_goal_type",b"bidding_strategy_goal_type"]) -> None: ...

    class GeoTargetTypeSetting(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        positive_geo_target_type = ... # type: google___ads___googleads___v1___enums___positive_geo_target_type_pb2___PositiveGeoTargetTypeEnum.PositiveGeoTargetType
        negative_geo_target_type = ... # type: google___ads___googleads___v1___enums___negative_geo_target_type_pb2___NegativeGeoTargetTypeEnum.NegativeGeoTargetType

        def __init__(self,
            *,
            positive_geo_target_type : typing___Optional[google___ads___googleads___v1___enums___positive_geo_target_type_pb2___PositiveGeoTargetTypeEnum.PositiveGeoTargetType] = None,
            negative_geo_target_type : typing___Optional[google___ads___googleads___v1___enums___negative_geo_target_type_pb2___NegativeGeoTargetTypeEnum.NegativeGeoTargetType] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Campaign.GeoTargetTypeSetting: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"negative_geo_target_type",u"positive_geo_target_type"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[u"negative_geo_target_type",b"negative_geo_target_type",u"positive_geo_target_type",b"positive_geo_target_type"]) -> None: ...

    resource_name = ... # type: typing___Text
    status = ... # type: google___ads___googleads___v1___enums___campaign_status_pb2___CampaignStatusEnum.CampaignStatus
    serving_status = ... # type: google___ads___googleads___v1___enums___campaign_serving_status_pb2___CampaignServingStatusEnum.CampaignServingStatus
    ad_serving_optimization_status = ... # type: google___ads___googleads___v1___enums___ad_serving_optimization_status_pb2___AdServingOptimizationStatusEnum.AdServingOptimizationStatus
    advertising_channel_type = ... # type: google___ads___googleads___v1___enums___advertising_channel_type_pb2___AdvertisingChannelTypeEnum.AdvertisingChannelType
    advertising_channel_sub_type = ... # type: google___ads___googleads___v1___enums___advertising_channel_sub_type_pb2___AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType
    experiment_type = ... # type: google___ads___googleads___v1___enums___campaign_experiment_type_pb2___CampaignExperimentTypeEnum.CampaignExperimentType
    bidding_strategy_type = ... # type: google___ads___googleads___v1___enums___bidding_strategy_type_pb2___BiddingStrategyTypeEnum.BiddingStrategyType
    video_brand_safety_suitability = ... # type: google___ads___googleads___v1___enums___brand_safety_suitability_pb2___BrandSafetySuitabilityEnum.BrandSafetySuitability
    payment_mode = ... # type: google___ads___googleads___v1___enums___payment_mode_pb2___PaymentModeEnum.PaymentMode

    @property
    def id(self) -> google___protobuf___wrappers_pb2___Int64Value: ...

    @property
    def name(self) -> google___protobuf___wrappers_pb2___StringValue: ...

    @property
    def tracking_url_template(self) -> google___protobuf___wrappers_pb2___StringValue: ...

    @property
    def url_custom_parameters(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[google___ads___googleads___v1___common___custom_parameter_pb2___CustomParameter]: ...

    @property
    def real_time_bidding_setting(self) -> google___ads___googleads___v1___common___real_time_bidding_setting_pb2___RealTimeBiddingSetting: ...

    @property
    def network_settings(self) -> Campaign.NetworkSettings: ...

    @property
    def hotel_setting(self) -> Campaign.HotelSettingInfo: ...

    @property
    def dynamic_search_ads_setting(self) -> Campaign.DynamicSearchAdsSetting: ...

    @property
    def shopping_setting(self) -> Campaign.ShoppingSetting: ...

    @property
    def targeting_setting(self) -> google___ads___googleads___v1___common___targeting_setting_pb2___TargetingSetting: ...

    @property
    def geo_target_type_setting(self) -> Campaign.GeoTargetTypeSetting: ...

    @property
    def app_campaign_setting(self) -> Campaign.AppCampaignSetting: ...

    @property
    def labels(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[google___protobuf___wrappers_pb2___StringValue]: ...

    @property
    def base_campaign(self) -> google___protobuf___wrappers_pb2___StringValue: ...

    @property
    def campaign_budget(self) -> google___protobuf___wrappers_pb2___StringValue: ...

    @property
    def start_date(self) -> google___protobuf___wrappers_pb2___StringValue: ...

    @property
    def end_date(self) -> google___protobuf___wrappers_pb2___StringValue: ...

    @property
    def final_url_suffix(self) -> google___protobuf___wrappers_pb2___StringValue: ...

    @property
    def frequency_caps(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[google___ads___googleads___v1___common___frequency_cap_pb2___FrequencyCapEntry]: ...

    @property
    def vanity_pharma(self) -> Campaign.VanityPharma: ...

    @property
    def selective_optimization(self) -> Campaign.SelectiveOptimization: ...

    @property
    def tracking_setting(self) -> Campaign.TrackingSetting: ...

    @property
    def bidding_strategy(self) -> google___protobuf___wrappers_pb2___StringValue: ...

    @property
    def commission(self) -> google___ads___googleads___v1___common___bidding_pb2___Commission: ...

    @property
    def manual_cpc(self) -> google___ads___googleads___v1___common___bidding_pb2___ManualCpc: ...

    @property
    def manual_cpm(self) -> google___ads___googleads___v1___common___bidding_pb2___ManualCpm: ...

    @property
    def manual_cpv(self) -> google___ads___googleads___v1___common___bidding_pb2___ManualCpv: ...

    @property
    def maximize_conversions(self) -> google___ads___googleads___v1___common___bidding_pb2___MaximizeConversions: ...

    @property
    def maximize_conversion_value(self) -> google___ads___googleads___v1___common___bidding_pb2___MaximizeConversionValue: ...

    @property
    def target_cpa(self) -> google___ads___googleads___v1___common___bidding_pb2___TargetCpa: ...

    @property
    def target_impression_share(self) -> google___ads___googleads___v1___common___bidding_pb2___TargetImpressionShare: ...

    @property
    def target_roas(self) -> google___ads___googleads___v1___common___bidding_pb2___TargetRoas: ...

    @property
    def target_spend(self) -> google___ads___googleads___v1___common___bidding_pb2___TargetSpend: ...

    @property
    def percent_cpc(self) -> google___ads___googleads___v1___common___bidding_pb2___PercentCpc: ...

    @property
    def target_cpm(self) -> google___ads___googleads___v1___common___bidding_pb2___TargetCpm: ...

    def __init__(self,
        *,
        resource_name : typing___Optional[typing___Text] = None,
        id : typing___Optional[google___protobuf___wrappers_pb2___Int64Value] = None,
        name : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
        status : typing___Optional[google___ads___googleads___v1___enums___campaign_status_pb2___CampaignStatusEnum.CampaignStatus] = None,
        serving_status : typing___Optional[google___ads___googleads___v1___enums___campaign_serving_status_pb2___CampaignServingStatusEnum.CampaignServingStatus] = None,
        ad_serving_optimization_status : typing___Optional[google___ads___googleads___v1___enums___ad_serving_optimization_status_pb2___AdServingOptimizationStatusEnum.AdServingOptimizationStatus] = None,
        advertising_channel_type : typing___Optional[google___ads___googleads___v1___enums___advertising_channel_type_pb2___AdvertisingChannelTypeEnum.AdvertisingChannelType] = None,
        advertising_channel_sub_type : typing___Optional[google___ads___googleads___v1___enums___advertising_channel_sub_type_pb2___AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType] = None,
        tracking_url_template : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
        url_custom_parameters : typing___Optional[typing___Iterable[google___ads___googleads___v1___common___custom_parameter_pb2___CustomParameter]] = None,
        real_time_bidding_setting : typing___Optional[google___ads___googleads___v1___common___real_time_bidding_setting_pb2___RealTimeBiddingSetting] = None,
        network_settings : typing___Optional[Campaign.NetworkSettings] = None,
        hotel_setting : typing___Optional[Campaign.HotelSettingInfo] = None,
        dynamic_search_ads_setting : typing___Optional[Campaign.DynamicSearchAdsSetting] = None,
        shopping_setting : typing___Optional[Campaign.ShoppingSetting] = None,
        targeting_setting : typing___Optional[google___ads___googleads___v1___common___targeting_setting_pb2___TargetingSetting] = None,
        geo_target_type_setting : typing___Optional[Campaign.GeoTargetTypeSetting] = None,
        app_campaign_setting : typing___Optional[Campaign.AppCampaignSetting] = None,
        labels : typing___Optional[typing___Iterable[google___protobuf___wrappers_pb2___StringValue]] = None,
        experiment_type : typing___Optional[google___ads___googleads___v1___enums___campaign_experiment_type_pb2___CampaignExperimentTypeEnum.CampaignExperimentType] = None,
        base_campaign : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
        campaign_budget : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
        bidding_strategy_type : typing___Optional[google___ads___googleads___v1___enums___bidding_strategy_type_pb2___BiddingStrategyTypeEnum.BiddingStrategyType] = None,
        start_date : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
        end_date : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
        final_url_suffix : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
        frequency_caps : typing___Optional[typing___Iterable[google___ads___googleads___v1___common___frequency_cap_pb2___FrequencyCapEntry]] = None,
        video_brand_safety_suitability : typing___Optional[google___ads___googleads___v1___enums___brand_safety_suitability_pb2___BrandSafetySuitabilityEnum.BrandSafetySuitability] = None,
        vanity_pharma : typing___Optional[Campaign.VanityPharma] = None,
        selective_optimization : typing___Optional[Campaign.SelectiveOptimization] = None,
        tracking_setting : typing___Optional[Campaign.TrackingSetting] = None,
        payment_mode : typing___Optional[google___ads___googleads___v1___enums___payment_mode_pb2___PaymentModeEnum.PaymentMode] = None,
        bidding_strategy : typing___Optional[google___protobuf___wrappers_pb2___StringValue] = None,
        commission : typing___Optional[google___ads___googleads___v1___common___bidding_pb2___Commission] = None,
        manual_cpc : typing___Optional[google___ads___googleads___v1___common___bidding_pb2___ManualCpc] = None,
        manual_cpm : typing___Optional[google___ads___googleads___v1___common___bidding_pb2___ManualCpm] = None,
        manual_cpv : typing___Optional[google___ads___googleads___v1___common___bidding_pb2___ManualCpv] = None,
        maximize_conversions : typing___Optional[google___ads___googleads___v1___common___bidding_pb2___MaximizeConversions] = None,
        maximize_conversion_value : typing___Optional[google___ads___googleads___v1___common___bidding_pb2___MaximizeConversionValue] = None,
        target_cpa : typing___Optional[google___ads___googleads___v1___common___bidding_pb2___TargetCpa] = None,
        target_impression_share : typing___Optional[google___ads___googleads___v1___common___bidding_pb2___TargetImpressionShare] = None,
        target_roas : typing___Optional[google___ads___googleads___v1___common___bidding_pb2___TargetRoas] = None,
        target_spend : typing___Optional[google___ads___googleads___v1___common___bidding_pb2___TargetSpend] = None,
        percent_cpc : typing___Optional[google___ads___googleads___v1___common___bidding_pb2___PercentCpc] = None,
        target_cpm : typing___Optional[google___ads___googleads___v1___common___bidding_pb2___TargetCpm] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Campaign: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"app_campaign_setting",u"base_campaign",u"bidding_strategy",u"campaign_bidding_strategy",u"campaign_budget",u"commission",u"dynamic_search_ads_setting",u"end_date",u"final_url_suffix",u"geo_target_type_setting",u"hotel_setting",u"id",u"manual_cpc",u"manual_cpm",u"manual_cpv",u"maximize_conversion_value",u"maximize_conversions",u"name",u"network_settings",u"percent_cpc",u"real_time_bidding_setting",u"selective_optimization",u"shopping_setting",u"start_date",u"target_cpa",u"target_cpm",u"target_impression_share",u"target_roas",u"target_spend",u"targeting_setting",u"tracking_setting",u"tracking_url_template",u"vanity_pharma"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"ad_serving_optimization_status",u"advertising_channel_sub_type",u"advertising_channel_type",u"app_campaign_setting",u"base_campaign",u"bidding_strategy",u"bidding_strategy_type",u"campaign_bidding_strategy",u"campaign_budget",u"commission",u"dynamic_search_ads_setting",u"end_date",u"experiment_type",u"final_url_suffix",u"frequency_caps",u"geo_target_type_setting",u"hotel_setting",u"id",u"labels",u"manual_cpc",u"manual_cpm",u"manual_cpv",u"maximize_conversion_value",u"maximize_conversions",u"name",u"network_settings",u"payment_mode",u"percent_cpc",u"real_time_bidding_setting",u"resource_name",u"selective_optimization",u"serving_status",u"shopping_setting",u"start_date",u"status",u"target_cpa",u"target_cpm",u"target_impression_share",u"target_roas",u"target_spend",u"targeting_setting",u"tracking_setting",u"tracking_url_template",u"url_custom_parameters",u"vanity_pharma",u"video_brand_safety_suitability"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"app_campaign_setting",b"app_campaign_setting",u"base_campaign",b"base_campaign",u"bidding_strategy",b"bidding_strategy",u"campaign_bidding_strategy",b"campaign_bidding_strategy",u"campaign_budget",b"campaign_budget",u"commission",b"commission",u"dynamic_search_ads_setting",b"dynamic_search_ads_setting",u"end_date",b"end_date",u"final_url_suffix",b"final_url_suffix",u"geo_target_type_setting",b"geo_target_type_setting",u"hotel_setting",b"hotel_setting",u"id",b"id",u"manual_cpc",b"manual_cpc",u"manual_cpm",b"manual_cpm",u"manual_cpv",b"manual_cpv",u"maximize_conversion_value",b"maximize_conversion_value",u"maximize_conversions",b"maximize_conversions",u"name",b"name",u"network_settings",b"network_settings",u"percent_cpc",b"percent_cpc",u"real_time_bidding_setting",b"real_time_bidding_setting",u"selective_optimization",b"selective_optimization",u"shopping_setting",b"shopping_setting",u"start_date",b"start_date",u"target_cpa",b"target_cpa",u"target_cpm",b"target_cpm",u"target_impression_share",b"target_impression_share",u"target_roas",b"target_roas",u"target_spend",b"target_spend",u"targeting_setting",b"targeting_setting",u"tracking_setting",b"tracking_setting",u"tracking_url_template",b"tracking_url_template",u"vanity_pharma",b"vanity_pharma"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"ad_serving_optimization_status",b"ad_serving_optimization_status",u"advertising_channel_sub_type",b"advertising_channel_sub_type",u"advertising_channel_type",b"advertising_channel_type",u"app_campaign_setting",b"app_campaign_setting",u"base_campaign",b"base_campaign",u"bidding_strategy",b"bidding_strategy",u"bidding_strategy_type",b"bidding_strategy_type",u"campaign_bidding_strategy",b"campaign_bidding_strategy",u"campaign_budget",b"campaign_budget",u"commission",b"commission",u"dynamic_search_ads_setting",b"dynamic_search_ads_setting",u"end_date",b"end_date",u"experiment_type",b"experiment_type",u"final_url_suffix",b"final_url_suffix",u"frequency_caps",b"frequency_caps",u"geo_target_type_setting",b"geo_target_type_setting",u"hotel_setting",b"hotel_setting",u"id",b"id",u"labels",b"labels",u"manual_cpc",b"manual_cpc",u"manual_cpm",b"manual_cpm",u"manual_cpv",b"manual_cpv",u"maximize_conversion_value",b"maximize_conversion_value",u"maximize_conversions",b"maximize_conversions",u"name",b"name",u"network_settings",b"network_settings",u"payment_mode",b"payment_mode",u"percent_cpc",b"percent_cpc",u"real_time_bidding_setting",b"real_time_bidding_setting",u"resource_name",b"resource_name",u"selective_optimization",b"selective_optimization",u"serving_status",b"serving_status",u"shopping_setting",b"shopping_setting",u"start_date",b"start_date",u"status",b"status",u"target_cpa",b"target_cpa",u"target_cpm",b"target_cpm",u"target_impression_share",b"target_impression_share",u"target_roas",b"target_roas",u"target_spend",b"target_spend",u"targeting_setting",b"targeting_setting",u"tracking_setting",b"tracking_setting",u"tracking_url_template",b"tracking_url_template",u"url_custom_parameters",b"url_custom_parameters",u"vanity_pharma",b"vanity_pharma",u"video_brand_safety_suitability",b"video_brand_safety_suitability"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"campaign_bidding_strategy",b"campaign_bidding_strategy"]) -> typing_extensions___Literal["bidding_strategy","commission","manual_cpc","manual_cpm","manual_cpv","maximize_conversions","maximize_conversion_value","target_cpa","target_impression_share","target_roas","target_spend","percent_cpc","target_cpm"]: ...

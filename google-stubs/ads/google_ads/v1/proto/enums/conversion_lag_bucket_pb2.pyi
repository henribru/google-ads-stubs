# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.message import Message as google___protobuf___message___Message

from typing import (
    List as typing___List,
    Tuple as typing___Tuple,
    Union as typing___Union,
    cast as typing___cast,
)

builtin___bytes = bytes
builtin___int = int
builtin___str = str
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode

class ConversionLagBucketEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class ConversionLagBucket(builtin___int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: builtin___int) -> builtin___str: ...
        @classmethod
        def Value(
            cls, name: builtin___str
        ) -> "ConversionLagBucketEnum.ConversionLagBucket": ...
        @classmethod
        def keys(cls) -> typing___List[builtin___str]: ...
        @classmethod
        def values(
            cls,
        ) -> typing___List["ConversionLagBucketEnum.ConversionLagBucket"]: ...
        @classmethod
        def items(
            cls,
        ) -> typing___List[
            typing___Tuple[builtin___str, "ConversionLagBucketEnum.ConversionLagBucket"]
        ]: ...
        UNSPECIFIED = typing___cast("ConversionLagBucketEnum.ConversionLagBucket", 0)
        UNKNOWN = typing___cast("ConversionLagBucketEnum.ConversionLagBucket", 1)
        LESS_THAN_ONE_DAY = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 2
        )
        ONE_TO_TWO_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 3
        )
        TWO_TO_THREE_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 4
        )
        THREE_TO_FOUR_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 5
        )
        FOUR_TO_FIVE_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 6
        )
        FIVE_TO_SIX_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 7
        )
        SIX_TO_SEVEN_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 8
        )
        SEVEN_TO_EIGHT_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 9
        )
        EIGHT_TO_NINE_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 10
        )
        NINE_TO_TEN_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 11
        )
        TEN_TO_ELEVEN_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 12
        )
        ELEVEN_TO_TWELVE_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 13
        )
        TWELVE_TO_THIRTEEN_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 14
        )
        THIRTEEN_TO_FOURTEEN_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 15
        )
        FOURTEEN_TO_TWENTY_ONE_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 16
        )
        TWENTY_ONE_TO_THIRTY_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 17
        )
        THIRTY_TO_FORTY_FIVE_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 18
        )
        FORTY_FIVE_TO_SIXTY_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 19
        )
        SIXTY_TO_NINETY_DAYS = typing___cast(
            "ConversionLagBucketEnum.ConversionLagBucket", 20
        )
    UNSPECIFIED = typing___cast("ConversionLagBucketEnum.ConversionLagBucket", 0)
    UNKNOWN = typing___cast("ConversionLagBucketEnum.ConversionLagBucket", 1)
    LESS_THAN_ONE_DAY = typing___cast("ConversionLagBucketEnum.ConversionLagBucket", 2)
    ONE_TO_TWO_DAYS = typing___cast("ConversionLagBucketEnum.ConversionLagBucket", 3)
    TWO_TO_THREE_DAYS = typing___cast("ConversionLagBucketEnum.ConversionLagBucket", 4)
    THREE_TO_FOUR_DAYS = typing___cast("ConversionLagBucketEnum.ConversionLagBucket", 5)
    FOUR_TO_FIVE_DAYS = typing___cast("ConversionLagBucketEnum.ConversionLagBucket", 6)
    FIVE_TO_SIX_DAYS = typing___cast("ConversionLagBucketEnum.ConversionLagBucket", 7)
    SIX_TO_SEVEN_DAYS = typing___cast("ConversionLagBucketEnum.ConversionLagBucket", 8)
    SEVEN_TO_EIGHT_DAYS = typing___cast(
        "ConversionLagBucketEnum.ConversionLagBucket", 9
    )
    EIGHT_TO_NINE_DAYS = typing___cast(
        "ConversionLagBucketEnum.ConversionLagBucket", 10
    )
    NINE_TO_TEN_DAYS = typing___cast("ConversionLagBucketEnum.ConversionLagBucket", 11)
    TEN_TO_ELEVEN_DAYS = typing___cast(
        "ConversionLagBucketEnum.ConversionLagBucket", 12
    )
    ELEVEN_TO_TWELVE_DAYS = typing___cast(
        "ConversionLagBucketEnum.ConversionLagBucket", 13
    )
    TWELVE_TO_THIRTEEN_DAYS = typing___cast(
        "ConversionLagBucketEnum.ConversionLagBucket", 14
    )
    THIRTEEN_TO_FOURTEEN_DAYS = typing___cast(
        "ConversionLagBucketEnum.ConversionLagBucket", 15
    )
    FOURTEEN_TO_TWENTY_ONE_DAYS = typing___cast(
        "ConversionLagBucketEnum.ConversionLagBucket", 16
    )
    TWENTY_ONE_TO_THIRTY_DAYS = typing___cast(
        "ConversionLagBucketEnum.ConversionLagBucket", 17
    )
    THIRTY_TO_FORTY_FIVE_DAYS = typing___cast(
        "ConversionLagBucketEnum.ConversionLagBucket", 18
    )
    FORTY_FIVE_TO_SIXTY_DAYS = typing___cast(
        "ConversionLagBucketEnum.ConversionLagBucket", 19
    )
    SIXTY_TO_NINETY_DAYS = typing___cast(
        "ConversionLagBucketEnum.ConversionLagBucket", 20
    )
    global___ConversionLagBucket = ConversionLagBucket
    def __init__(self,) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> ConversionLagBucketEnum: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> ConversionLagBucketEnum: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

global___ConversionLagBucketEnum = ConversionLagBucketEnum

# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    List as typing___List,
    Tuple as typing___Tuple,
    Union as typing___Union,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class PromotionExtensionOccasionEnum(google___protobuf___message___Message):
    class PromotionExtensionOccasion(object):
        ClosedKeyType = typing___Union[typing_extensions___Literal['UNSPECIFIED'],typing_extensions___Literal['UNKNOWN'],typing_extensions___Literal['NEW_YEARS'],typing_extensions___Literal['CHINESE_NEW_YEAR'],typing_extensions___Literal['VALENTINES_DAY'],typing_extensions___Literal['EASTER'],typing_extensions___Literal['MOTHERS_DAY'],typing_extensions___Literal['FATHERS_DAY'],typing_extensions___Literal['LABOR_DAY'],typing_extensions___Literal['BACK_TO_SCHOOL'],typing_extensions___Literal['HALLOWEEN'],typing_extensions___Literal['BLACK_FRIDAY'],typing_extensions___Literal['CYBER_MONDAY'],typing_extensions___Literal['CHRISTMAS'],typing_extensions___Literal['BOXING_DAY'],typing_extensions___Literal['INDEPENDENCE_DAY'],typing_extensions___Literal['NATIONAL_DAY'],typing_extensions___Literal['END_OF_SEASON'],typing_extensions___Literal['WINTER_SALE'],typing_extensions___Literal['SUMMER_SALE'],typing_extensions___Literal['FALL_SALE'],typing_extensions___Literal['SPRING_SALE'],typing_extensions___Literal['RAMADAN'],typing_extensions___Literal['EID_AL_FITR'],typing_extensions___Literal['EID_AL_ADHA'],typing_extensions___Literal['SINGLES_DAY'],typing_extensions___Literal['WOMENS_DAY'],typing_extensions___Literal['HOLI'],typing_extensions___Literal['PARENTS_DAY'],typing_extensions___Literal['ST_NICHOLAS_DAY'],typing_extensions___Literal['CARNIVAL'],typing_extensions___Literal['EPIPHANY'],typing_extensions___Literal['ROSH_HASHANAH'],typing_extensions___Literal['PASSOVER'],typing_extensions___Literal['HANUKKAH'],typing_extensions___Literal['DIWALI'],typing_extensions___Literal['NAVRATRI'],typing_extensions___Literal['SONGKRAN'],typing_extensions___Literal['YEAR_END_GIFT']]
        ClosedValueType = typing___Union[typing_extensions___Literal[0],typing_extensions___Literal[1],typing_extensions___Literal[2],typing_extensions___Literal[3],typing_extensions___Literal[4],typing_extensions___Literal[5],typing_extensions___Literal[6],typing_extensions___Literal[7],typing_extensions___Literal[8],typing_extensions___Literal[9],typing_extensions___Literal[10],typing_extensions___Literal[11],typing_extensions___Literal[12],typing_extensions___Literal[13],typing_extensions___Literal[14],typing_extensions___Literal[15],typing_extensions___Literal[16],typing_extensions___Literal[17],typing_extensions___Literal[18],typing_extensions___Literal[19],typing_extensions___Literal[20],typing_extensions___Literal[21],typing_extensions___Literal[22],typing_extensions___Literal[23],typing_extensions___Literal[24],typing_extensions___Literal[25],typing_extensions___Literal[26],typing_extensions___Literal[27],typing_extensions___Literal[28],typing_extensions___Literal[29],typing_extensions___Literal[30],typing_extensions___Literal[31],typing_extensions___Literal[32],typing_extensions___Literal[33],typing_extensions___Literal[34],typing_extensions___Literal[35],typing_extensions___Literal[36],typing_extensions___Literal[37],typing_extensions___Literal[38]]
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: ClosedValueType) -> str: ...
        @classmethod
        def Value(cls, name: ClosedKeyType) -> ClosedValueType: ...
        @classmethod
        def keys(cls) -> typing___List[ClosedKeyType]: ...
        @classmethod
        def values(cls) -> typing___List[ClosedValueType]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[ClosedKeyType, ClosedValueType]]: ...
        UNSPECIFIED: typing_extensions___Literal[0]
        UNKNOWN: typing_extensions___Literal[1]
        NEW_YEARS: typing_extensions___Literal[2]
        CHINESE_NEW_YEAR: typing_extensions___Literal[3]
        VALENTINES_DAY: typing_extensions___Literal[4]
        EASTER: typing_extensions___Literal[5]
        MOTHERS_DAY: typing_extensions___Literal[6]
        FATHERS_DAY: typing_extensions___Literal[7]
        LABOR_DAY: typing_extensions___Literal[8]
        BACK_TO_SCHOOL: typing_extensions___Literal[9]
        HALLOWEEN: typing_extensions___Literal[10]
        BLACK_FRIDAY: typing_extensions___Literal[11]
        CYBER_MONDAY: typing_extensions___Literal[12]
        CHRISTMAS: typing_extensions___Literal[13]
        BOXING_DAY: typing_extensions___Literal[14]
        INDEPENDENCE_DAY: typing_extensions___Literal[15]
        NATIONAL_DAY: typing_extensions___Literal[16]
        END_OF_SEASON: typing_extensions___Literal[17]
        WINTER_SALE: typing_extensions___Literal[18]
        SUMMER_SALE: typing_extensions___Literal[19]
        FALL_SALE: typing_extensions___Literal[20]
        SPRING_SALE: typing_extensions___Literal[21]
        RAMADAN: typing_extensions___Literal[22]
        EID_AL_FITR: typing_extensions___Literal[23]
        EID_AL_ADHA: typing_extensions___Literal[24]
        SINGLES_DAY: typing_extensions___Literal[25]
        WOMENS_DAY: typing_extensions___Literal[26]
        HOLI: typing_extensions___Literal[27]
        PARENTS_DAY: typing_extensions___Literal[28]
        ST_NICHOLAS_DAY: typing_extensions___Literal[29]
        CARNIVAL: typing_extensions___Literal[30]
        EPIPHANY: typing_extensions___Literal[31]
        ROSH_HASHANAH: typing_extensions___Literal[32]
        PASSOVER: typing_extensions___Literal[33]
        HANUKKAH: typing_extensions___Literal[34]
        DIWALI: typing_extensions___Literal[35]
        NAVRATRI: typing_extensions___Literal[36]
        SONGKRAN: typing_extensions___Literal[37]
        YEAR_END_GIFT: typing_extensions___Literal[38]
    UNSPECIFIED: typing_extensions___Literal[0]
    UNKNOWN: typing_extensions___Literal[1]
    NEW_YEARS: typing_extensions___Literal[2]
    CHINESE_NEW_YEAR: typing_extensions___Literal[3]
    VALENTINES_DAY: typing_extensions___Literal[4]
    EASTER: typing_extensions___Literal[5]
    MOTHERS_DAY: typing_extensions___Literal[6]
    FATHERS_DAY: typing_extensions___Literal[7]
    LABOR_DAY: typing_extensions___Literal[8]
    BACK_TO_SCHOOL: typing_extensions___Literal[9]
    HALLOWEEN: typing_extensions___Literal[10]
    BLACK_FRIDAY: typing_extensions___Literal[11]
    CYBER_MONDAY: typing_extensions___Literal[12]
    CHRISTMAS: typing_extensions___Literal[13]
    BOXING_DAY: typing_extensions___Literal[14]
    INDEPENDENCE_DAY: typing_extensions___Literal[15]
    NATIONAL_DAY: typing_extensions___Literal[16]
    END_OF_SEASON: typing_extensions___Literal[17]
    WINTER_SALE: typing_extensions___Literal[18]
    SUMMER_SALE: typing_extensions___Literal[19]
    FALL_SALE: typing_extensions___Literal[20]
    SPRING_SALE: typing_extensions___Literal[21]
    RAMADAN: typing_extensions___Literal[22]
    EID_AL_FITR: typing_extensions___Literal[23]
    EID_AL_ADHA: typing_extensions___Literal[24]
    SINGLES_DAY: typing_extensions___Literal[25]
    WOMENS_DAY: typing_extensions___Literal[26]
    HOLI: typing_extensions___Literal[27]
    PARENTS_DAY: typing_extensions___Literal[28]
    ST_NICHOLAS_DAY: typing_extensions___Literal[29]
    CARNIVAL: typing_extensions___Literal[30]
    EPIPHANY: typing_extensions___Literal[31]
    ROSH_HASHANAH: typing_extensions___Literal[32]
    PASSOVER: typing_extensions___Literal[33]
    HANUKKAH: typing_extensions___Literal[34]
    DIWALI: typing_extensions___Literal[35]
    NAVRATRI: typing_extensions___Literal[36]
    SONGKRAN: typing_extensions___Literal[37]
    YEAR_END_GIFT: typing_extensions___Literal[38]


    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PromotionExtensionOccasionEnum: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

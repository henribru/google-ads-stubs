# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    List as typing___List,
    Tuple as typing___Tuple,
    cast as typing___cast,
)


class FunctionParsingErrorEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class FunctionParsingError(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> FunctionParsingErrorEnum.FunctionParsingError: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[FunctionParsingErrorEnum.FunctionParsingError]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, FunctionParsingErrorEnum.FunctionParsingError]]: ...
        UNSPECIFIED = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 0)
        UNKNOWN = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 1)
        NO_MORE_INPUT = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 2)
        EXPECTED_CHARACTER = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 3)
        UNEXPECTED_SEPARATOR = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 4)
        UNMATCHED_LEFT_BRACKET = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 5)
        UNMATCHED_RIGHT_BRACKET = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 6)
        TOO_MANY_NESTED_FUNCTIONS = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 7)
        MISSING_RIGHT_HAND_OPERAND = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 8)
        INVALID_OPERATOR_NAME = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 9)
        FEED_ATTRIBUTE_OPERAND_ARGUMENT_NOT_INTEGER = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 10)
        NO_OPERANDS = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 11)
        TOO_MANY_OPERANDS = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 12)
    UNSPECIFIED = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 0)
    UNKNOWN = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 1)
    NO_MORE_INPUT = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 2)
    EXPECTED_CHARACTER = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 3)
    UNEXPECTED_SEPARATOR = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 4)
    UNMATCHED_LEFT_BRACKET = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 5)
    UNMATCHED_RIGHT_BRACKET = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 6)
    TOO_MANY_NESTED_FUNCTIONS = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 7)
    MISSING_RIGHT_HAND_OPERAND = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 8)
    INVALID_OPERATOR_NAME = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 9)
    FEED_ATTRIBUTE_OPERAND_ARGUMENT_NOT_INTEGER = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 10)
    NO_OPERANDS = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 11)
    TOO_MANY_OPERANDS = typing___cast(FunctionParsingErrorEnum.FunctionParsingError, 12)


    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FunctionParsingErrorEnum: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    List as typing___List,
    Tuple as typing___Tuple,
    Union as typing___Union,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class FunctionParsingErrorEnum(google___protobuf___message___Message):
    class FunctionParsingError(object):
        ClosedKeyType = typing___Union[typing_extensions___Literal['UNSPECIFIED'],typing_extensions___Literal['UNKNOWN'],typing_extensions___Literal['NO_MORE_INPUT'],typing_extensions___Literal['EXPECTED_CHARACTER'],typing_extensions___Literal['UNEXPECTED_SEPARATOR'],typing_extensions___Literal['UNMATCHED_LEFT_BRACKET'],typing_extensions___Literal['UNMATCHED_RIGHT_BRACKET'],typing_extensions___Literal['TOO_MANY_NESTED_FUNCTIONS'],typing_extensions___Literal['MISSING_RIGHT_HAND_OPERAND'],typing_extensions___Literal['INVALID_OPERATOR_NAME'],typing_extensions___Literal['FEED_ATTRIBUTE_OPERAND_ARGUMENT_NOT_INTEGER'],typing_extensions___Literal['NO_OPERANDS'],typing_extensions___Literal['TOO_MANY_OPERANDS']]
        ClosedValueType = typing___Union[typing_extensions___Literal[0],typing_extensions___Literal[1],typing_extensions___Literal[2],typing_extensions___Literal[3],typing_extensions___Literal[4],typing_extensions___Literal[5],typing_extensions___Literal[6],typing_extensions___Literal[7],typing_extensions___Literal[8],typing_extensions___Literal[9],typing_extensions___Literal[10],typing_extensions___Literal[11],typing_extensions___Literal[12]]
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: ClosedValueType) -> str: ...
        @classmethod
        def Value(cls, name: ClosedKeyType) -> ClosedValueType: ...
        @classmethod
        def keys(cls) -> typing___List[ClosedKeyType]: ...
        @classmethod
        def values(cls) -> typing___List[ClosedValueType]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[ClosedKeyType, ClosedValueType]]: ...
        UNSPECIFIED: typing_extensions___Literal[0]
        UNKNOWN: typing_extensions___Literal[1]
        NO_MORE_INPUT: typing_extensions___Literal[2]
        EXPECTED_CHARACTER: typing_extensions___Literal[3]
        UNEXPECTED_SEPARATOR: typing_extensions___Literal[4]
        UNMATCHED_LEFT_BRACKET: typing_extensions___Literal[5]
        UNMATCHED_RIGHT_BRACKET: typing_extensions___Literal[6]
        TOO_MANY_NESTED_FUNCTIONS: typing_extensions___Literal[7]
        MISSING_RIGHT_HAND_OPERAND: typing_extensions___Literal[8]
        INVALID_OPERATOR_NAME: typing_extensions___Literal[9]
        FEED_ATTRIBUTE_OPERAND_ARGUMENT_NOT_INTEGER: typing_extensions___Literal[10]
        NO_OPERANDS: typing_extensions___Literal[11]
        TOO_MANY_OPERANDS: typing_extensions___Literal[12]
    UNSPECIFIED: typing_extensions___Literal[0]
    UNKNOWN: typing_extensions___Literal[1]
    NO_MORE_INPUT: typing_extensions___Literal[2]
    EXPECTED_CHARACTER: typing_extensions___Literal[3]
    UNEXPECTED_SEPARATOR: typing_extensions___Literal[4]
    UNMATCHED_LEFT_BRACKET: typing_extensions___Literal[5]
    UNMATCHED_RIGHT_BRACKET: typing_extensions___Literal[6]
    TOO_MANY_NESTED_FUNCTIONS: typing_extensions___Literal[7]
    MISSING_RIGHT_HAND_OPERAND: typing_extensions___Literal[8]
    INVALID_OPERATOR_NAME: typing_extensions___Literal[9]
    FEED_ATTRIBUTE_OPERAND_ARGUMENT_NOT_INTEGER: typing_extensions___Literal[10]
    NO_OPERANDS: typing_extensions___Literal[11]
    TOO_MANY_OPERANDS: typing_extensions___Literal[12]


    def __init__(self,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FunctionParsingErrorEnum: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

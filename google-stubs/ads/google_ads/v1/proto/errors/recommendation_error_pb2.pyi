# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.message import Message as google___protobuf___message___Message

from typing import (
    List as typing___List,
    Tuple as typing___Tuple,
    Union as typing___Union,
    cast as typing___cast,
)

builtin___bytes = bytes
builtin___int = int
builtin___str = str
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode

class RecommendationErrorEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class RecommendationError(builtin___int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: builtin___int) -> builtin___str: ...
        @classmethod
        def Value(
            cls, name: builtin___str
        ) -> "RecommendationErrorEnum.RecommendationError": ...
        @classmethod
        def keys(cls) -> typing___List[builtin___str]: ...
        @classmethod
        def values(
            cls,
        ) -> typing___List["RecommendationErrorEnum.RecommendationError"]: ...
        @classmethod
        def items(
            cls,
        ) -> typing___List[
            typing___Tuple[builtin___str, "RecommendationErrorEnum.RecommendationError"]
        ]: ...
        UNSPECIFIED = typing___cast("RecommendationErrorEnum.RecommendationError", 0)
        UNKNOWN = typing___cast("RecommendationErrorEnum.RecommendationError", 1)
        BUDGET_AMOUNT_TOO_SMALL = typing___cast(
            "RecommendationErrorEnum.RecommendationError", 2
        )
        BUDGET_AMOUNT_TOO_LARGE = typing___cast(
            "RecommendationErrorEnum.RecommendationError", 3
        )
        INVALID_BUDGET_AMOUNT = typing___cast(
            "RecommendationErrorEnum.RecommendationError", 4
        )
        POLICY_ERROR = typing___cast("RecommendationErrorEnum.RecommendationError", 5)
        INVALID_BID_AMOUNT = typing___cast(
            "RecommendationErrorEnum.RecommendationError", 6
        )
        ADGROUP_KEYWORD_LIMIT = typing___cast(
            "RecommendationErrorEnum.RecommendationError", 7
        )
        RECOMMENDATION_ALREADY_APPLIED = typing___cast(
            "RecommendationErrorEnum.RecommendationError", 8
        )
        RECOMMENDATION_INVALIDATED = typing___cast(
            "RecommendationErrorEnum.RecommendationError", 9
        )
        TOO_MANY_OPERATIONS = typing___cast(
            "RecommendationErrorEnum.RecommendationError", 10
        )
        NO_OPERATIONS = typing___cast("RecommendationErrorEnum.RecommendationError", 11)
        DIFFERENT_TYPES_NOT_SUPPORTED = typing___cast(
            "RecommendationErrorEnum.RecommendationError", 12
        )
        DUPLICATE_RESOURCE_NAME = typing___cast(
            "RecommendationErrorEnum.RecommendationError", 13
        )
        RECOMMENDATION_ALREADY_DISMISSED = typing___cast(
            "RecommendationErrorEnum.RecommendationError", 14
        )
        INVALID_APPLY_REQUEST = typing___cast(
            "RecommendationErrorEnum.RecommendationError", 15
        )
    UNSPECIFIED = typing___cast("RecommendationErrorEnum.RecommendationError", 0)
    UNKNOWN = typing___cast("RecommendationErrorEnum.RecommendationError", 1)
    BUDGET_AMOUNT_TOO_SMALL = typing___cast(
        "RecommendationErrorEnum.RecommendationError", 2
    )
    BUDGET_AMOUNT_TOO_LARGE = typing___cast(
        "RecommendationErrorEnum.RecommendationError", 3
    )
    INVALID_BUDGET_AMOUNT = typing___cast(
        "RecommendationErrorEnum.RecommendationError", 4
    )
    POLICY_ERROR = typing___cast("RecommendationErrorEnum.RecommendationError", 5)
    INVALID_BID_AMOUNT = typing___cast("RecommendationErrorEnum.RecommendationError", 6)
    ADGROUP_KEYWORD_LIMIT = typing___cast(
        "RecommendationErrorEnum.RecommendationError", 7
    )
    RECOMMENDATION_ALREADY_APPLIED = typing___cast(
        "RecommendationErrorEnum.RecommendationError", 8
    )
    RECOMMENDATION_INVALIDATED = typing___cast(
        "RecommendationErrorEnum.RecommendationError", 9
    )
    TOO_MANY_OPERATIONS = typing___cast(
        "RecommendationErrorEnum.RecommendationError", 10
    )
    NO_OPERATIONS = typing___cast("RecommendationErrorEnum.RecommendationError", 11)
    DIFFERENT_TYPES_NOT_SUPPORTED = typing___cast(
        "RecommendationErrorEnum.RecommendationError", 12
    )
    DUPLICATE_RESOURCE_NAME = typing___cast(
        "RecommendationErrorEnum.RecommendationError", 13
    )
    RECOMMENDATION_ALREADY_DISMISSED = typing___cast(
        "RecommendationErrorEnum.RecommendationError", 14
    )
    INVALID_APPLY_REQUEST = typing___cast(
        "RecommendationErrorEnum.RecommendationError", 15
    )
    global___RecommendationError = RecommendationError
    def __init__(self,) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> RecommendationErrorEnum: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> RecommendationErrorEnum: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

global___RecommendationErrorEnum = RecommendationErrorEnum

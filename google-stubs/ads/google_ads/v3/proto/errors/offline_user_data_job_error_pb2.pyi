# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.message import Message as google___protobuf___message___Message

from typing import (
    List as typing___List,
    Tuple as typing___Tuple,
    Union as typing___Union,
    cast as typing___cast,
)

builtin___bytes = bytes
builtin___int = int
builtin___str = str
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode

class OfflineUserDataJobErrorEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class OfflineUserDataJobError(builtin___int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: builtin___int) -> builtin___str: ...
        @classmethod
        def Value(
            cls, name: builtin___str
        ) -> "OfflineUserDataJobErrorEnum.OfflineUserDataJobError": ...
        @classmethod
        def keys(cls) -> typing___List[builtin___str]: ...
        @classmethod
        def values(
            cls,
        ) -> typing___List["OfflineUserDataJobErrorEnum.OfflineUserDataJobError"]: ...
        @classmethod
        def items(
            cls,
        ) -> typing___List[
            typing___Tuple[
                builtin___str, "OfflineUserDataJobErrorEnum.OfflineUserDataJobError"
            ]
        ]: ...
        UNSPECIFIED = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 0
        )
        UNKNOWN = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 1
        )
        INVALID_USER_LIST_ID = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 3
        )
        INVALID_USER_LIST_TYPE = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 4
        )
        NOT_WHITELISTED_FOR_USER_ID = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 5
        )
        INCOMPATIBLE_UPLOAD_KEY_TYPE = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 6
        )
        MISSING_USER_IDENTIFIER = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 7
        )
        INVALID_MOBILE_ID_FORMAT = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 8
        )
        TOO_MANY_USER_IDENTIFIERS = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 9
        )
        NOT_WHITELISTED_FOR_STORE_SALES_DIRECT = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 10
        )
        INVALID_PARTNER_ID = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 11
        )
        INVALID_ENCODING = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 12
        )
        INVALID_COUNTRY_CODE = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 13
        )
        INCOMPATIBLE_USER_IDENTIFIER = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 14
        )
        FUTURE_TRANSACTION_TIME = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 15
        )
        INVALID_CONVERSION_ACTION = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 16
        )
        MOBILE_ID_NOT_SUPPORTED = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 17
        )
        INVALID_OPERATION_ORDER = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 18
        )
        CONFLICTING_OPERATION = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 19
        )
        EXTERNAL_UPDATE_ID_ALREADY_EXISTS = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 21
        )
        JOB_ALREADY_STARTED = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 22
        )
        REMOVE_NOT_SUPPORTED = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 23
        )
        REMOVE_ALL_NOT_SUPPORTED = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 24
        )
        INVALID_SHA256_FORMAT = typing___cast(
            "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 25
        )
    UNSPECIFIED = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 0
    )
    UNKNOWN = typing___cast("OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 1)
    INVALID_USER_LIST_ID = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 3
    )
    INVALID_USER_LIST_TYPE = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 4
    )
    NOT_WHITELISTED_FOR_USER_ID = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 5
    )
    INCOMPATIBLE_UPLOAD_KEY_TYPE = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 6
    )
    MISSING_USER_IDENTIFIER = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 7
    )
    INVALID_MOBILE_ID_FORMAT = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 8
    )
    TOO_MANY_USER_IDENTIFIERS = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 9
    )
    NOT_WHITELISTED_FOR_STORE_SALES_DIRECT = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 10
    )
    INVALID_PARTNER_ID = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 11
    )
    INVALID_ENCODING = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 12
    )
    INVALID_COUNTRY_CODE = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 13
    )
    INCOMPATIBLE_USER_IDENTIFIER = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 14
    )
    FUTURE_TRANSACTION_TIME = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 15
    )
    INVALID_CONVERSION_ACTION = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 16
    )
    MOBILE_ID_NOT_SUPPORTED = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 17
    )
    INVALID_OPERATION_ORDER = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 18
    )
    CONFLICTING_OPERATION = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 19
    )
    EXTERNAL_UPDATE_ID_ALREADY_EXISTS = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 21
    )
    JOB_ALREADY_STARTED = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 22
    )
    REMOVE_NOT_SUPPORTED = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 23
    )
    REMOVE_ALL_NOT_SUPPORTED = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 24
    )
    INVALID_SHA256_FORMAT = typing___cast(
        "OfflineUserDataJobErrorEnum.OfflineUserDataJobError", 25
    )
    global___OfflineUserDataJobError = OfflineUserDataJobError
    def __init__(self,) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> OfflineUserDataJobErrorEnum: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> OfflineUserDataJobErrorEnum: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

global___OfflineUserDataJobErrorEnum = OfflineUserDataJobErrorEnum

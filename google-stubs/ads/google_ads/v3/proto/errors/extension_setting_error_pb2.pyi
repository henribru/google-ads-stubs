# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.message import Message as google___protobuf___message___Message

from typing import (
    List as typing___List,
    Tuple as typing___Tuple,
    Union as typing___Union,
    cast as typing___cast,
)

builtin___bytes = bytes
builtin___int = int
builtin___str = str
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode

class ExtensionSettingErrorEnum(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class ExtensionSettingError(builtin___int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: builtin___int) -> builtin___str: ...
        @classmethod
        def Value(
            cls, name: builtin___str
        ) -> "ExtensionSettingErrorEnum.ExtensionSettingError": ...
        @classmethod
        def keys(cls) -> typing___List[builtin___str]: ...
        @classmethod
        def values(
            cls,
        ) -> typing___List["ExtensionSettingErrorEnum.ExtensionSettingError"]: ...
        @classmethod
        def items(
            cls,
        ) -> typing___List[
            typing___Tuple[
                builtin___str, "ExtensionSettingErrorEnum.ExtensionSettingError"
            ]
        ]: ...
        UNSPECIFIED = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 0
        )
        UNKNOWN = typing___cast("ExtensionSettingErrorEnum.ExtensionSettingError", 1)
        EXTENSIONS_REQUIRED = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 2
        )
        FEED_TYPE_EXTENSION_TYPE_MISMATCH = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 3
        )
        INVALID_FEED_TYPE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 4
        )
        INVALID_FEED_TYPE_FOR_CUSTOMER_EXTENSION_SETTING = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 5
        )
        CANNOT_CHANGE_FEED_ITEM_ON_CREATE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 6
        )
        CANNOT_UPDATE_NEWLY_CREATED_EXTENSION = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 7
        )
        NO_EXISTING_AD_GROUP_EXTENSION_SETTING_FOR_TYPE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 8
        )
        NO_EXISTING_CAMPAIGN_EXTENSION_SETTING_FOR_TYPE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 9
        )
        NO_EXISTING_CUSTOMER_EXTENSION_SETTING_FOR_TYPE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 10
        )
        AD_GROUP_EXTENSION_SETTING_ALREADY_EXISTS = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 11
        )
        CAMPAIGN_EXTENSION_SETTING_ALREADY_EXISTS = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 12
        )
        CUSTOMER_EXTENSION_SETTING_ALREADY_EXISTS = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 13
        )
        AD_GROUP_FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 14
        )
        CAMPAIGN_FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 15
        )
        CUSTOMER_FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 16
        )
        VALUE_OUT_OF_RANGE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 17
        )
        CANNOT_SET_FIELD_WITH_FINAL_URLS = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 18
        )
        FINAL_URLS_NOT_SET = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 19
        )
        INVALID_PHONE_NUMBER = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 20
        )
        PHONE_NUMBER_NOT_SUPPORTED_FOR_COUNTRY = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 21
        )
        CARRIER_SPECIFIC_SHORT_NUMBER_NOT_ALLOWED = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 22
        )
        PREMIUM_RATE_NUMBER_NOT_ALLOWED = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 23
        )
        DISALLOWED_NUMBER_TYPE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 24
        )
        INVALID_DOMESTIC_PHONE_NUMBER_FORMAT = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 25
        )
        VANITY_PHONE_NUMBER_NOT_ALLOWED = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 26
        )
        INVALID_COUNTRY_CODE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 27
        )
        INVALID_CALL_CONVERSION_TYPE_ID = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 28
        )
        CUSTOMER_NOT_WHITELISTED_FOR_CALLTRACKING = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 29
        )
        CALLTRACKING_NOT_SUPPORTED_FOR_COUNTRY = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 30
        )
        INVALID_APP_ID = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 31
        )
        QUOTES_IN_REVIEW_EXTENSION_SNIPPET = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 32
        )
        HYPHENS_IN_REVIEW_EXTENSION_SNIPPET = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 33
        )
        REVIEW_EXTENSION_SOURCE_NOT_ELIGIBLE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 34
        )
        SOURCE_NAME_IN_REVIEW_EXTENSION_TEXT = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 35
        )
        MISSING_FIELD = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 36
        )
        INCONSISTENT_CURRENCY_CODES = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 37
        )
        PRICE_EXTENSION_HAS_DUPLICATED_HEADERS = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 38
        )
        PRICE_ITEM_HAS_DUPLICATED_HEADER_AND_DESCRIPTION = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 39
        )
        PRICE_EXTENSION_HAS_TOO_FEW_ITEMS = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 40
        )
        PRICE_EXTENSION_HAS_TOO_MANY_ITEMS = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 41
        )
        UNSUPPORTED_VALUE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 42
        )
        INVALID_DEVICE_PREFERENCE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 43
        )
        INVALID_SCHEDULE_END = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 45
        )
        DATE_TIME_MUST_BE_IN_ACCOUNT_TIME_ZONE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 47
        )
        OVERLAPPING_SCHEDULES_NOT_ALLOWED = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 48
        )
        SCHEDULE_END_NOT_AFTER_START = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 49
        )
        TOO_MANY_SCHEDULES_PER_DAY = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 50
        )
        DUPLICATE_EXTENSION_FEED_ITEM_EDIT = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 51
        )
        INVALID_SNIPPETS_HEADER = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 52
        )
        PHONE_NUMBER_NOT_SUPPORTED_WITH_CALLTRACKING_FOR_COUNTRY = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 53
        )
        CAMPAIGN_TARGETING_MISMATCH = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 54
        )
        CANNOT_OPERATE_ON_REMOVED_FEED = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 55
        )
        EXTENSION_TYPE_REQUIRED = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 56
        )
        INCOMPATIBLE_UNDERLYING_MATCHING_FUNCTION = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 57
        )
        START_DATE_AFTER_END_DATE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 58
        )
        INVALID_PRICE_FORMAT = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 59
        )
        PROMOTION_INVALID_TIME = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 60
        )
        PROMOTION_CANNOT_SET_PERCENT_DISCOUNT_AND_MONEY_DISCOUNT = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 61
        )
        PROMOTION_CANNOT_SET_PROMOTION_CODE_AND_ORDERS_OVER_AMOUNT = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 62
        )
        TOO_MANY_DECIMAL_PLACES_SPECIFIED = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 63
        )
        INVALID_LANGUAGE_CODE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 64
        )
        UNSUPPORTED_LANGUAGE = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 65
        )
        CUSTOMER_CONSENT_FOR_CALL_RECORDING_REQUIRED = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 66
        )
        EXTENSION_SETTING_UPDATE_IS_A_NOOP = typing___cast(
            "ExtensionSettingErrorEnum.ExtensionSettingError", 67
        )
    UNSPECIFIED = typing___cast("ExtensionSettingErrorEnum.ExtensionSettingError", 0)
    UNKNOWN = typing___cast("ExtensionSettingErrorEnum.ExtensionSettingError", 1)
    EXTENSIONS_REQUIRED = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 2
    )
    FEED_TYPE_EXTENSION_TYPE_MISMATCH = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 3
    )
    INVALID_FEED_TYPE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 4
    )
    INVALID_FEED_TYPE_FOR_CUSTOMER_EXTENSION_SETTING = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 5
    )
    CANNOT_CHANGE_FEED_ITEM_ON_CREATE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 6
    )
    CANNOT_UPDATE_NEWLY_CREATED_EXTENSION = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 7
    )
    NO_EXISTING_AD_GROUP_EXTENSION_SETTING_FOR_TYPE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 8
    )
    NO_EXISTING_CAMPAIGN_EXTENSION_SETTING_FOR_TYPE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 9
    )
    NO_EXISTING_CUSTOMER_EXTENSION_SETTING_FOR_TYPE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 10
    )
    AD_GROUP_EXTENSION_SETTING_ALREADY_EXISTS = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 11
    )
    CAMPAIGN_EXTENSION_SETTING_ALREADY_EXISTS = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 12
    )
    CUSTOMER_EXTENSION_SETTING_ALREADY_EXISTS = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 13
    )
    AD_GROUP_FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 14
    )
    CAMPAIGN_FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 15
    )
    CUSTOMER_FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 16
    )
    VALUE_OUT_OF_RANGE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 17
    )
    CANNOT_SET_FIELD_WITH_FINAL_URLS = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 18
    )
    FINAL_URLS_NOT_SET = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 19
    )
    INVALID_PHONE_NUMBER = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 20
    )
    PHONE_NUMBER_NOT_SUPPORTED_FOR_COUNTRY = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 21
    )
    CARRIER_SPECIFIC_SHORT_NUMBER_NOT_ALLOWED = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 22
    )
    PREMIUM_RATE_NUMBER_NOT_ALLOWED = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 23
    )
    DISALLOWED_NUMBER_TYPE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 24
    )
    INVALID_DOMESTIC_PHONE_NUMBER_FORMAT = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 25
    )
    VANITY_PHONE_NUMBER_NOT_ALLOWED = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 26
    )
    INVALID_COUNTRY_CODE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 27
    )
    INVALID_CALL_CONVERSION_TYPE_ID = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 28
    )
    CUSTOMER_NOT_WHITELISTED_FOR_CALLTRACKING = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 29
    )
    CALLTRACKING_NOT_SUPPORTED_FOR_COUNTRY = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 30
    )
    INVALID_APP_ID = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 31
    )
    QUOTES_IN_REVIEW_EXTENSION_SNIPPET = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 32
    )
    HYPHENS_IN_REVIEW_EXTENSION_SNIPPET = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 33
    )
    REVIEW_EXTENSION_SOURCE_NOT_ELIGIBLE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 34
    )
    SOURCE_NAME_IN_REVIEW_EXTENSION_TEXT = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 35
    )
    MISSING_FIELD = typing___cast("ExtensionSettingErrorEnum.ExtensionSettingError", 36)
    INCONSISTENT_CURRENCY_CODES = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 37
    )
    PRICE_EXTENSION_HAS_DUPLICATED_HEADERS = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 38
    )
    PRICE_ITEM_HAS_DUPLICATED_HEADER_AND_DESCRIPTION = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 39
    )
    PRICE_EXTENSION_HAS_TOO_FEW_ITEMS = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 40
    )
    PRICE_EXTENSION_HAS_TOO_MANY_ITEMS = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 41
    )
    UNSUPPORTED_VALUE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 42
    )
    INVALID_DEVICE_PREFERENCE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 43
    )
    INVALID_SCHEDULE_END = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 45
    )
    DATE_TIME_MUST_BE_IN_ACCOUNT_TIME_ZONE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 47
    )
    OVERLAPPING_SCHEDULES_NOT_ALLOWED = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 48
    )
    SCHEDULE_END_NOT_AFTER_START = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 49
    )
    TOO_MANY_SCHEDULES_PER_DAY = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 50
    )
    DUPLICATE_EXTENSION_FEED_ITEM_EDIT = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 51
    )
    INVALID_SNIPPETS_HEADER = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 52
    )
    PHONE_NUMBER_NOT_SUPPORTED_WITH_CALLTRACKING_FOR_COUNTRY = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 53
    )
    CAMPAIGN_TARGETING_MISMATCH = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 54
    )
    CANNOT_OPERATE_ON_REMOVED_FEED = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 55
    )
    EXTENSION_TYPE_REQUIRED = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 56
    )
    INCOMPATIBLE_UNDERLYING_MATCHING_FUNCTION = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 57
    )
    START_DATE_AFTER_END_DATE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 58
    )
    INVALID_PRICE_FORMAT = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 59
    )
    PROMOTION_INVALID_TIME = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 60
    )
    PROMOTION_CANNOT_SET_PERCENT_DISCOUNT_AND_MONEY_DISCOUNT = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 61
    )
    PROMOTION_CANNOT_SET_PROMOTION_CODE_AND_ORDERS_OVER_AMOUNT = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 62
    )
    TOO_MANY_DECIMAL_PLACES_SPECIFIED = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 63
    )
    INVALID_LANGUAGE_CODE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 64
    )
    UNSUPPORTED_LANGUAGE = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 65
    )
    CUSTOMER_CONSENT_FOR_CALL_RECORDING_REQUIRED = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 66
    )
    EXTENSION_SETTING_UPDATE_IS_A_NOOP = typing___cast(
        "ExtensionSettingErrorEnum.ExtensionSettingError", 67
    )
    global___ExtensionSettingError = ExtensionSettingError
    def __init__(self,) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> ExtensionSettingErrorEnum: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> ExtensionSettingErrorEnum: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

global___ExtensionSettingErrorEnum = ExtensionSettingErrorEnum

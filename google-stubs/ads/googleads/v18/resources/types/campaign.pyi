import proto
from _typeshed import Incomplete
from google.ads.googleads.v18.common.types import bidding, custom_parameter, frequency_cap, real_time_bidding_setting as gagc_real_time_bidding_setting, targeting_setting as gagc_targeting_setting
from google.ads.googleads.v18.enums.types import ad_serving_optimization_status as gage_ad_serving_optimization_status, advertising_channel_sub_type as gage_advertising_channel_sub_type, advertising_channel_type as gage_advertising_channel_type, app_campaign_app_store, app_campaign_bidding_strategy_goal_type, asset_automation_status as gage_asset_automation_status, asset_automation_type as gage_asset_automation_type, asset_field_type, asset_set_type, bidding_strategy_system_status as gage_bidding_strategy_system_status, bidding_strategy_type as gage_bidding_strategy_type, brand_safety_suitability, campaign_experiment_type, campaign_keyword_match_type, campaign_primary_status, campaign_primary_status_reason, campaign_serving_status, campaign_status, listing_type as gage_listing_type, location_source_type as gage_location_source_type, negative_geo_target_type as gage_negative_geo_target_type, optimization_goal_type, payment_mode as gage_payment_mode, performance_max_upgrade_status, positive_geo_target_type as gage_positive_geo_target_type, vanity_pharma_display_url_mode as gage_vanity_pharma_display_url_mode, vanity_pharma_text as gage_vanity_pharma_text
from typing import MutableSequence

__protobuf__: Incomplete

class Campaign(proto.Message):
    class PerformanceMaxUpgrade(proto.Message):
        performance_max_campaign: str
        pre_upgrade_campaign: str
        status: performance_max_upgrade_status.PerformanceMaxUpgradeStatusEnum.PerformanceMaxUpgradeStatus
    class NetworkSettings(proto.Message):
        target_google_search: bool
        target_search_network: bool
        target_content_network: bool
        target_partner_search_network: bool
        target_youtube: bool
        target_google_tv_network: bool
    class HotelSettingInfo(proto.Message):
        hotel_center_id: int
    class DynamicSearchAdsSetting(proto.Message):
        domain_name: str
        language_code: str
        use_supplied_urls_only: bool
        feeds: MutableSequence[str]
    class ShoppingSetting(proto.Message):
        merchant_id: int
        feed_label: str
        campaign_priority: int
        enable_local: bool
        use_vehicle_inventory: bool
        advertising_partner_ids: MutableSequence[int]
        disable_product_feed: bool
    class TrackingSetting(proto.Message):
        tracking_url: str
    class GeoTargetTypeSetting(proto.Message):
        positive_geo_target_type: gage_positive_geo_target_type.PositiveGeoTargetTypeEnum.PositiveGeoTargetType
        negative_geo_target_type: gage_negative_geo_target_type.NegativeGeoTargetTypeEnum.NegativeGeoTargetType
    class LocalCampaignSetting(proto.Message):
        location_source_type: gage_location_source_type.LocationSourceTypeEnum.LocationSourceType
    class AppCampaignSetting(proto.Message):
        bidding_strategy_goal_type: app_campaign_bidding_strategy_goal_type.AppCampaignBiddingStrategyGoalTypeEnum.AppCampaignBiddingStrategyGoalType
        app_id: str
        app_store: app_campaign_app_store.AppCampaignAppStoreEnum.AppCampaignAppStore
    class VanityPharma(proto.Message):
        vanity_pharma_display_url_mode: gage_vanity_pharma_display_url_mode.VanityPharmaDisplayUrlModeEnum.VanityPharmaDisplayUrlMode
        vanity_pharma_text: gage_vanity_pharma_text.VanityPharmaTextEnum.VanityPharmaText
    class SelectiveOptimization(proto.Message):
        conversion_actions: MutableSequence[str]
    class OptimizationGoalSetting(proto.Message):
        optimization_goal_types: MutableSequence[optimization_goal_type.OptimizationGoalTypeEnum.OptimizationGoalType]
    class AudienceSetting(proto.Message):
        use_audience_grouped: bool
    class LocalServicesCampaignSettings(proto.Message):
        category_bids: MutableSequence['Campaign.CategoryBid']
    class CategoryBid(proto.Message):
        category_id: str
        manual_cpa_bid_micros: int
        target_cpa_bid_micros: int
    class TravelCampaignSettings(proto.Message):
        travel_account_id: int
    class DemandGenCampaignSettings(proto.Message):
        upgraded_targeting: bool
    class VideoCampaignSettings(proto.Message):
        class VideoAdInventoryControl(proto.Message):
            allow_in_stream: bool
            allow_in_feed: bool
            allow_shorts: bool
        video_ad_inventory_control: Campaign.VideoCampaignSettings.VideoAdInventoryControl
    class AssetAutomationSetting(proto.Message):
        asset_automation_type: gage_asset_automation_type.AssetAutomationTypeEnum.AssetAutomationType
        asset_automation_status: gage_asset_automation_status.AssetAutomationStatusEnum.AssetAutomationStatus
    resource_name: str
    id: int
    name: str
    primary_status: campaign_primary_status.CampaignPrimaryStatusEnum.CampaignPrimaryStatus
    primary_status_reasons: MutableSequence[campaign_primary_status_reason.CampaignPrimaryStatusReasonEnum.CampaignPrimaryStatusReason]
    status: campaign_status.CampaignStatusEnum.CampaignStatus
    serving_status: campaign_serving_status.CampaignServingStatusEnum.CampaignServingStatus
    bidding_strategy_system_status: gage_bidding_strategy_system_status.BiddingStrategySystemStatusEnum.BiddingStrategySystemStatus
    ad_serving_optimization_status: gage_ad_serving_optimization_status.AdServingOptimizationStatusEnum.AdServingOptimizationStatus
    advertising_channel_type: gage_advertising_channel_type.AdvertisingChannelTypeEnum.AdvertisingChannelType
    advertising_channel_sub_type: gage_advertising_channel_sub_type.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType
    tracking_url_template: str
    url_custom_parameters: MutableSequence[custom_parameter.CustomParameter]
    local_services_campaign_settings: LocalServicesCampaignSettings
    travel_campaign_settings: TravelCampaignSettings
    demand_gen_campaign_settings: DemandGenCampaignSettings
    video_campaign_settings: VideoCampaignSettings
    real_time_bidding_setting: gagc_real_time_bidding_setting.RealTimeBiddingSetting
    network_settings: NetworkSettings
    hotel_setting: HotelSettingInfo
    dynamic_search_ads_setting: DynamicSearchAdsSetting
    shopping_setting: ShoppingSetting
    targeting_setting: gagc_targeting_setting.TargetingSetting
    audience_setting: AudienceSetting
    geo_target_type_setting: GeoTargetTypeSetting
    local_campaign_setting: LocalCampaignSetting
    app_campaign_setting: AppCampaignSetting
    labels: MutableSequence[str]
    experiment_type: campaign_experiment_type.CampaignExperimentTypeEnum.CampaignExperimentType
    base_campaign: str
    campaign_budget: str
    bidding_strategy_type: gage_bidding_strategy_type.BiddingStrategyTypeEnum.BiddingStrategyType
    accessible_bidding_strategy: str
    start_date: str
    campaign_group: str
    end_date: str
    final_url_suffix: str
    frequency_caps: MutableSequence[frequency_cap.FrequencyCapEntry]
    video_brand_safety_suitability: brand_safety_suitability.BrandSafetySuitabilityEnum.BrandSafetySuitability
    vanity_pharma: VanityPharma
    selective_optimization: SelectiveOptimization
    optimization_goal_setting: OptimizationGoalSetting
    tracking_setting: TrackingSetting
    payment_mode: gage_payment_mode.PaymentModeEnum.PaymentMode
    optimization_score: float
    excluded_parent_asset_field_types: MutableSequence[asset_field_type.AssetFieldTypeEnum.AssetFieldType]
    excluded_parent_asset_set_types: MutableSequence[asset_set_type.AssetSetTypeEnum.AssetSetType]
    url_expansion_opt_out: bool
    performance_max_upgrade: PerformanceMaxUpgrade
    hotel_property_asset_set: str
    listing_type: gage_listing_type.ListingTypeEnum.ListingType
    asset_automation_settings: MutableSequence[AssetAutomationSetting]
    keyword_match_type: campaign_keyword_match_type.CampaignKeywordMatchTypeEnum.CampaignKeywordMatchType
    brand_guidelines_enabled: bool
    bidding_strategy: str
    commission: bidding.Commission
    manual_cpa: bidding.ManualCpa
    manual_cpc: bidding.ManualCpc
    manual_cpm: bidding.ManualCpm
    manual_cpv: bidding.ManualCpv
    maximize_conversions: bidding.MaximizeConversions
    maximize_conversion_value: bidding.MaximizeConversionValue
    target_cpa: bidding.TargetCpa
    target_impression_share: bidding.TargetImpressionShare
    target_roas: bidding.TargetRoas
    target_spend: bidding.TargetSpend
    percent_cpc: bidding.PercentCpc
    target_cpm: bidding.TargetCpm
    fixed_cpm: bidding.FixedCpm
    target_cpv: bidding.TargetCpv
